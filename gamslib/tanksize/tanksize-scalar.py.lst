GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:30:34 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  option MINLP=convert;
   2  option MINLP=convert;
   3  option MINLP=convert;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:30:34 Page 2
Tank Size Design Problem - (TANKSIZE,SEQ=350)
C o m p i l a t i o n


   5   
      We discuss a tank design problem for a multi product plant, in which the
      optimal cycle time and the optimal campaign size are unknown. A mixed in-
      teger nonlinear programming formulation is presented, where non-convexities
      are due to the tank investment cost, storage cost, campaign setup cost and
      variable production rates. The objective of the optimization model is to
      minimize the sum of the production cost per ton per product produced. A
      continuous-time mathematical programming formulation for the problem is
      implemented with a fixed number of event points.
       
       
      Rebennack, S, Kallrath, J, and Pardalos, P M, Optimal Storage Design
      for a Multi-Product Plant: A Non-Convex MINLP Formulation. Tech. rep.,
      University of Florida, 2009. Submitted to Computers and Chemical
      Engineering
  22   
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:30:34 Page 3
Tank Size Design Problem - (TANKSIZE,SEQ=350)
Define the model size and data


  25  Sets
  26     p   products        / P1*P3 /
  27     n   event points    / N1*N3 /;
  28   
  29  Parameters
  30     PRMIN(p)  volume flow of products in m^3 per day
  31     PRMAX(p)  volume flow of products in m^3 per day
  32     SLB(p)    lower bound on inventory in m^3
  33     SUB(p)    upper bound on inventory in m^3
  34     SI(p)     initial inventory in m^3 (10% of the lower bound)
  35     DLB(p)    lower bound on PRODUCTION length d(n)
  36     DUB(p)    upper bound on PRODUCTION length d(n)
  37     DEMAND(p) volume flow of products in m^3 per year!!
  38     TS(p)     campaign setup times in days
  39     CSTI(p)   tank variable cost per ton
  40     CSTC(p)   campaign setup cost
  41     B         variable part of the tank investment cost   / 0.3271 /;
  42   
  43  Table pdata(p,*)
  44      prmin  prmax  slb     sub       si     dlb  dub  demand  ts   csti      cstc
  45  P1  15.0   50.0   643.0   4018.36   707.0  1    40   4190    0.4  18.8304   10
  46  P2  15.0   50.0   536.0   3348.63   589.0  1    40   3492    0.2  19.2934   20
  47  P3   7.0   50.0   214.0   1339.45   235.0  1    40   1397    0.1  19.7563   30
  48  ;
  49   
BATINCLUDE /home/renigijus/gams/opt-mod-lib/gamslib/tanksize/assignpar.gms
  58  prmin(p) = pdata(p,'prmin');
  62  prmax(p) = pdata(p,'prmax');
  66  slb(p) = pdata(p,'slb');
  70  sub(p) = pdata(p,'sub');
  74  si(p) = pdata(p,'si');
  78  dlb(p) = pdata(p,'dlb');
  82  dub(p) = pdata(p,'dub');
  86  demand(p) = pdata(p,'demand');
  90  ts(p) = pdata(p,'ts');
  94  csti(p) = pdata(p,'csti');
  98  cstc(p) = pdata(p,'cstc');
 101   
 102  * Derived data
 103  Parameters
 104     DPD(p)  compute the demand per day per product [tons per day]
 105     L       compute the demand per day [tons per day]
 106     CAL     longest campain
 107     PRL     maximum production length
 108     CSTCMin minimum setup cost
 109     CSTCMax maximum setup cost;
 110   
 111  DPD(p)  = DEMAND(p) / 365;
 112  L       = sum(p, DPD(p));
 113  CSTI(p) = CSTI(p) / 365 ; // scale the storage cost
 114  CAL     = max(0, smax(p, DUB(p) + TS(p)));
 115  PRL     = max(0, smax(p, DUB(p)));
 116  CSTCMin = smin(p, CSTC(p));
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:30:34 Page 4
Tank Size Design Problem - (TANKSIZE,SEQ=350)
Define the model size and data


 117  CSTCMax = smax(p, CSTC(p));
 118   
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:30:34 Page 5
Tank Size Design Problem - (TANKSIZE,SEQ=350)
Model formulation


 120  Alias(p,pp);
 121  Positive variables
 122     d(n)            duration of the campaigns
 123     pC(p,n)         amount of product p produced in campaign n
 124     s(p,n)          amount of product p stored at the beginning of campaign n
 125     sM(p)           size of the product tanks in tons
 126     sH(p,n)         auxiliary variables
 127     cI              investment costs
 128     cC              campaign setup costs
 129     cS              variable storage costs
 130     T               cycle time;
 131  Binary Variables
 132     omega(p,n)      binary variable indicating product in campaign;
 133  Variables
 134     cPT             cost per ton: the objective variable to minimize;
 135   
 136  Equations
 137     TIMECAP         time capacity
 138     UNIQUE(n)       at most one product per campaign
 139     MATBAL(p,n)     material balance constraint
 140     TANKCAP(p,n)    tank capacity constraint
 141     PPN1(p,n)       compute the nonlinear products pR(rp)*d(n)*omega
 142     PPN2(p,n)       compute the nonlinear products pR(rp)*d(n)*omega
 143     SCCam1(n)       semi-continuous bound on campaigns
 144     SCCam2(n)       semi-continuous bound on campaigns
 145     DEFcC           campaign setup costs
 146     DEFcI           investment cost
 147     DEFcS           variable storage costs
 148     DefsH(p,n)      define the auxiliary variables
 149     DEFcPT          total costs per ton produced
 150     NONIDLE(n)      force not to be idle;
 151   
 152   
 153  * time balance constraint with unknown cycle time T
 154  TIMECAP..        sum(n, d(n) + sum (p, TS(p)*omega(p,n))) =e= T;
 155   
 156  * at most one product per campaign
 157  UNIQUE(n)..      sum(p, omega(p,n)) =l= 1;
 158   
 159  * no idle states are allowed
 160  NONIDLE(n)..     sum(p, DUB(p)*omega(p,n)) =g= d(n);
 161   
 162  * material balance equation (steady state):
 163  * storage at end of n for product p = storage at start of n+1 for product p
 164  * storage at end of n for product p = storage at start of n
 165  *                                     + total production of product p in n
 166  *                                     - total demand in period n
 167  MATBAL(p,n)..
 168   s(p,n++1) =e= s(p,n) + pC(p,n) - DPD(p)*(d(n) + sum (pp, TS(pp)*omega(pp,n)));
 169   
 170  * tank capacity constraint:
 171  * this connects the tank desing capacity variable with the storage level
 172  TANKCAP(p,n)..   s(p,n) =l= sM(p);
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:30:34 Page 6
Tank Size Design Problem - (TANKSIZE,SEQ=350)
Model formulation


 173   
 174  * compute the nonlinear products: pR(p,n)*d(n)*omega
 175  * connects the production of product p in period n with
 176  *  -> the omega variables
 177  *  -> the lenght of the PRODUCTION period
 178  *  -> the production rate
 179  *  PPN(p,n).. pC(p,nbl(n)) =e= pR(p,n)*d(n)*omega(p,n);
 180  PPN1(p,n)..      pC(p,n) =l= PRMAX(p)*d(n)*omega(p,n);
 181  PPN2(p,n)..      pC(p,n) =g= PRMIN(p)*d(n)*omega(p,n);
 182   
 183  * semi-continuous lower and upper bound on campaigns
 184  SCCam2(n)..      d(n) =g= sum(p, DLB(p)*omega(p,n));
 185  SCCam1(n)..      d(n) =l= sum(p, DUB(p)*omega(p,n));
 186   
 187  * define the total costs per ton: cPT
 188  DEFcPT..         (cPT*L - cI )*T =e= cC + cS;
 189   
 190  * define the campaign setup costs
 191  DEFcC..          cC =e= sum((p,n), CSTC(p)*omega(p,n));
 192   
 193  * define the tank investment costs
 194  DEFcI..          cI =e= B*sum(p, sqrt(sM(p)));
 195   
 196  * define the variable tank costs
 197  DEFcS..          cS =e= sum((p,n), CSTI(p)*sH(p,n)
 198                                     *(d(n) + sum(pp, TS(pp)*omega(pp,n))));
 199   
 200  * auxiliary variables for the objective
 201  DefsH(p,n)..     sH(p,n) =e= 0.5*(s(p,n++1) + s(p,n)) - SLB(p);
 202   
 203  * additional constraints to break symmetry
 204  Equations
 205     SEQUENCE(p,n)   redundant consteraint on the omega
 206     SYMMETRY(n)      break the symmetry of active campaigns;
 207   
 208  * if a product is produced during period n, then it cannot be produced during
 209  * period n+1
 210  SEQUENCE(p,n)..  1 - omega(p,n) =g= omega(p,n+1);
 211   
 212  * break symmetry buy shift empty periods to the end
 213  SYMMETRY(n)..    sum(p, omega(p,n)) =g= sum(p, omega(p,n+1));
 214   
 215  Model Sequenz /all/;
 216   
 217  * lower und upper bound on inventory
 218  s.lo(p,n) =  SLB(p);
 219  s.up(p,n) =  SUB(p);
 220   
 221  * initial storage
 222  s.fx('P1','N1') =  SLB('P1') ;
 223   
 224  * the inital storage has some implications
 225  omega.fx(p,'N1') = 0;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:30:34 Page 7
Tank Size Design Problem - (TANKSIZE,SEQ=350)
Model formulation


 226  omega.fx('P1','N1') = 1;
 227  omega.fx('P1','N2') = 0;
 228   
 229  * lower and upper bound on tank size
 230  sM.lo(p) = SLB(p);
 231  sM.up(p) = SUB(p);
 232   
 233  * Get out of the poor starting point
 234  omega.l(p,n) = uniform(0,1);
 235  Solve Sequenz using minlp minimizing cPT;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:30:34 Page 8
Tank Size Design Problem - (TANKSIZE,SEQ=350)
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  /home/renigijus/gams/opt-mod-lib/gamslib/tanksize/tanksize.gms
     2       56 BATINCLUDE     1      56  ./home/renigijus/gams/opt-mod-lib/gamslib/tanksize/assignpar.gms


COMPILATION TIME     =        0.002 SECONDS      3 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:30:34 Page 9
Tank Size Design Problem - (TANKSIZE,SEQ=350)
Equation Listing    SOLVE Sequenz Using MINLP From line 235


---- TIMECAP  =E=  time capacity

TIMECAP..  d(N1) + d(N2) + d(N3) - T + 0.4*omega(P1,N1) + 0.4*omega(P1,N2) + 0.4*omega(P1,N3) + 0.2*omega(P2,N1) + 0.2*omega(P2,N2) + 0.2*omega(P2,N3) + 0.1*omega(P3,N1) + 0.1*omega(P3,N2) + 0.1*omega(P3,N3) =E= 0 ;
     
      (LHS = 0.8157415462, INFES = 0.8157415462 ****)
     

---- UNIQUE  =L=  at most one product per campaign

UNIQUE(N1)..  omega(P1,N1) + omega(P2,N1) + omega(P3,N1) =L= 1 ; (LHS = 1)
     
UNIQUE(N2)..  omega(P1,N2) + omega(P2,N2) + omega(P3,N2) =L= 1 ; (LHS = 1.148482464, INFES = 0.148482464 ****)
     
UNIQUE(N3)..  omega(P1,N3) + omega(P2,N3) + omega(P3,N3) =L= 1 ; (LHS = 0.841541946)
     

---- MATBAL  =E=  material balance constraint

MATBAL(P1,N1)..  11.4794520547945*d(N1) - pC(P1,N1) - s(P1,N1) + s(P1,N2) + 4.59178082191781*omega(P1,N1) + 2.2958904109589*omega(P2,N1) + 1.14794520547945*omega(P3,N1) =E= 0 ; (LHS = 4.59178082191784, INFES = 4.59178082191784 ****)
     
MATBAL(P1,N2)..  11.4794520547945*d(N2) - pC(P1,N2) - s(P1,N2) + s(P1,N3) + 4.59178082191781*omega(P1,N2) + 2.2958904109589*omega(P2,N2) + 1.14794520547945*omega(P3,N2) =E= 0 ; (LHS = 1.65383843681923, INFES = 1.65383843681923 ****)
     
MATBAL(P1,N3)..  11.4794520547945*d(N3) - pC(P1,N3) + s(P1,N1) - s(P1,N3) + 4.59178082191781*omega(P1,N3) + 2.2958904109589*omega(P2,N3) + 1.14794520547945*omega(P3,N3) =E= 0 ; (LHS = 3.11864670996988, INFES = 3.11864670996988 ****)
     
REMAINING 6 ENTRIES SKIPPED


---- TANKCAP  =L=  tank capacity constraint

TANKCAP(P1,N1)..  s(P1,N1) - sM(P1) =L= 0 ; (LHS = 0)
     
TANKCAP(P1,N2)..  s(P1,N2) - sM(P1) =L= 0 ; (LHS = 0)
     
TANKCAP(P1,N3)..  s(P1,N3) - sM(P1) =L= 0 ; (LHS = 0)
     
REMAINING 6 ENTRIES SKIPPED


---- PPN1  =L=  compute the nonlinear products pR(rp)*d(n)*omega

PPN1(P1,N1)..  - (50)*d(N1) + pC(P1,N1) + (0)*omega(P1,N1) =L= 0 ; (LHS = 0)
     
PPN1(P1,N2)..  (0)*d(N2) + pC(P1,N2) + (0)*omega(P1,N2) =L= 0 ; (LHS = 0)
     
PPN1(P1,N3)..  - (27.5187678)*d(N3) + pC(P1,N3) + (0)*omega(P1,N3) =L= 0 ; (LHS = 0)
     
REMAINING 6 ENTRIES SKIPPED

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:30:34 Page 10
Tank Size Design Problem - (TANKSIZE,SEQ=350)
Equation Listing    SOLVE Sequenz Using MINLP From line 235


---- PPN2  =G=  compute the nonlinear products pR(rp)*d(n)*omega

PPN2(P1,N1)..  - (15)*d(N1) + pC(P1,N1) + (0)*omega(P1,N1) =G= 0 ; (LHS = 0)
     
PPN2(P1,N2)..  (0)*d(N2) + pC(P1,N2) + (0)*omega(P1,N2) =G= 0 ; (LHS = 0)
     
PPN2(P1,N3)..  - (8.25563034)*d(N3) + pC(P1,N3) + (0)*omega(P1,N3) =G= 0 ; (LHS = 0)
     
REMAINING 6 ENTRIES SKIPPED


---- SCCam1  =L=  semi-continuous bound on campaigns

SCCam1(N1)..  d(N1) - 40*omega(P1,N1) - 40*omega(P2,N1) - 40*omega(P3,N1) =L= 0 ; (LHS = -40)
     
SCCam1(N2)..  d(N2) - 40*omega(P1,N2) - 40*omega(P2,N2) - 40*omega(P3,N2) =L= 0 ; (LHS = -45.93929856)
     
SCCam1(N3)..  d(N3) - 40*omega(P1,N3) - 40*omega(P2,N3) - 40*omega(P3,N3) =L= 0 ; (LHS = -33.66167784)
     

---- SCCam2  =G=  semi-continuous bound on campaigns

SCCam2(N1)..  d(N1) - omega(P1,N1) - omega(P2,N1) - omega(P3,N1) =G= 0 ; (LHS = -1, INFES = 1 ****)
     
SCCam2(N2)..  d(N2) - omega(P1,N2) - omega(P2,N2) - omega(P3,N2) =G= 0 ; (LHS = -1.148482464, INFES = 1.148482464 ****)
     
SCCam2(N3)..  d(N3) - omega(P1,N3) - omega(P2,N3) - omega(P3,N3) =G= 0 ; (LHS = -0.841541946, INFES = 0.841541946 ****)
     

---- DEFcC  =E=  campaign setup costs

DEFcC..  cC - 10*omega(P1,N1) - 10*omega(P1,N2) - 10*omega(P1,N3) - 20*omega(P2,N1) - 20*omega(P2,N2) - 20*omega(P2,N3) - 30*omega(P3,N1) - 30*omega(P3,N2) - 30*omega(P3,N3) =E= 0 ; (LHS = -53.53057534, INFES = 53.53057534 ****)
     

---- DEFcI  =E=  investment cost

DEFcI..  - (0.0064497823874945)*sM(P1) - (0.00706428405019157)*sM(P2) - (0.0111800478364884)*sM(P3) + cI =E= 0 ; (LHS = -20.6523931261403, INFES = 20.6523931261403 ****)
     

---- DEFcS  =E=  variable storage costs

DEFcS..  (0)*d(N1) + (0)*d(N2) + (0)*d(N3) - (0.0206360547945206)*sH(P1,N1) - (0.00743256307892121)*sH(P1,N2) - (0.0140156002404335)*sH(P1,N3) - (0.0211434520547945)*sH(P2,N1) - (0.00761531419974394)*sH(P2,N2) - (0.0143602144234207)*sH(P2,N3)
     
      - (0.0216507397260274)*sH(P3,N1) - (0.00779802584948227)*sH(P3,N2) - (0.0147047541756987)*sH(P3,N3) + cS + (0)*omega(P1,N1) + (0)*omega(P1,N2) + (0)*omega(P1,N3) + (0)*omega(P2,N1) + (0)*omega(P2,N2) + (0)*omega(P2,N3) + (0)*omega(P3,N1)
     
      + (0)*omega(P3,N2) + (0)*omega(P3,N3) =E= 0 ; (LHS = 0)
     

---- DefsH  =E=  define the auxiliary variables

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:30:34 Page 11
Tank Size Design Problem - (TANKSIZE,SEQ=350)
Equation Listing    SOLVE Sequenz Using MINLP From line 235


     DefsH  =E=  define the auxiliary variables

DefsH(P1,N1)..  - 0.5*s(P1,N1) - 0.5*s(P1,N2) + sH(P1,N1) =E= -643 ; (LHS = -643)
     
DefsH(P1,N2)..  - 0.5*s(P1,N2) - 0.5*s(P1,N3) + sH(P1,N2) =E= -643 ; (LHS = -643)
     
DefsH(P1,N3)..  - 0.5*s(P1,N1) - 0.5*s(P1,N3) + sH(P1,N3) =E= -643 ; (LHS = -643)
     
REMAINING 6 ENTRIES SKIPPED


---- DEFcPT  =E=  total costs per ton produced

DEFcPT..  (0)*cI - cC - cS + (0)*T + (0)*cPT =E= 0 ; (LHS = 0)
     

---- NONIDLE  =G=  force not to be idle

NONIDLE(N1)..  - d(N1) + 40*omega(P1,N1) + 40*omega(P2,N1) + 40*omega(P3,N1) =G= 0 ; (LHS = 40)
     
NONIDLE(N2)..  - d(N2) + 40*omega(P1,N2) + 40*omega(P2,N2) + 40*omega(P3,N2) =G= 0 ; (LHS = 45.93929856)
     
NONIDLE(N3)..  - d(N3) + 40*omega(P1,N3) + 40*omega(P2,N3) + 40*omega(P3,N3) =G= 0 ; (LHS = 33.66167784)
     

---- SEQUENCE  =G=  redundant consteraint on the omega

SEQUENCE(P1,N1)..  - omega(P1,N1) - omega(P1,N2) =G= -1 ; (LHS = -1)
     
SEQUENCE(P1,N2)..  - omega(P1,N2) - omega(P1,N3) =G= -1 ; (LHS = -0.550375356)
     
SEQUENCE(P1,N3)..  - omega(P1,N3) =G= -1 ; (LHS = -0.550375356)
     
REMAINING 6 ENTRIES SKIPPED


---- SYMMETRY  =G=  break the symmetry of active campaigns

SYMMETRY(N1)..  omega(P1,N1) - omega(P1,N2) + omega(P2,N1) - omega(P2,N2) + omega(P3,N1) - omega(P3,N2) =G= 0 ; (LHS = -0.148482464, INFES = 0.148482464 ****)
     
SYMMETRY(N2)..  omega(P1,N2) - omega(P1,N3) + omega(P2,N2) - omega(P2,N3) + omega(P3,N2) - omega(P3,N3) =G= 0 ; (LHS = 0.306940518)
     
SYMMETRY(N3)..  omega(P1,N3) + omega(P2,N3) + omega(P3,N3) =G= 0 ; (LHS = 0.841541946)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:30:34 Page 12
Tank Size Design Problem - (TANKSIZE,SEQ=350)
Column Listing      SOLVE Sequenz Using MINLP From line 235


---- d  duration of the campaigns

d(N1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       TIMECAP
       11.4795  MATBAL(P1,N1)
        9.5671  MATBAL(P2,N1)
        3.8274  MATBAL(P3,N1)
     (-50)      PPN1(P1,N1)
       (0)      PPN1(P2,N1)
       (0)      PPN1(P3,N1)
     (-15)      PPN2(P1,N1)
       (0)      PPN2(P2,N1)
       (0)      PPN2(P3,N1)
        1       SCCam1(N1)
        1       SCCam2(N1)
       (0)      DEFcS
       -1       NONIDLE(N1)

d(N2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       TIMECAP
       11.4795  MATBAL(P1,N2)
        9.5671  MATBAL(P2,N2)
        3.8274  MATBAL(P3,N2)
       (0)      PPN1(P1,N2)
     (-14.6106) PPN1(P2,N2)
     (-42.8135) PPN1(P3,N2)
       (0)      PPN2(P1,N2)
      (-4.3832) PPN2(P2,N2)
      (-5.9939) PPN2(P3,N2)
        1       SCCam1(N2)
        1       SCCam2(N2)
       (0)      DEFcS
       -1       NONIDLE(N2)

d(N3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       TIMECAP
       11.4795  MATBAL(P1,N3)
        9.5671  MATBAL(P2,N3)
        3.8274  MATBAL(P3,N3)
     (-27.5188) PPN1(P1,N3)
     (-11.2026) PPN1(P2,N3)
      (-3.3557) PPN1(P3,N3)
      (-8.2556) PPN2(P1,N3)
      (-3.3608) PPN2(P2,N3)
      (-0.4698) PPN2(P3,N3)
        1       SCCam1(N3)
        1       SCCam2(N3)
       (0)      DEFcS
       -1       NONIDLE(N3)

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:30:34 Page 13
Tank Size Design Problem - (TANKSIZE,SEQ=350)
Column Listing      SOLVE Sequenz Using MINLP From line 235


---- pC  amount of product p produced in campaign n

pC(P1,N1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       MATBAL(P1,N1)
        1       PPN1(P1,N1)
        1       PPN2(P1,N1)

pC(P1,N2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       MATBAL(P1,N2)
        1       PPN1(P1,N2)
        1       PPN2(P1,N2)

pC(P1,N3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       MATBAL(P1,N3)
        1       PPN1(P1,N3)
        1       PPN2(P1,N3)

REMAINING 6 ENTRIES SKIPPED

---- s  amount of product p stored at the beginning of campaign n

s(P1,N1)
                (.LO, .L, .UP, .M = 643, 643, 643, 0)
       -1       MATBAL(P1,N1)
        1       MATBAL(P1,N3)
        1       TANKCAP(P1,N1)
       -0.5     DefsH(P1,N1)
       -0.5     DefsH(P1,N3)

s(P1,N2)
                (.LO, .L, .UP, .M = 643, 643, 4018.36, 0)
        1       MATBAL(P1,N1)
       -1       MATBAL(P1,N2)
        1       TANKCAP(P1,N2)
       -0.5     DefsH(P1,N1)
       -0.5     DefsH(P1,N2)
        0       (OLD LEVEL ****)

s(P1,N3)
                (.LO, .L, .UP, .M = 643, 643, 4018.36, 0)
        1       MATBAL(P1,N2)
       -1       MATBAL(P1,N3)
        1       TANKCAP(P1,N3)
       -0.5     DefsH(P1,N2)
       -0.5     DefsH(P1,N3)
        0       (OLD LEVEL ****)

REMAINING 6 ENTRIES SKIPPED
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:30:34 Page 14
Tank Size Design Problem - (TANKSIZE,SEQ=350)
Column Listing      SOLVE Sequenz Using MINLP From line 235


---- sM  size of the product tanks in tons

sM(P1)
                (.LO, .L, .UP, .M = 643, 643, 4018.36, 0)
       -1       TANKCAP(P1,N1)
       -1       TANKCAP(P1,N2)
       -1       TANKCAP(P1,N3)
      (-0.0064) DEFcI
        0       (OLD LEVEL ****)

sM(P2)
                (.LO, .L, .UP, .M = 536, 536, 3348.63, 0)
       -1       TANKCAP(P2,N1)
       -1       TANKCAP(P2,N2)
       -1       TANKCAP(P2,N3)
      (-0.0071) DEFcI
        0       (OLD LEVEL ****)

sM(P3)
                (.LO, .L, .UP, .M = 214, 214, 1339.45, 0)
       -1       TANKCAP(P3,N1)
       -1       TANKCAP(P3,N2)
       -1       TANKCAP(P3,N3)
      (-0.0112) DEFcI
        0       (OLD LEVEL ****)


---- sH  auxiliary variables

sH(P1,N1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
      (-0.0206) DEFcS
        1       DefsH(P1,N1)

sH(P1,N2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
      (-0.0074) DEFcS
        1       DefsH(P1,N2)

sH(P1,N3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
      (-0.014)  DEFcS
        1       DefsH(P1,N3)

REMAINING 6 ENTRIES SKIPPED

---- cI  investment costs

cI
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       DEFcI
       (0)      DEFcPT

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:30:34 Page 15
Tank Size Design Problem - (TANKSIZE,SEQ=350)
Column Listing      SOLVE Sequenz Using MINLP From line 235


---- cC  campaign setup costs

cC
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       DEFcC
       -1       DEFcPT


---- cS  variable storage costs

cS
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       DEFcS
       -1       DEFcPT


---- T  cycle time

T
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       TIMECAP
       (0)      DEFcPT


---- omega  binary variable indicating product in campaign

omega(P1,N1)
                (.LO, .L, .UP, .M = 1, 1, 1, 0)
        0.4     TIMECAP
        1       UNIQUE(N1)
        4.5918  MATBAL(P1,N1)
        3.8268  MATBAL(P2,N1)
        1.531   MATBAL(P3,N1)
       (0)      PPN1(P1,N1)
       (0)      PPN2(P1,N1)
      -40       SCCam1(N1)
       -1       SCCam2(N1)
      -10       DEFcC
       (0)      DEFcS
       40       NONIDLE(N1)
       -1       SEQUENCE(P1,N1)
        1       SYMMETRY(N1)
        0.1717  (OLD LEVEL ****)

omega(P1,N2)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        0.4     TIMECAP
        1       UNIQUE(N2)
        4.5918  MATBAL(P1,N2)
        3.8268  MATBAL(P2,N2)
        1.531   MATBAL(P3,N2)
       (0)      PPN1(P1,N2)
       (0)      PPN2(P1,N2)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:30:34 Page 16
Tank Size Design Problem - (TANKSIZE,SEQ=350)
Column Listing      SOLVE Sequenz Using MINLP From line 235


     omega  binary variable indicating product in campaign

      -40       SCCam1(N2)
       -1       SCCam2(N2)
      -10       DEFcC
       (0)      DEFcS
       40       NONIDLE(N2)
       -1       SEQUENCE(P1,N1)
       -1       SEQUENCE(P1,N2)
       -1       SYMMETRY(N1)
        1       SYMMETRY(N2)
        0.8433  (OLD LEVEL ****)

omega(P1,N3)
                (.LO, .L, .UP, .M = 0, 0.550375356, 1, 0)
        0.4     TIMECAP
        1       UNIQUE(N3)
        4.5918  MATBAL(P1,N3)
        3.8268  MATBAL(P2,N3)
        1.531   MATBAL(P3,N3)
       (0)      PPN1(P1,N3)
       (0)      PPN2(P1,N3)
      -40       SCCam1(N3)
       -1       SCCam2(N3)
      -10       DEFcC
       (0)      DEFcS
       40       NONIDLE(N3)
       -1       SEQUENCE(P1,N2)
       -1       SEQUENCE(P1,N3)
       -1       SYMMETRY(N2)
        1       SYMMETRY(N3)

REMAINING 6 ENTRIES SKIPPED

---- cPT  cost per ton: the objective variable to minimize

cPT
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       (0)      DEFcPT

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:30:34 Page 17
Tank Size Design Problem - (TANKSIZE,SEQ=350)
Model Statistics    SOLVE Sequenz Using MINLP From line 235


MODEL STATISTICS

BLOCKS OF EQUATIONS          16     SINGLE EQUATIONS           74
BLOCKS OF VARIABLES          11     SINGLE VARIABLES           47  15 projected
NON ZERO ELEMENTS           291     NON LINEAR N-Z             63
DERIVATIVE POOL              20     CONSTANT POOL              26
CODE LENGTH                 227     DISCRETE VARIABLES          5


GENERATION TIME      =        0.003 SECONDS      4 MB  24.7.4 r58773 LEX-LEG


EXECUTION TIME       =        0.003 SECONDS      4 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:30:34 Page 18
Tank Size Design Problem - (TANKSIZE,SEQ=350)
Solution Report     SOLVE Sequenz Using MINLP From line 235


               S O L V E      S U M M A R Y

     MODEL   Sequenz             OBJECTIVE  cPT
     TYPE    MINLP               DIRECTION  MINIMIZE
     SOLVER  CONVERT             FROM LINE  235

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      14 No Solution Returned     
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.000      1000.000
 ITERATION COUNT, LIMIT         0    2000000000
 EVALUATION ERRORS              0             0

Convert 2.0      24.7.4 r58773 Released Sep 19, 2016 LEG x86 64bit/Linux      

--- Using Option File
Reading parameter(s) from "/home/renigijus/gams/opt-mod-lib/gamslib/tanksize/convert.opt"
>>  pyomo tanksize-scalar.py
Finished reading from "/home/renigijus/gams/opt-mod-lib/gamslib/tanksize/convert.opt"
Pyomo     : tanksize-scalar.py


No solution returned


EXECUTION TIME       =        0.000 SECONDS      2 MB  24.7.4 r58773 LEX-LEG


USER: Remigijus Paulavicius, Single User License     S170731:0859AO-LNX
      Imperial College London, Dept. of Chemical Engineering    DC13449
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      /home/renigijus/gams/opt-mod-lib/gamslib/tanksize/tanksize.gms
Output     /home/renigijus/gams/opt-mod-lib/gamslib/tanksize/tanksize-scalar.py.lst
