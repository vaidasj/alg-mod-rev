GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:30:22 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  option MIP=convert;
   2  option MIP=convert;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:30:22 Page 2
Goemans/Williamson Randomized Approximation Algorithm for MaxCut  (MAXCUT,SEQ=338)
C o m p i l a t i o n


   4   
      Let G(N, E) denote a graph. A cut is a partition of the vertices N
      into two sets S and T. Any edge (u,v) in E with u in S and v in T is
      said to be crossing the cut and is a cut edge. The size of the cut is
      defined to be sum of weights of the edges crossing the cut.
       
      This model presents a simple MIP formulation of the problem that is
      seeded with a solution from the Goemans/Williamson randomized
      approximation algorithm based on a semidefinite programming
      relaxation.
       
      The MaxCut instance tg20_7777 is available from the Biq Mac Library
      and comes from applications in statistical physics.
       
       
      Wiegele A., Biq Mac Library - BInary Quadratic and MAx Cut Library.
      http://biqmac.uni-klu.ac.at/biqmaclib.html
       
      Goemans M.X., and Williamson, D.P., Improved Approximation Algorithms
      for Maximum Cut and Satisfiability Problems Using Semidefinite
      Programming. Journal of the ACM 42 (1995), 1115-1145.
      http://www-math.mit.edu/~goemans/PAPERS/maxcut-jacm.pdf
  28   
  29  Set         n       nodes; alias (n,i,j)
  30  Parameter   w(i,j)  edge weights
  31  Set         e(i,j)  edges;
  32   
  34  * Simple AWK script to convert MAXCUT format to GAMS format
  42   
 852   
 854   
 855  * We want all edges to be i-j with i<j;
 856  e(i,j) = ord(i)<ord(j);
 857  w(e(i,j)) = w(i,j) + w(j,i);
 858  w(i,j)$(not e(i,j)) = 0;
 859   
 860  Option e<w;
 861   
 862  * Simple MIP model
 863  Variable x(n)     decides on what side of the cut
 864           cut(i,j) edge is in the cut
 865           z        objective
 866  Binary variables x
 867   
 868  Equation obj, xor1(i,j), xor2(i,j), xor3(i,j), xor4(i,j);
 869   
 870  obj..          z =e= sum(e, w(e)*cut(e));
 871  xor1(e(i,j)).. cut(e) =l= x(i) + x(j);
 872  xor2(e(i,j)).. cut(e) =l= 2 - x(i) - x(j);
 873  xor3(e(i,j)).. cut(e) =g= x(i) - x(j);
 874  xor4(e(i,j)).. cut(e) =g= x(j) - x(i);
 875   
 876  model maxcut / all /;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:30:22 Page 3
Goemans/Williamson Randomized Approximation Algorithm for MaxCut  (MAXCUT,SEQ=338)
C o m p i l a t i o n


 877   
      Set up the SDP
              max W*Y s.t. Y_ii=1, Y>0
      We need to pass on the dual to csdp
              min x1+x2+...+xn s.t. X = F1*x1+F2*x2+...+Fn*xn - W, X>0
      with F_i = 1 for F_ii and 0 otherwise
 885   
 886  Parameter
 887      c(n)      cost coefficients
 888      F(n,i,j)  constraint matrix
 889      F0(i,j)   constant term
 890      Y(i,j)    dual solution
 891      L(i,j)    Cholesky factor of dual solution Y;
 892   
 893  c(n)     = 1;
 894  F(n,n,n) = 1;
 895  F0(i,j)  = -w(i,j);
 896   
 897  execute_unload 'csdpin.gdx' n=m, n, c, F, F0;
 898  execute 'gams runcsdp.inc lo=2 --strict=1 && cholesky csdpout.gdx n Y cholesky.gdx L ';
 899  abort$errorlevel 'Problems running RunCSDP. Check listing file for details.'
 900  execute_load 'cholesky.gdx'  L;
 901  execute_load 'csdpout.gdx'   Y;
 902   
 903  Scalar SDPRelaxation;
 904  SDPRelaxation = 0.5*sum(e, w(e)*(1-Y(e)));
 905  display SDPRelaxation;
 906   
 907  * Check if Cholesky factorization is correct
 908  Parameter Y_, Ydiff;
 909  Y_(i,j) = sum(n, L(i,n)*L(j,n));
 910  Ydiff(i,j) = round(Y(i,j)-Y_(i,j),1e-6);
 911  option Ydiff:8:0:1; abort$card(Ydiff) Ydiff;
 912   
 913  * Now do the random hyperplane r
 914  Parameter r(n);
 915  Set S(n), T(n), bestS(n);
 916  Scalar wS weight of cut S, maxwS best weight /-inf/, cnt;
 917   
 918  for (cnt=1 to 10,
 919    r(n) = uniform(-1,1);
 920    S(n) = sum(i, L(n,i)*r(i)) < 0;
 921    T(n) = yes; T(S) = no;
 922    wS   = sum(e(S,T), w(S,T) + w(T,S));
 923    if (wS>maxwS, maxwS = wS; bestS(n) = S(n));
 924  );
 925  display maxwS;
 926   
 927  * use computed feasible solution as starting point for MIP solve
 928  x.l(bestS) = 1;
 929  cut.l(e(i,j)) = x.l(i) xor x.l(j);
 930   
 931  * SCIP does this by default, for other solvers we need to enable it
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:30:22 Page 4
Goemans/Williamson Randomized Approximation Algorithm for MaxCut  (MAXCUT,SEQ=338)
C o m p i l a t i o n


 937   
 938  maxcut.optfile = 1;
 939  solve maxcut max z using mip;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:30:22 Page 5
Goemans/Williamson Randomized Approximation Algorithm for MaxCut  (MAXCUT,SEQ=338)
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  /home/renigijus/gams/opt-mod-lib/gamslib/maxcut/maxcut.gms
     2       41 CALL           1      41  awk -f maxcut.awk tg207777.inc > tg207777.inc.gms
     3       44 INCLUDE        1      44  ./home/renigijus/gams/opt-mod-lib/gamslib/maxcut/tg207777.inc.gms


COMPILATION TIME     =        0.004 SECONDS      3 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:30:22 Page 6
Goemans/Williamson Randomized Approximation Algorithm for MaxCut  (MAXCUT,SEQ=338)
E x e c u t i o n


----    905 PARAMETER SDPRelaxation        =  2.963622E+7  

----    925 PARAMETER maxwS                =  1.473156E+7  best weight
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:30:22 Page 7
Goemans/Williamson Randomized Approximation Algorithm for MaxCut  (MAXCUT,SEQ=338)
Equation Listing    SOLVE maxcut Using MIP From line 939


---- obj  =E=  

obj..  - 88052*cut(1,2) - 47458*cut(1,20) - 71100*cut(1,21) - 101569*cut(1,381) + 84033*cut(2,3) + 146068*cut(2,22) - 32119*cut(2,382) - 178988*cut(3,4) - 95003*cut(3,23) + 131779*cut(3,383) - 201682*cut(4,5) + 14417*cut(4,24) + 53431*cut(4,384)
     
      + 93240*cut(5,6) + 108350*cut(5,25) + 5686*cut(5,385) - 86451*cut(6,7) - 152678*cut(6,26) - 24536*cut(6,386) - 63936*cut(7,8) + 40156*cut(7,27) - 35650*cut(7,387) + 9643*cut(8,9) + 15303*cut(8,28) - 151852*cut(8,388) - 266080*cut(9,10)
     
      + 61384*cut(9,29) + 98651*cut(9,389) + 118821*cut(10,11) - 12289*cut(10,30) - 106*cut(10,390) - 37594*cut(11,12) - 20499*cut(11,31) + 72530*cut(11,391) - 84031*cut(12,13) + 8815*cut(12,32) - 26291*cut(12,392) - 11638*cut(13,14) - 72605*cut(13,33)
     
      - 134156*cut(13,393) - 131028*cut(14,15) + 65501*cut(14,34) + 54026*cut(14,394) + 194444*cut(15,16) - 16692*cut(15,35) - 172006*cut(15,395) + 10700*cut(16,17) + 114289*cut(16,36) + 127069*cut(16,396) - 25508*cut(17,18) + 60939*cut(17,37)
     
      - 245243*cut(17,397) - 105409*cut(18,19) + 9703*cut(18,38) + 4905*cut(18,398) - 103051*cut(19,20) + 58350*cut(19,39) + 54247*cut(19,399) - 33989*cut(20,40) - 104079*cut(20,400) + 108588*cut(21,22) + 38174*cut(21,40) - 140304*cut(21,41)
     
      + 41775*cut(22,23) + 93701*cut(22,42) + 14758*cut(23,24) + 88270*cut(23,43) - 14539*cut(24,25) + 37280*cut(24,44) - 24029*cut(25,26) - 61082*cut(25,45) + 86869*cut(26,27) - 18283*cut(26,46) + 114923*cut(27,28) - 73382*cut(27,47) + 126315*cut(28,29)
     
      + 37134*cut(28,48) + 145012*cut(29,30) + 86925*cut(29,49) + 12793*cut(30,31) + 112245*cut(30,50) - 3315*cut(31,32) + 58509*cut(31,51) - 9527*cut(32,33) - 353444*cut(32,52) - 32597*cut(33,34) - 41606*cut(33,53) + 89511*cut(34,35) + 87755*cut(34,54)
     
      - 36286*cut(35,36) + 112736*cut(35,55) + 91970*cut(36,37) - 137824*cut(36,56) + 85931*cut(37,38) - 24991*cut(37,57) + 83126*cut(38,39) + 533*cut(38,58) - 47147*cut(39,40) + 5074*cut(39,59) + 2349*cut(40,60) + 3461*cut(41,42) + 80378*cut(41,60)
     
      + 70478*cut(41,61) + 52127*cut(42,43) + 84099*cut(42,62) + 127376*cut(43,44) + 169672*cut(43,63) - 15457*cut(44,45) - 90907*cut(44,64) + 247819*cut(45,46) - 9554*cut(45,65) + 25549*cut(46,47) + 98683*cut(46,66) - 19325*cut(47,48) + 68714*cut(47,67)
     
      - 100177*cut(48,49) - 94202*cut(48,68) + 202835*cut(49,50) - 59288*cut(49,69) + 48215*cut(50,51) + 27733*cut(50,70) + 57982*cut(51,52) + 56167*cut(51,71) - 34427*cut(52,53) - 67341*cut(52,72) + 25999*cut(53,54) - 39066*cut(53,73) + 183889*cut(54,55)
     
      + 9323*cut(54,74) + 72985*cut(55,56) - 8366*cut(55,75) - 88654*cut(56,57) + 4665*cut(56,76) + 43229*cut(57,58) - 131436*cut(57,77) - 141773*cut(58,59) - 48050*cut(58,78) + 51333*cut(59,60) - 64732*cut(59,79) - 232227*cut(60,80) - 21788*cut(61,62)
     
      - 13948*cut(61,80) + 43679*cut(61,81) + 15213*cut(62,63) - 15278*cut(62,82) - 38611*cut(63,64) - 32115*cut(63,83) + 97640*cut(64,65) - 84296*cut(64,84) - 47700*cut(65,66) + 57922*cut(65,85) + 71462*cut(66,67) + 39658*cut(66,86) - 23393*cut(67,68)
     
      + 13002*cut(67,87) + 78041*cut(68,69) + 8815*cut(68,88) + 93426*cut(69,70) - 6340*cut(69,89) - 12283*cut(70,71) - 73431*cut(70,90) - 34417*cut(71,72) + 602*cut(71,91) + 54676*cut(72,73) - 32789*cut(72,92) + 33541*cut(73,74) + 53533*cut(73,93)
     
      + 16325*cut(74,75) - 58910*cut(74,94) - 195368*cut(75,76) + 98556*cut(75,95) + 14465*cut(76,77) - 173370*cut(76,96) - 101901*cut(77,78) - 26425*cut(77,97) - 107830*cut(78,79) + 85921*cut(78,98) + 41746*cut(79,80) + 32064*cut(79,99)
     
      - 110073*cut(80,100) - 127327*cut(81,82) - 71915*cut(81,100) + 44824*cut(81,101) + 84704*cut(82,83) - 43335*cut(82,102) - 72396*cut(83,84) - 82793*cut(83,103) + 661*cut(84,85) - 167939*cut(84,104) + 145291*cut(85,86) - 41254*cut(85,105)
     
      - 117105*cut(86,87) - 32196*cut(86,106) - 106413*cut(87,88) - 38683*cut(87,107) - 87649*cut(88,89) + 120043*cut(88,108) + 156934*cut(89,90) + 112678*cut(89,109) - 9423*cut(90,91) - 61674*cut(90,110) - 35802*cut(91,92) + 62544*cut(91,111)
     
      + 41965*cut(92,93) + 55092*cut(92,112) - 7273*cut(93,94) + 135293*cut(93,113) - 6003*cut(94,95) - 5496*cut(94,114) + 8206*cut(95,96) + 93506*cut(95,115) - 176198*cut(96,97) + 113920*cut(96,116) + 25319*cut(97,98) - 94898*cut(97,117)
     
      - 181971*cut(98,99) + 31358*cut(98,118) + 64671*cut(99,100) - 22395*cut(99,119) - 47923*cut(100,120) - 5770*cut(101,102) - 170591*cut(101,120) - 48693*cut(101,121) + 46189*cut(102,103) - 375001*cut(102,122) + 33405*cut(103,104) - 58917*cut(103,123)
     
      - 44046*cut(104,105) + 167461*cut(104,124) + 6903*cut(105,106) - 46265*cut(105,125) + 149868*cut(106,107) + 40140*cut(106,126) + 17731*cut(107,108) - 180662*cut(107,127) + 58541*cut(108,109) - 208990*cut(108,128) + 74362*cut(109,110)
     
      - 6927*cut(109,129) - 18778*cut(110,111) + 136857*cut(110,130) - 18486*cut(111,112) - 52043*cut(111,131) - 51251*cut(112,113) + 238936*cut(112,132) + 87984*cut(113,114) + 65843*cut(113,133) + 11956*cut(114,115) - 97719*cut(114,134)
     
      - 38228*cut(115,116) + 14783*cut(115,135) + 18301*cut(116,117) + 95548*cut(116,136) - 28006*cut(117,118) + 98659*cut(117,137) + 53015*cut(118,119) - 79267*cut(118,138) + 29791*cut(119,120) + 113920*cut(119,139) - 18223*cut(120,140)
     
      - 99021*cut(121,122) - 169063*cut(121,140) + 33980*cut(121,141) + 13539*cut(122,123) + 61243*cut(122,142) - 65985*cut(123,124) + 106808*cut(123,143) - 95091*cut(124,125) + 169700*cut(124,144) + 46596*cut(125,126) - 147867*cut(125,145)
     
      + 52516*cut(126,127) - 157370*cut(126,146) - 79551*cut(127,128) + 17696*cut(127,147) - 157402*cut(128,129) - 80386*cut(128,148) + 592*cut(129,130) + 139708*cut(129,149) - 207044*cut(130,131) + 103059*cut(130,150) - 3561*cut(131,132)
     
      + 77083*cut(131,151) - 114840*cut(132,133) - 24779*cut(132,152) + 25948*cut(133,134) - 15103*cut(133,153) - 178867*cut(134,135) - 74540*cut(134,154) - 5624*cut(135,136) + 56355*cut(135,155) - 221*cut(136,137) - 82626*cut(136,156)
     
      + 192330*cut(137,138) - 112698*cut(137,157) - 185006*cut(138,139) - 87144*cut(138,158) - 174379*cut(139,140) + 14687*cut(139,159) - 137159*cut(140,160) - 23818*cut(141,142) + 79689*cut(141,160) + 20705*cut(141,161) + 20551*cut(142,143)
     
      - 53229*cut(142,162) + 39853*cut(143,144) + 94365*cut(143,163) + 64565*cut(144,145) + 186354*cut(144,164) + 75792*cut(145,146) - 112209*cut(145,165) - 20590*cut(146,147) - 115901*cut(146,166) + 74254*cut(147,148) - 166912*cut(147,167)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:30:22 Page 8
Goemans/Williamson Randomized Approximation Algorithm for MaxCut  (MAXCUT,SEQ=338)
Equation Listing    SOLVE maxcut Using MIP From line 939


     obj  =E=       
     
      + 109264*cut(148,149) + 37583*cut(148,168) - 105352*cut(149,150) - 130501*cut(149,169) + 21332*cut(150,151) + 2565*cut(150,170) + 146883*cut(151,152) + 63815*cut(151,171) + 13886*cut(152,153) - 10372*cut(152,172) + 171250*cut(153,154)
     
      - 149376*cut(153,173) + 13235*cut(154,155) - 11344*cut(154,174) - 26145*cut(155,156) - 30016*cut(155,175) - 32281*cut(156,157) + 186354*cut(156,176) - 41927*cut(157,158) - 440*cut(157,177) - 135648*cut(158,159) - 138239*cut(158,178)
     
      - 5626*cut(159,160) - 113689*cut(159,179) + 58767*cut(160,180) - 22055*cut(161,162) + 46573*cut(161,180) - 144593*cut(161,181) - 55037*cut(162,163) + 106172*cut(162,182) - 38057*cut(163,164) - 12549*cut(163,183) - 37063*cut(164,165)
     
      - 8115*cut(164,184) - 179726*cut(165,166) - 89422*cut(165,185) + 59749*cut(166,167) + 108830*cut(166,186) - 17292*cut(167,168) + 23204*cut(167,187) + 32898*cut(168,169) - 106737*cut(168,188) + 8451*cut(169,170) + 14136*cut(169,189)
     
      - 117134*cut(170,171) - 158246*cut(170,190) - 25947*cut(171,172) - 165231*cut(171,191) - 131240*cut(172,173) - 140423*cut(172,192) + 15400*cut(173,174) + 61885*cut(173,193) - 116135*cut(174,175) - 37599*cut(174,194) - 27281*cut(175,176)
     
      - 76930*cut(175,195) - 42883*cut(176,177) - 43744*cut(176,196) - 63731*cut(177,178) + 288410*cut(177,197) - 243005*cut(178,179) + 133152*cut(178,198) + 173340*cut(179,180) + 37235*cut(179,199) - 93536*cut(180,200) - 18847*cut(181,182)
     
      + 103203*cut(181,200) - 47713*cut(181,201) - 8397*cut(182,183) - 71088*cut(182,202) - 196564*cut(183,184) + 57333*cut(183,203) - 155832*cut(184,185) - 43760*cut(184,204) + 36474*cut(185,186) + 14974*cut(185,205) - 33624*cut(186,187)
     
      + 52931*cut(186,206) - 317238*cut(187,188) - 21165*cut(187,207) - 129622*cut(188,189) - 99945*cut(188,208) + 206856*cut(189,190) - 33878*cut(189,209) + 157344*cut(190,191) + 86910*cut(190,210) + 18038*cut(191,192) + 73134*cut(191,211)
     
      + 137220*cut(192,193) + 16823*cut(192,212) + 74944*cut(193,194) + 36129*cut(193,213) - 13601*cut(194,195) + 106048*cut(194,214) - 33411*cut(195,196) - 26217*cut(195,215) - 110481*cut(196,197) + 48834*cut(196,216) - 99117*cut(197,198)
     
      - 27902*cut(197,217) - 142988*cut(198,199) - 2666*cut(198,218) - 182605*cut(199,200) + 15037*cut(199,219) + 89612*cut(200,220) + 84236*cut(201,202) - 69235*cut(201,220) - 37100*cut(201,221) - 121721*cut(202,203) - 120492*cut(202,222)
     
      - 7216*cut(203,204) - 203137*cut(203,223) - 68098*cut(204,205) - 8190*cut(204,224) - 121764*cut(205,206) + 86775*cut(205,225) + 125366*cut(206,207) + 106101*cut(206,226) - 52152*cut(207,208) + 124217*cut(207,227) - 18286*cut(208,209)
     
      + 24997*cut(208,228) - 42696*cut(209,210) + 51901*cut(209,229) + 42386*cut(210,211) + 105334*cut(210,230) + 138800*cut(211,212) - 79978*cut(211,231) + 3882*cut(212,213) + 70114*cut(212,232) - 79634*cut(213,214) - 51512*cut(213,233)
     
      + 123837*cut(214,215) - 78182*cut(214,234) - 83108*cut(215,216) - 2450*cut(215,235) + 1645*cut(216,217) + 171873*cut(216,236) - 75841*cut(217,218) + 103655*cut(217,237) - 181849*cut(218,219) - 144885*cut(218,238) + 104387*cut(219,220)
     
      + 124979*cut(219,239) + 73591*cut(220,240) - 209264*cut(221,222) - 253618*cut(221,240) + 45804*cut(221,241) - 8015*cut(222,223) - 45919*cut(222,242) + 200435*cut(223,224) + 9724*cut(223,243) - 31838*cut(224,225) + 141926*cut(224,244)
     
      + 147822*cut(225,226) + 4587*cut(225,245) - 129731*cut(226,227) - 100309*cut(226,246) + 117442*cut(227,228) - 34391*cut(227,247) + 54571*cut(228,229) - 68890*cut(228,248) + 134067*cut(229,230) + 32862*cut(229,249) + 89513*cut(230,231)
     
      + 42773*cut(230,250) - 84502*cut(231,232) + 64714*cut(231,251) - 132323*cut(232,233) - 51843*cut(232,252) - 49436*cut(233,234) - 94349*cut(233,253) + 101080*cut(234,235) - 59204*cut(234,254) + 238649*cut(235,236) + 162072*cut(235,255)
     
      - 56001*cut(236,237) - 109473*cut(236,256) - 21047*cut(237,238) - 120040*cut(237,257) + 1813*cut(238,239) + 178041*cut(238,258) - 93080*cut(239,240) + 131726*cut(239,259) - 17232*cut(240,260) - 67572*cut(241,242) - 145227*cut(241,260)
     
      - 155888*cut(241,261) + 143491*cut(242,243) - 99974*cut(242,262) - 20448*cut(243,244) - 25602*cut(243,263) + 119220*cut(244,245) + 9256*cut(244,264) + 17018*cut(245,246) + 75711*cut(245,265) + 7288*cut(246,247) - 172732*cut(246,266)
     
      + 93239*cut(247,248) + 76434*cut(247,267) + 171819*cut(248,249) + 22512*cut(248,268) + 94755*cut(249,250) - 70038*cut(249,269) - 51554*cut(250,251) + 113885*cut(250,270) + 154185*cut(251,252) + 81165*cut(251,271) + 162636*cut(252,253)
     
      + 78199*cut(252,272) - 94088*cut(253,254) + 31820*cut(253,273) + 62966*cut(254,255) + 4833*cut(254,274) - 155842*cut(255,256) + 35601*cut(255,275) - 2710*cut(256,257) - 117052*cut(256,276) + 38012*cut(257,258) + 125991*cut(257,277)
     
      - 11272*cut(258,259) - 29197*cut(258,278) + 86328*cut(259,260) + 85342*cut(259,279) - 192161*cut(260,280) - 142370*cut(261,262) + 18639*cut(261,280) - 85267*cut(261,281) + 65324*cut(262,263) + 165165*cut(262,282) - 129380*cut(263,264)
     
      - 73244*cut(263,283) - 86783*cut(264,265) + 138845*cut(264,284) - 64854*cut(265,266) + 130590*cut(265,285) - 104556*cut(266,267) - 124829*cut(266,286) - 43949*cut(267,268) - 80393*cut(267,287) - 291465*cut(268,269) - 198161*cut(268,288)
     
      + 229637*cut(269,270) - 123424*cut(269,289) + 41261*cut(270,271) - 114662*cut(270,290) + 148186*cut(271,272) + 91008*cut(271,291) + 8485*cut(272,273) + 2775*cut(272,292) + 96128*cut(273,274) + 29089*cut(273,293) + 105882*cut(274,275)
     
      - 140387*cut(274,294) - 13883*cut(275,276) + 62305*cut(275,295) + 72827*cut(276,277) - 14158*cut(276,296) + 69428*cut(277,278) - 21749*cut(277,297) - 77566*cut(278,279) - 92984*cut(278,298) - 38388*cut(279,280) - 105203*cut(279,299)
     
      + 81553*cut(280,300) - 138491*cut(281,282) + 55213*cut(281,300) + 131772*cut(281,301) + 99782*cut(282,283) - 16407*cut(282,302) - 230904*cut(283,284) - 84684*cut(283,303) - 225887*cut(284,285) - 8671*cut(284,304) - 114134*cut(285,286)
     
      + 6269*cut(285,305) - 28110*cut(286,287) - 36524*cut(286,306) - 28048*cut(287,288) - 148735*cut(287,307) + 59887*cut(288,289) + 49030*cut(288,308) - 46602*cut(289,290) - 142373*cut(289,309) - 105061*cut(290,291) + 44820*cut(290,310)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:30:22 Page 9
Goemans/Williamson Randomized Approximation Algorithm for MaxCut  (MAXCUT,SEQ=338)
Equation Listing    SOLVE maxcut Using MIP From line 939


     obj  =E=       
     
      + 106687*cut(291,292) - 121485*cut(291,311) - 125100*cut(292,293) + 59860*cut(292,312) + 210267*cut(293,294) + 25124*cut(293,313) + 158334*cut(294,295) + 115683*cut(294,314) - 163857*cut(295,296) + 101232*cut(295,315) + 75362*cut(296,297)
     
      - 33944*cut(296,316) + 28237*cut(297,298) + 23674*cut(297,317) + 117234*cut(298,299) - 22776*cut(298,318) - 46297*cut(299,300) + 141491*cut(299,319) + 15443*cut(300,320) + 93079*cut(301,302) + 50968*cut(301,320) - 105143*cut(301,321)
     
      + 105475*cut(302,303) - 4920*cut(302,322) - 94200*cut(303,304) + 187473*cut(303,323) + 220733*cut(304,305) - 38529*cut(304,324) + 117323*cut(305,306) + 11732*cut(305,325) - 133278*cut(306,307) + 215480*cut(306,326) + 17174*cut(307,308)
     
      - 290619*cut(307,327) + 22003*cut(308,309) - 126311*cut(308,328) + 79239*cut(309,310) + 83081*cut(309,329) + 39238*cut(310,311) + 72695*cut(310,330) + 78830*cut(311,312) - 45295*cut(311,331) + 64947*cut(312,313) - 144086*cut(312,332)
     
      + 28806*cut(313,314) - 140502*cut(313,333) - 86298*cut(314,315) - 62585*cut(314,334) + 9500*cut(315,316) + 79913*cut(315,335) + 70815*cut(316,317) + 63953*cut(316,336) + 25145*cut(317,318) + 48068*cut(317,337) - 41597*cut(318,319)
     
      - 3404*cut(318,338) - 8079*cut(319,320) + 154057*cut(319,339) - 48561*cut(320,340) - 41421*cut(321,322) + 61596*cut(321,340) - 56372*cut(321,341) + 62274*cut(322,323) - 68876*cut(322,342) + 17425*cut(323,324) + 234077*cut(323,343)
     
      - 96496*cut(324,325) - 11311*cut(324,344) - 23528*cut(325,326) - 30593*cut(325,345) - 274595*cut(326,327) - 108395*cut(326,346) + 45568*cut(327,328) + 73190*cut(327,347) - 80037*cut(328,329) - 92947*cut(328,348) + 42521*cut(329,330)
     
      + 166152*cut(329,349) - 100961*cut(330,331) - 47918*cut(330,350) - 76396*cut(331,332) + 43731*cut(331,351) + 47405*cut(332,333) + 167111*cut(332,352) + 127193*cut(333,334) + 86028*cut(333,353) + 78804*cut(334,335) + 68380*cut(334,354)
     
      - 125531*cut(335,336) - 128753*cut(335,355) - 11865*cut(336,337) + 70959*cut(336,356) + 131280*cut(337,338) - 211763*cut(337,357) + 49780*cut(338,339) + 69658*cut(338,358) + 44552*cut(339,340) - 32112*cut(339,359) - 21312*cut(340,360)
     
      + 9619*cut(341,342) - 34003*cut(341,360) - 26272*cut(341,361) - 57415*cut(342,343) - 20039*cut(342,362) - 101185*cut(343,344) - 175163*cut(343,363) + 76519*cut(344,345) + 15735*cut(344,364) - 17977*cut(345,346) + 123423*cut(345,365)
     
      - 15109*cut(346,347) - 154124*cut(346,366) + 5524*cut(347,348) - 83601*cut(347,367) - 79255*cut(348,349) + 93609*cut(348,368) + 108691*cut(349,350) - 95883*cut(349,369) + 79938*cut(350,351) - 85423*cut(350,370) + 30017*cut(351,352)
     
      - 39951*cut(351,371) + 77508*cut(352,353) - 40267*cut(352,372) - 15427*cut(353,354) + 67696*cut(353,373) - 39400*cut(354,355) + 98110*cut(354,374) - 45045*cut(355,356) - 249151*cut(355,375) - 58239*cut(356,357) + 71662*cut(356,376)
     
      - 27034*cut(357,358) - 5037*cut(357,377) + 115366*cut(358,359) - 13942*cut(358,378) + 112467*cut(359,360) - 15201*cut(359,379) - 14856*cut(360,380) + 54359*cut(361,362) + 106484*cut(361,380) + 46454*cut(361,381) - 86349*cut(362,363)
     
      + 116553*cut(362,382) + 79575*cut(363,364) - 40338*cut(363,383) - 112691*cut(364,365) - 15129*cut(364,384) + 59600*cut(365,366) + 24520*cut(365,385) + 8321*cut(366,367) - 116127*cut(366,386) - 130026*cut(367,368) + 174671*cut(367,387)
     
      + 24933*cut(368,369) + 9903*cut(368,388) + 18929*cut(369,370) - 17074*cut(369,389) + 20043*cut(370,371) + 106130*cut(370,390) + 4674*cut(371,372) - 115989*cut(371,391) - 110992*cut(372,373) + 170283*cut(372,392) - 4731*cut(373,374)
     
      - 178149*cut(373,393) - 52405*cut(374,375) - 67413*cut(374,394) - 59026*cut(375,376) - 173964*cut(375,395) - 301004*cut(376,377) - 84549*cut(376,396) + 47513*cut(377,378) - 124213*cut(377,397) - 29019*cut(378,379) + 47001*cut(378,398)
     
      - 37031*cut(379,380) + 176049*cut(379,399) - 89301*cut(380,400) + 48833*cut(381,382) - 89187*cut(381,400) + 123750*cut(382,383) - 263903*cut(383,384) + 58989*cut(384,385) + 75853*cut(385,386) - 77881*cut(386,387) + 204597*cut(387,388)
     
      - 159739*cut(388,389) - 138044*cut(389,390) + 29988*cut(390,391) - 132894*cut(391,392) + 160400*cut(392,393) - 8246*cut(393,394) + 136584*cut(394,395) + 17371*cut(395,396) + 9465*cut(396,397) + 40628*cut(397,398) - 35647*cut(398,399)
     
      - 97814*cut(399,400) + z =E= 0 ; (LHS = -26662669, INFES = 26662669 ****)
     

---- xor1  =L=  

xor1(1,2)..  - x(1) - x(2) + cut(1,2) =L= 0 ; (LHS = 0)
     
xor1(1,20)..  - x(1) - x(20) + cut(1,20) =L= 0 ; (LHS = 0)
     
xor1(1,21)..  - x(1) - x(21) + cut(1,21) =L= 0 ; (LHS = 0)
     
REMAINING 797 ENTRIES SKIPPED

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:30:22 Page 10
Goemans/Williamson Randomized Approximation Algorithm for MaxCut  (MAXCUT,SEQ=338)
Equation Listing    SOLVE maxcut Using MIP From line 939


---- xor2  =L=  

xor2(1,2)..  x(1) + x(2) + cut(1,2) =L= 2 ; (LHS = 2)
     
xor2(1,20)..  x(1) + x(20) + cut(1,20) =L= 2 ; (LHS = 2)
     
xor2(1,21)..  x(1) + x(21) + cut(1,21) =L= 2 ; (LHS = 2)
     
REMAINING 797 ENTRIES SKIPPED


---- xor3  =G=  

xor3(1,2)..  - x(1) + x(2) + cut(1,2) =G= 0 ; (LHS = 2)
     
xor3(1,20)..  - x(1) + x(20) + cut(1,20) =G= 0 ; (LHS = 2)
     
xor3(1,21)..  - x(1) + x(21) + cut(1,21) =G= 0 ; (LHS = 2)
     
REMAINING 797 ENTRIES SKIPPED


---- xor4  =G=  

xor4(1,2)..  x(1) - x(2) + cut(1,2) =G= 0 ; (LHS = 0)
     
xor4(1,20)..  x(1) - x(20) + cut(1,20) =G= 0 ; (LHS = 0)
     
xor4(1,21)..  x(1) - x(21) + cut(1,21) =G= 0 ; (LHS = 0)
     
REMAINING 797 ENTRIES SKIPPED

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:30:22 Page 11
Goemans/Williamson Randomized Approximation Algorithm for MaxCut  (MAXCUT,SEQ=338)
Column Listing      SOLVE maxcut Using MIP From line 939


---- x  decides on what side of the cut

x(1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
       -1       xor1(1,2)
       -1       xor1(1,20)
       -1       xor1(1,21)
       -1       xor1(1,381)
        1       xor2(1,2)
        1       xor2(1,20)
        1       xor2(1,21)
        1       xor2(1,381)
       -1       xor3(1,2)
       -1       xor3(1,20)
       -1       xor3(1,21)
       -1       xor3(1,381)
        1       xor4(1,2)
        1       xor4(1,20)
        1       xor4(1,21)
        1       xor4(1,381)

x(2)
                (.LO, .L, .UP, .M = 0, 1, 1, 0)
       -1       xor1(1,2)
       -1       xor1(2,3)
       -1       xor1(2,22)
       -1       xor1(2,382)
        1       xor2(1,2)
        1       xor2(2,3)
        1       xor2(2,22)
        1       xor2(2,382)
        1       xor3(1,2)
       -1       xor3(2,3)
       -1       xor3(2,22)
       -1       xor3(2,382)
       -1       xor4(1,2)
        1       xor4(2,3)
        1       xor4(2,22)
        1       xor4(2,382)

x(3)
                (.LO, .L, .UP, .M = 0, 1, 1, 0)
       -1       xor1(2,3)
       -1       xor1(3,4)
       -1       xor1(3,23)
       -1       xor1(3,383)
        1       xor2(2,3)
        1       xor2(3,4)
        1       xor2(3,23)
        1       xor2(3,383)
        1       xor3(2,3)
       -1       xor3(3,4)
       -1       xor3(3,23)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:30:22 Page 12
Goemans/Williamson Randomized Approximation Algorithm for MaxCut  (MAXCUT,SEQ=338)
Column Listing      SOLVE maxcut Using MIP From line 939


     x  decides on what side of the cut

       -1       xor3(3,383)
       -1       xor4(2,3)
        1       xor4(3,4)
        1       xor4(3,23)
        1       xor4(3,383)

REMAINING 397 ENTRIES SKIPPED

---- cut  edge is in the cut

cut(1,2)
                (.LO, .L, .UP, .M = -INF, 1, +INF, 0)
   -88052       obj
        1       xor1(1,2)
        1       xor2(1,2)
        1       xor3(1,2)
        1       xor4(1,2)

cut(1,20)
                (.LO, .L, .UP, .M = -INF, 1, +INF, 0)
   -47458       obj
        1       xor1(1,20)
        1       xor2(1,20)
        1       xor3(1,20)
        1       xor4(1,20)

cut(1,21)
                (.LO, .L, .UP, .M = -INF, 1, +INF, 0)
   -71100       obj
        1       xor1(1,21)
        1       xor2(1,21)
        1       xor3(1,21)
        1       xor4(1,21)

REMAINING 797 ENTRIES SKIPPED

---- z  objective

z
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       obj

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:30:22 Page 13
Goemans/Williamson Randomized Approximation Algorithm for MaxCut  (MAXCUT,SEQ=338)
Model Statistics    SOLVE maxcut Using MIP From line 939


MODEL STATISTICS

BLOCKS OF EQUATIONS           5     SINGLE EQUATIONS        3,201
BLOCKS OF VARIABLES           3     SINGLE VARIABLES        1,201
NON ZERO ELEMENTS        10,401     DISCRETE VARIABLES        400


GENERATION TIME      =        0.007 SECONDS     18 MB  24.7.4 r58773 LEX-LEG


EXECUTION TIME       =        4.392 SECONDS     18 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:30:22 Page 14
Goemans/Williamson Randomized Approximation Algorithm for MaxCut  (MAXCUT,SEQ=338)
Solution Report     SOLVE maxcut Using MIP From line 939


               S O L V E      S U M M A R Y

     MODEL   maxcut              OBJECTIVE  z
     TYPE    MIP                 DIRECTION  MAXIMIZE
     SOLVER  CONVERT             FROM LINE  939

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      14 No Solution Returned     
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.000      1000.000
 ITERATION COUNT, LIMIT         0    2000000000

Convert 2.0      24.7.4 r58773 Released Sep 19, 2016 LEG x86 64bit/Linux      

--- Using Option File
Reading parameter(s) from "/home/renigijus/gams/opt-mod-lib/gamslib/maxcut/convert.opt"
>>  gams maxcut-scalar.gms
Finished reading from "/home/renigijus/gams/opt-mod-lib/gamslib/maxcut/convert.opt"
Gams      : maxcut-scalar.gms


No solution returned


EXECUTION TIME       =        0.002 SECONDS     15 MB  24.7.4 r58773 LEX-LEG


USER: Remigijus Paulavicius, Single User License     S170731:0859AO-LNX
      Imperial College London, Dept. of Chemical Engineering    DC13449
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      /home/renigijus/gams/opt-mod-lib/gamslib/maxcut/maxcut.gms
Output     /home/renigijus/gams/opt-mod-lib/gamslib/maxcut/maxcut-scalar.gms.lst
