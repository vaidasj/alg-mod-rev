GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:52 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  option NLP=convert;
   2  option NLP=convert;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:52 Page 2
Heat Integrated Distillation Sequences, (MINLPHI,SEQ=118)
C o m p i l a t i o n


   4   
       
         This problem describes a formulation and algorithmic procedure
         for obtaining heat-integrated distillation sequences for the separation
         of a given multi component feed stream into its pure components products.
       
       
      Morari, M, and Grossmann, I E, Eds, Chemical Engineering Optimization
      Models with GAMS. Computer Aids for Chemical Engineering Corporation,
      1991.
       
      Floudas, C A, and Paules IV, G E, A Mixed-Integer Nonlinear Programming
      Formulation for the Synthesis of Heat Integrated Distillation Sequence.
      Computers and Chemical Engineering 12, 6 (1988), 531-546.
       
      ======================================================================
       
           A MATHEMATICAL PROGRAMMING FORMULATION FOR PROCESS SYNTHESIS
       
        ===================================================================
       
          copyright    G.E. PAULES IV & C.A. FLOUDAS
       
                   *** Dept. of Chemical Engineering ***
                        *** Princeton University ***
                                May 23, 1987
       
       
          Algorithm:  The Outer Approximation with Equality Relaxation
                 Full Solution with Starting Point from FIXDT
       
      ======================================================================
       
               This formulation provides the Optimal Heat Integrated
           Distillation Sequence with Pressure as a continuous variable
                       for a three component separation.
          The Outer Approximation with Equality Relaxation algorithm is
               used in the automatic solution procedure using gams
       
                    Components:     a == Hexane
                                    b == Benzene
                                    c == Heptane
       
       total feed to superstructure == 396 kgmol/hr
       
       multicomponent feed composition:
                               a = 0.80
                               b = 0.10
                               c = 0.10
       
      ======================================================================
       
       
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:52 Page 3
Heat Integrated Distillation Sequences, (MINLPHI,SEQ=118)
C o m p i l a t i o n


       A Superstructure of the form ...
       
       
       
                              _______               _______
                             _|_    |              _|_    |
                            /   \  ( )            /   \  ( )
                            |   |___|__ A         |   |___|___ B
                            |   |                 |   |
                  |---------| 1 |                 | 3 |
                  |         |   |       ----------|   |
                  |         |   |       |         |   |
                  |         |   |_______|         |   |
                  |         \___/  |  BC          \___/_______ C
           F      |           |   ( )               |     |
         -------->|           |____|                |----( )
         (ABC)    |
                  |           _______               _______
                  |          _|_    |              _|_    |
                  |         /   \  ( )            /   \  ( )
                  |         |   |___| AB          |   |___|___ A
                  |         |   |   |_____________|   |
                  |---------| 2 |                 | 4 |
                            |   |                 |   |
                            |   |                 |   |
                            |   |______ C         |   |_______ B
                            \___/  |              \___/   |
                              |   ( )               |    ( )
                              |____|                |_____|
       
       
       
        is used with binary variables representing :
           a_  the existence of columns in the sequence.
           b_  the selection of heat exchangers for heat integration.
           c_  the selection of hot and cold utilities.
       
       
       Associated Reference:
       _______________________
        "A Mixed-Integer Nonlinear Programming formulation for the
         synthesis of Heat-Integrated Distillation Sequences"
       
         C.A. Floudas and G.E. Paules IV,  1988.
         Computers and Chemical Engineering vol. 12 no. 6 pp. 531-546
       
      ======================================================================
 109   
 110  *======================================================================
 111  * Set Options
 112  *======================================================================
 113  Option limcol=0, limrow=0;
 114  Option bratio=1, domlim=1000;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:52 Page 4
Heat Integrated Distillation Sequences, (MINLPHI,SEQ=118)
C o m p i l a t i o n


 115  Option optcr=0;
 116  * reduce default factorization frequency of zoom
 117   
 118  *=====================================================================
 119  * Declaration of sets
 120  *=====================================================================
 121  Sets
 122  * the set of all columns and their condensers in the superstructure
 123         i   condensers-columns  /c-1*c-4/
 124   
 125  * the set of all reboilers in the superstructure
 126         j   reboilers  /r-1*r-4/
 127   
 128  * the set of all hot utilities available
 129         hu  hot utilities  /lp,ex/
 130   
 131  * the set of all cold utilities available
 132         cu  cold utilities  /cw/
 133   
 134  * an index for linear fit coefficients
 135         n   index  /a,b/
 136   
 137  * the set of all intermediate products in superstructure
 138         m   intermediates  /ab,bc/
 139   
 140  * this set maps columns to produced intermediate products
 141         pm(i,m)  products  /c-1.bc, c-2.ab/
 142   
 143  * this set maps columns to intermediate product feeds
 144         fm(i,m)  feeds  /c-3.bc, c-4.ab/
 145   
 146  * these sets are for dynamic control of solution algorithm
 147         km   static iterations  /k-1*k-100/
 148         k(km)  dynamic iterations
 149         kiter(km)  dynamic counter
 150         kdynmax(km)  dynamic loop control ;
 151   
 152  * alias sets for condensers and reboilers
 153  Alias (ip,i);
 154  Alias (jp,j);
 155   
 156  * alias driving loop index - cant appear in equations
 157  Alias (kloop,km);
 158   
 159  *=====================================================================
 160  * Definition of "z" parameters for conditional control of model
 161  *  used to map permissible matches between condensers and reboilers
 162  *  and the position of columns in the superstructure
 163  *=====================================================================
 164   
 165  * defines the set of leading columns in the superstructure
 166  Parameter zlead(i) leading columns in superstructure
 167      /c-1   1
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:52 Page 5
Heat Integrated Distillation Sequences, (MINLPHI,SEQ=118)
C o m p i l a t i o n


 168       c-2   1 /;
 169   
 170  * defines allowable matches of heat integration for superstructure
 171  *  only permits heat integration between columns in the same sequence
 172  Table zcrhx(i,j) condenser to reboiler allowable matches
 173   
 174         r-1   r-2   r-3   r-4
 175   c-1                1
 176   c-2                      1
 177   c-3    1
 178   c-4          1
 179   
 180  * parameter used in pure integer constraint to permit only one
 181  *  direction of heat integration between two columns
 182  *  this would yield an infeasible solution but the constraint
 183  *  is included explicitly to reduce milp solution time
 184  Parameter zlim(i,j)  direction of heat integration;
 185    zlim(i,j) = 1$(zcrhx(i,j) and (ord(i) lt ord(j)));
 186   
 187  * relates appropriate reboiler to the condenser of same column
 188  * ( preferably should use an alias rather than a different set )
 189  Parameter zcr(i,j)  reboiler-condenser pairs;
 190    zcr(i,j) = 1$(ord(i) eq ord(j));
 191   
 192  *=====================================================================
 193  *   binary variables are divided into 4 classes and variable/parameter
 194  *   names starting with "y"
 195  *       ycol - column selection
 196  *       yhx  - heat integration exchanger matches
 197  *       yhu  - hot utility matches
 198  *       ycup - cold utiltiy matches
 199  *=====================================================================
 200   
 201  *=====================================================================
 202  * these parameters store first guess combination of binary variables
 203  *  used to initialize minlp algorithm and parameterize the minlp
 204  *  primal problem throughout the rest of the iterations
 205  *=====================================================================
 206  Parameter yhxp(i,j) current proposal for heat integration matches
 207    /c-1.r-3   1 /;
 208   
 209  Parameter yhup(hu,j) current binary proposal for hot utility matches
 210    /lp.r-1          1 /;
 211   
 212  Parameter ycup(i,cu) current binary proposal for cold utility matches
 213    /c-1.cw   1
 214     c-3.cw   1 /;
 215   
 216  Parameter ycolp(i) current storage for columns in superstructure
 217      /c-1    1
 218       c-3    1 /;
 219   
 220  *=====================================================================
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:52 Page 6
Heat Integrated Distillation Sequences, (MINLPHI,SEQ=118)
C o m p i l a t i o n


 221  * these parameters store the values of the binary proposals
 222  *  for all the iterations performed for use in integer cuts
 223  *  and recovering optimal solution
 224  *=====================================================================
 225  Parameter yhxk(i,j,km)  binary storage parameter yhx;
 226  Parameter yhuk(hu,j,km)  binary storage parameter yhu;
 227  Parameter ycuk(i,cu,km)  binary storage parameter ycu;
 228  Parameter ycolk(i,km)  binary storage parameter ycol;
 229   
 230  *=====================================================================
 231  * declaration of parameters for rest of model
 232  *=====================================================================
 233   
 234  * mass balances for each sharp separator
 235  Parameter spltfrc(i,m) split fraction of distillation columns
 236      /c-1.bc   0.20
 237       c-2.ab   0.90/;
 238   
 239  * minimum condenser temperatures obtained from simulation data
 240  Parameter tcmin(i) minimum condenser temperatures
 241      /c-1     341.92
 242       c-2     343.01
 243       c-3     353.54
 244       c-4     341.92/;
 245   
 246  * either hottest hot utility-dtmin or for individual separations
 247  *  2*dtmin below critical temperature of bottoms product
 248  Parameter trmax(j) maximum reboiler temperatures;
 249    trmax(j) = 1000;
 250   
 251  *====================================================================
 252  * scaled cost coefficients for distillation column fits
 253  *  nonlinear fixed-charge cost model
 254  *   cost = fc*y + vc*flow*temp
 255  *  scaling factor = 1000
 256  *====================================================================
 257  Parameter fc(i)  fixed charge for distillation columns
 258      /c-1     151.125
 259       c-2     180.003
 260       c-3     4.2286
 261       c-4     213.42/;
 262   
 263  Parameter vc(i)  variable charge for distillation columns
 264      /c-1     0.003375
 265       c-2     0.000893
 266       c-3     0.004458
 267       c-4     0.003176/;
 268   
 269  Parameter thu(hu)  hot utility temperatures
 270      /lp     421.0
 271       ex     373.0/;
 272   
 273  * hot utility cost coeff - gives cost in thousands of dollars per year
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:52 Page 7
Heat Integrated Distillation Sequences, (MINLPHI,SEQ=118)
C o m p i l a t i o n


 274  *   ucost = q(10e+6 kj/hr)*costhu(hu)
 275  Parameter costhu(hu)  hot utility cost coefficients
 276     /lp      24.908
 277      ex       9.139/;
 278   
 279  Table kf(i,n) coeff. for heat duty temperature fits
 280           a           b
 281   c-1   32.4       0.0225
 282   c-2   25.0       0.0130
 283   c-3   3.76       0.0043
 284   c-4   35.1       0.0156
 285   
 286  Table af(i,n) coeff. for column temperature fits
 287   
 288           a           b
 289   c-1   9.541       1.028
 290   c-2   12.24       1.050
 291   c-3   8.756       1.029
 292   c-4   9.181       1.005
 293   
 294  *=====================================================================
 295  * define scalar quantities for rest of model
 296  *=====================================================================
 297   
 298  Scalars
 299     totflow  total flow to superstructure  /396/
 300     u  large number for logical constraints  /1500/
 301     uint  upper bound for integer logical /20/
 302     fchx  fixed charge for heat exchangers scaled /3.392/
 303     vchx  variable charge for heat exchangers scaled /0.0893/
 304     htc  overall heat transfer coefficient  /0.0028/
 305     dtmin  minimum temperature approach  /10.0/
 306     tcin  inlet temperature of cold water  /305.0/
 307     tcout  outlet temperature of cold water  /325.0/
 308     costcw  cooling water cost coefficient  /4.65/
 309     beta  income tax correction factor  /0.52/
 310     alpha  one over payout time factor in years /0.40/;
 311   
 312   
      *=====================================================================
        the parameters declared here are assigned throughout the
         algorithmic procedures.
         they perform the following tasks in the algorithm
          1) transfer of soluton data between master and subproblem
          2) storage of solution data
          3) control of upper and lower bounds in milp master
          4) storage of optimal solution
      *=====================================================================
 324   
 325  * storage of variable levels for each iteration
 326  *  identifier derived from name of variable with letter "k" appended
 327  Parameter fk(i,km)       storage of flowrates;
 328  Parameter qrk(j,km)      storage of reboiler duties;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:52 Page 8
Heat Integrated Distillation Sequences, (MINLPHI,SEQ=118)
C o m p i l a t i o n


 329  Parameter qck(i,km)      storage of condenser duties;
 330  Parameter qcrk(i,j,km)   storage of heat integrated exchanges;
 331  Parameter qhuk(hu,j,km)  storage of hot utility usage;
 332  Parameter qcuk(i,cu,km)  storage of cold utility usage;
 333  Parameter tck(i,km)      storage of condenser temperatures;
 334  Parameter trk(j,km)      storage of reboiler temperatures;
 335  Parameter lmtdk(i,km)    storage of lmtds;
 336   
 337  Scalar zoaup             single value storage of upper bound /inf/;
 338  Scalar zoalo             single value storage of lower bounds /-inf/;
 339   
 340  * storage of optimal binary variable combination
 341  *  continuous variable levels are not stored separately as they
 342  *  can be obtained from the xxxk storage parameters above
 343  Parameter yhxopt(i,j)    optimal heat integration;
 344  Parameter yhuopt(hu,j)   optimal hot utility match;
 345  Parameter ycuopt(i,cu)   optimal cold utility match;
 346  Parameter ycolopt(i)     optimal superstructure;
 347  Scalar kopt              iteration at which optimal solution was found;
 348   
 349  * storage of sign() of lagrange multiplier from nonlinear equalities
 350  Parameter lmtdmar(i,km)  direction matrix for nonlinear equalities;
 351   
 352  *=====================================================================
 353  * declaration of variables
 354  *=====================================================================
 355   
 356  Variables
 357          zoau         objective function value of nlp subproblem
 358          zoal         objective function value of milp masters
 359          vqcr(km)     heat integration contribution to milpcon
 360          vqhu(km)     hot utility exchange contribution to milpcon
 361          vqcu(km)     cold utility exchange contribution to milpcon;
 362   
 363  Positive Variables
 364          f(i)         flowrates to columns
 365          qr(j)        reboiler duties for column with reboiler j
 366          qc(i)        condenser duties for column i
 367          qcr(i,j)     heat integration heat transfer
 368          qhu(hu,j)    hot utility heat transfer
 369          qcu(i,cu)    cold utility heat transfer
 370          tc(i)        condenser temperature for column with cond. i
 371          tr(j)        reboiler temperature for column with reb. j
 372          lmtd(i)      lmtd for cooling water exchanges
 373          sl1(i)       artificial slack variable for lmtd equalities
 374          sl2(i)       artificial slack variable for lmtd equalities
 375          s1(i)        artificial slack variable for reb-con equalities
 376          s2(i)        artificial slack variable for reb-con equalities
 377          s3(i)        artificial slack variable for duty equalities
 378          s4(i)        artificial slack variable for duty equalities;
 379   
 380  Binary Variables
 381          yhx(i,j)     heat integration matches condenser i reboiler j
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:52 Page 9
Heat Integrated Distillation Sequences, (MINLPHI,SEQ=118)
C o m p i l a t i o n


 382          yhu(hu,j)    hot utility matches hot utility hu reboiler j
 383          ycu(i,cu)    cold utility matches condenser i cold util cu
 384          ycol(i)      columns in superstructure;
 385   
 386  *=====================================================================
 387  * declaration of equations
 388  *  for solution of the nlp subproblems:
 389  *  early versions of gams did not permit binary variables to appear
 390  *  in the constraints of a nonlinear programming problem even if
 391  *  they appeared in linear constraints and were fixed at a bound
 392  *  therefore -
 393  *  constraints that contain the binary variables are duplicated:
 394  *  one form contains the declared binary variable and the  other
 395  *  substitutes a parameter that is assigned the current level of
 396  *  the binary variable.  constraints that are duplicated and are to
 397  *  appear in the nlp subproblem model have the letter "n" prepended
 398  *  to the equation name.
 399  *=====================================================================
 400   
 401  Equations
 402      nlpobj            nlp subproblems objective
 403      milpcon(km)       nonlinear contribution to milp objective
 404      evqcr(km)         heat integration contribution to milpcon
 405      evqhu(km)         hot utility exchange contribution to milpcon
 406      evqcu(km)         cold utility exchange contribution to milpcon
 407      lmtdsn(i)         nonlinear form of lmtd definition
 408      lmtdsm(i,km)      linearization of lmtdsn(i) in milp masters
 409      ntempset(i)       sets temperatures of inactive columns to 0 (nlp)
 410      tempset(i)        sets temperatures of inactive columns to 0 (milp)
 411      nartrex1(i)       relaxes artificial slack variables (nlp)
 412      artrex1(i)        relaxes artificial slack variables (milp)
 413      nartrex2(i)       relaxes artificial slack variables (nlp)
 414      artrex2(i)        relaxes artificial slack variables (milp)
 415      material(m)       material balances for each intermediate product
 416      feed              feed to superstructure
 417      nmatlog(i)        material balance logical constraints (nlp)
 418      matlog(i)         material balance logical constraints
 419      duty(i)           heat duty definition of condenser i
 420      rebcon(i,j)       equates condenser and reboiler duties
 421      conheat(i)        condenser heat balances
 422      rebheat(j)        reboiler heat balances
 423      dtminlp(j)        minimum temp approach for low pressure steam
 424      ndtminc(i)        minimum temp allowable for each condenser (nlp)
 425      dtminc(i)         minimum temp allowable for each condenser
 426      trtcdef(i,j)      relates reboiler and condenser temps of columns
 427      ndtmincr(i,j)     minimum temp approach for heat integration (nlp)
 428      ndtminex(j)       minimum temp approach for exhaust steam (nlp)
 429      nhxclog(i,j)      logical constraint for heat balances (nlp)
 430      nhxhulog(hu,j)    logical constraint for heat balances (nlp)
 431      nhxculog(i,cu)    logical constraint for heat balances (nlp)
 432      nqcqrlog(i)       logical constraint for con-reb duties (nlp)
 433      dtmincr(i,j)      minimum temp approach for heat integration
 434      dtminex(j)        minimum temp approach for exhaust steam
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:52 Page 10
Heat Integrated Distillation Sequences, (MINLPHI,SEQ=118)
C o m p i l a t i o n


 435      hxclog(i,j)       logical constraint for heat balances
 436      hxhulog(hu,j)     logical constraint for heat balances
 437      hxculog(i,cu)     logical constraint for heat balances
 438      qcqrlog(i)        logical constraint for con-reb duties
 439      boundup           upper bound on milp objective
 440      boundlo           lower bound on milp objective
 441   
 442  * these are the pure binary constraints of the minlp
 443      sequen(m)         restricts superstructure to a single sequence
 444      lead              sequence control
 445      limutil(j)        limits columns to have a single hot utility
 446      hidirect(i,j)     requires a single direction of heat integration
 447      heat(i)           logical integer constraint
 448      cuts(km)          integer cuts for kth iteration;
 449   
 450  *=====================================================================
 451  * equations for nlp subproblems
 452  *  note that some equations are duplicated in structure but
 453  *  given different names in the nlp and milp.  these equations
 454  *  involve both continuous and binary variables.  in older
 455  *  versions of gams, it was not permissible to pose nonlinear
 456  *  models with discrete variables present, even when their values
 457  *  were held fixed (rmidnlp).  this required two forms of the equation
 458  *  two be declared: one with the discrete variables present (milp)
 459  *  and one with binary variables replaced by parameters that have
 460  *  been assigned the current levels of their associated binary
 461  *  variables (nlp).  these equations start with the letter "n"
 462  *  in the nlp subproblems.
 463  *=====================================================================
 464   
 465  nlpobj.. zoau =e=
 466  * capital costs
 467   alpha*(
 468      sum(i,fc(i)*ycolp(i) + vc(i)*(tc(i)-tcmin(i))*f(i))
 469    + sum((i,j)$zcrhx(i,j),fchx*yhxp(i,j)
 470    + (vchx/htc)*(qcr(i,j)/(tc(i)-tr(j)+1-ycolp(i))))
 471    + sum((i,cu),fchx*ycup(i,cu)
 472    + (vchx/htc)*(qcu(i,cu)/(lmtd(i)+1-ycolp(i))))
 473    + sum((hu,j),fchx*yhup(hu,j)
 474    + (vchx/htc)*(qhu(hu,j)/(thu(hu)-tr(j)))))
 475  * operating costs
 476   + beta*(
 477      (costcw*sum((i,cu),qcu(i,cu)))
 478    + sum((hu,j),costhu(hu)*qhu(hu,j)));
 479   
 480  lmtdsn(i).. lmtd(i) - (2/3)*sqrt((tc(i)-tcin)*(tc(i)-tcout))
 481           - (1/6)*((tc(i)-tcin)+(tc(i)-tcout)) - (sl1(i)-sl2(i)) =e= 0;
 482   
 483  nartrex1(i).. s1(i) + s2(i) + sl1(i) - u*(1-ycolp(i)) =l= 0;
 484   
 485  nartrex2(i).. s3(i) + s4(i) + sl2(i) - u*(1-ycolp(i)) =l= 0;
 486   
 487  ntempset(i)..
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:52 Page 11
Heat Integrated Distillation Sequences, (MINLPHI,SEQ=118)
C o m p i l a t i o n


 488          tc(i) + lmtd(i) + sum(j$zcr(i,j),tr(j)) - u*ycolp(i) =l= 0;
 489   
 490  material(m)..
 491          sum(i$pm(i,m),spltfrc(i,m)*f(i))-sum(i$fm(i,m),f(i)) =e= 0;
 492   
 493  feed.. sum(i$zlead(i),f(i)) =e= totflow;
 494   
 495  duty(i)..
 496  qc(i) - (kf(i,"a") + kf(i,"b")*(tc(i)-tcmin(i))) - (s3(i)-s4(i)) =e= 0;
 497   
 498  rebcon(i,j)$zcr(i,j).. qr(j)-qc(i) =e= 0;
 499   
 500  conheat(i).. qc(i) =e= sum(j$zcrhx(i,j),qcr(i,j)) + sum(cu,qcu(i,cu));
 501   
 502  rebheat(j).. qr(j) =e= sum(i$zcrhx(i,j),qcr(i,j)) + sum(hu,qhu(hu,j));
 503   
 504  trtcdef(i,j)$zcr(i,j)..
 505   tr(j) - (af(i,"a") + af(i,"b")*(tc(i)-tcmin(i))) - (s1(i)-s2(i)) =e= 0;
 506   
 507  nmatlog(i).. f(i) - u*ycolp(i) =l= 0;
 508   
 509  ndtminc(i).. (tcmin(i) - tc(i) - u*(1-ycolp(i))) =l= 0;
 510   
 511  dtminlp(j).. dtmin - (thu("lp") - tr(j)) =l= 0;
 512   
 513  ndtmincr(i,j)$zcrhx(i,j).. tr(j)-tc(i) - u*(1-yhxp(i,j)) + dtmin =l= 0;
 514   
 515  ndtminex(j).. dtmin - (thu("ex") - tr(j)) - u*(1-yhup("ex",j)) =l= 0;
 516   
 517  nhxclog(i,j)$zcrhx(i,j).. qcr(i,j) =l= u*yhxp(i,j);
 518   
 519  nhxhulog(hu,j).. qhu(hu,j) =l= u*yhup(hu,j);
 520   
 521  nhxculog(i,cu).. qcu(i,cu) =l= u*ycup(i,cu);
 522   
 523  nqcqrlog(i).. qc(i) + sum(j$zcr(i,j),qr(j)) - u*ycolp(i) =l= 0;
 524   
 525   
 526  Model nlpsub  - collection of equations for nlp subproblems
 527             /nlpobj,
 528              lmtdsn,
 529              nartrex1,
 530              nartrex2,
 531              ntempset,
 532              material,
 533              feed,
 534              nmatlog,
 535              duty,
 536              rebcon,
 537              conheat,
 538              rebheat,
 539              ndtminc,
 540              dtminlp,
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:52 Page 12
Heat Integrated Distillation Sequences, (MINLPHI,SEQ=118)
C o m p i l a t i o n


 541              trtcdef,
 542              ndtmincr,
 543              ndtminex,
 544              nhxclog,
 545              nhxhulog,
 546              nhxculog,
 547              nqcqrlog/;
 548   
 549  nlpsub.solprint=1;
 550   
 551  *======================================================================
 552  * define equations for milp master problems
 553  *  note: the nonlinear parts of the objective function related
 554  *        to heat exchanger area have been broken out into separate
 555  *        constraints to perform their linearizations, only a
 556  *        contribution term appears in the linearized objective
 557  *        function milpcon.
 558  *======================================================================
 559   
 560  milpcon(k)..
 561     zoal =g= alpha*(sum(i,fc(i)*ycol(i))
 562            + fchx*(sum((i,j)$zcrhx(i,j),yhx(i,j))
 563            + sum((hu,j),yhu(hu,j)) + sum((i,cu),ycu(i,cu)))
 564   + sum(i,(vc(i)*((tck(i,k)-tcmin(i))*(f(i)-fk(i,k))
 565                                      + fk(i,k)*(tc(i)-tcmin(i)))))
 566   
 567   + (vchx/htc)*(vqcr(k) + vqhu(k) + vqcu(k)))
 568   
 569   + beta*((costcw*sum((i,cu),qcu(i,cu)))
 570        + sum((hu,j),costhu(hu)*qhu(hu,j)));
 571   
 572  *==========================================================================
 573  * these are the linearized contributions to the objective related
 574  *  to heat exchange.  the appearance of the binary variable storage
 575  *  parameters in the denominator of some of the expressions is done
 576  *  to prevent division by zero during model generation for linearizations
 577  *  done at points where the temperatures were set to zero for unused
 578  *  columns.  the numerator is zero then also and no error is introduced.
 579  *==========================================================================
 580  evqcr(k).. vqcr(k) =e=
 581    sum((i,j)$zcrhx(i,j),((qcrk(i,j,k)/(tck(i,k)-trk(j,k)+1-ycolk(i,k)))
 582     + ((1/(tck(i,k)-trk(j,k)+1-ycolk(i,k)))
 583        *(qcr(i,j)-qcrk(i,j,k)))*ycolk(i,k)
 584     + ((qcrk(i,j,k)/(sqr(tck(i,k)-trk(j,k))+1-ycolk(i,k)))
 585          *((tr(j)-trk(j,k))-(tc(i)-tck(i,k))))));
 586   
 587  evqhu(k).. vqhu(k) =e=
 588     sum((hu,j),((qhuk(hu,j,k)/(thu(hu)-trk(j,k)))
 589        + ((1/(thu(hu)-trk(j,k)))
 590          *(qhu(hu,j)-qhuk(hu,j,k)))*sum(i$zcr(i,j),ycolk(i,k))
 591        + ((qhuk(hu,j,k)/sqr(thu(hu)-trk(j,k)))*(tr(j)-trk(j,k)))));
 592   
 593  evqcu(k).. vqcu(k) =e=
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:52 Page 13
Heat Integrated Distillation Sequences, (MINLPHI,SEQ=118)
C o m p i l a t i o n


 594     sum((i,cu),((qcuk(i,cu,k)/(lmtdk(i,k)+1-ycolk(i,k)))
 595      + ((1/(lmtdk(i,k)+1-ycolk(i,k)))
 596        *(qcu(i,cu)-qcuk(i,cu,k)))*ycolk(i,k)
 597      - ((qcuk(i,cu,k)/(sqr(lmtdk(i,k))+1-ycolk(i,k)))
 598         *(lmtd(i)-lmtdk(i,k)))));
 599   
 600   
 601  lmtdsm(i,k)..
 602    lmtdmar(i,k)*(lmtd(i) - (2/3)*sqrt((tck(i,k)-tcin)*(tck(i,k)-tcout))
 603     - (1/6)*((tck(i,k)-tcin)+(tck(i,k)-tcout))
 604     - ((1/3)*(((2*tck(i,k)-(tcin+tcout))/
 605       sqrt(sqr(tck(i,k)) - (tcin+tcout)*tck(i,k) + (tcin*tcout))) + 1))
 606        *(tc(i)-tck(i,k)) - (sl1(i)-sl2(i))) =l= 0;
 607   
 608  artrex1(i).. s1(i) + s2(i) + sl1(i) - u*(1-ycol(i)) =l= 0;
 609   
 610  artrex2(i).. s3(i) + s4(i) + sl2(i) - u*(1-ycol(i)) =l= 0;
 611   
 612  tempset(i)..
 613      tc(i) + lmtd(i) + sum(j$zcr(i,j),tr(j)) - u*ycol(i) =l= 0;
 614   
 615  matlog(i).. f(i) - u*ycol(i) =l= 0;
 616   
 617  dtminc(i).. (tcmin(i) - tc(i) - u*(1-ycol(i))) =l= 0;
 618   
 619  dtmincr(i,j)$zcrhx(i,j).. tr(j) - tc(i) - u*(1-yhx(i,j)) + dtmin =l= 0;
 620   
 621  dtminex(j).. dtmin - (thu("ex") - tr(j)) - u*(1-yhu("ex",j)) =l= 0;
 622   
 623  hxclog(i,j)$zcrhx(i,j).. qcr(i,j) =l= u*yhx(i,j);
 624   
 625  hxhulog(hu,j).. qhu(hu,j) =l= u*yhu(hu,j);
 626   
 627  hxculog(i,cu).. qcu(i,cu) =l= u*ycu(i,cu);
 628   
 629  qcqrlog(i).. qc(i) + sum(j$zcr(i,j),qr(j)) - u*ycol(i) =l= 0;
 630   
 631  *---
 632  * pure binary constraints
 633  *---
 634  * material balances determine sequence
 635  sequen(m).. sum(i$pm(i,m),ycol(i)) - sum(i$fm(i,m),ycol(i)) =e= 0;
 636   
 637  * select 1 sequence
 638  lead.. sum(i$zlead(i),ycol(i)) =e= 1;
 639   
 640  * limit choice of hot utility to 1
 641  limutil(j).. sum(hu,yhu(hu,j)) =l= 1;
 642   
 643  * only one of the mutual heat integration binaries can be 1
 644  hidirect(i,j)$zlim(i,j).. yhx(i,j)
 645                + sum((ip,jp)$(ord(ip) eq ord(j)
 646                      and ord(jp) eq ord(i)),yhx(ip,jp)) =l= 1;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:52 Page 14
Heat Integrated Distillation Sequences, (MINLPHI,SEQ=118)
C o m p i l a t i o n


 647   
 648  * if a column doesn't exist then all binary variables associated
 649  *  with it must also be set to zero
 650  heat(i)..
 651    sum(j$zcrhx(i,j),yhx(i,j)
 652  + sum((ip,jp)$((ord(ip) eq ord(j)) and (ord(jp) eq ord(i))),yhx(ip,jp)))
 653  + sum((hu,j),yhu(hu,j)$zcr(i,j))
 654              + sum(cu,ycu(i,cu)) - uint*ycol(i) =l= 0;
 655   
 656  * integer cuts
 657  cuts(k)..
 658     sum(i,sign(ycolk(i,k)-0.5)*ycol(i))
 659   + sum((i,j)$zcrhx(i,j),sign(yhxk(i,j,k)-0.5)*yhx(i,j))
 660   + sum((hu,j),sign(yhuk(hu,j,k)-0.5)*yhu(hu,j))
 661   + sum((i,cu),sign(ycuk(i,cu,k)-0.5)*ycu(i,cu))
 662       =l= sum(i,ycolk(i,k)) + sum((i,j)$zcrhx(i,j),yhxk(i,j,k)) +
 663           sum((hu,j),yhuk(hu,j,k)) + sum((i,cu),ycuk(i,cu,k)) - 1;
 664   
 665  *======================================================================
 666  *  declare the milp master problem
 667  *======================================================================
 668  Model master  milp master problem
 669             /milpcon,
 670              evqcr,
 671              evqhu,
 672              evqcu,
 673              lmtdsm,
 674              artrex1,
 675              artrex2,
 676              tempset,
 677              material,
 678              feed,
 679              matlog,
 680              duty,
 681              rebcon,
 682              conheat,
 683              rebheat,
 684              dtminc,
 685              dtminlp,
 686              trtcdef,
 687              dtmincr,
 688              dtminex,
 689              hxclog,
 690              hxhulog,
 691              hxculog,
 692              qcqrlog,
 693              sequen,
 694              lead,
 695              limutil,
 696              hidirect,
 697              heat,
 698              cuts /;
 699   
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:52 Page 15
Heat Integrated Distillation Sequences, (MINLPHI,SEQ=118)
C o m p i l a t i o n


 700  master.solprint=0;
 701   
 702  *=====================================================================
 703  * all declarations made, start algorithmic procedures
 704  *=====================================================================
 705   
 706  *=====================================================================
 707  * initialize the optimal storage parameters to 1st guess
 708  *=====================================================================
 709  yhxopt(i,j) = yhxp(i,j);
 710  yhuopt(hu,j) = yhup(hu,j);
 711  ycuopt(i,cu) = ycup(i,cu);
 712  ycolopt(i) = ycolp(i);
 713   
 714  kopt = 1;
 715   
 716  *======================================================================
 717  * assign the initial configuration to the binary proposal parameter
 718  *======================================================================
 719  kiter("k-1") = yes;
 720   
 721  yhxk(i,j,kiter) = yhxp(i,j);
 722  yhuk(hu,j,kiter) = yhup(hu,j);
 723  ycuk(i,cu,kiter) = ycup(i,cu);
 724  ycolk(i,kiter) = ycolp(i);
 725   
 726  yhx.l(i,j) = yhxp(i,j);
 727  yhu.l(hu,j) = yhup(hu,j);
 728  ycu.l(i,cu) = ycup(i,cu);
 729  ycol.l(i) = ycolp(i);
 730   
 731  * set an arbitrary initial lower bound
 732  zoal.l = -10e+6;
 733   
 734  *======================================================================
 735  * give the continuous variables a starting point for 1st nlp
 736  *======================================================================
 737  tr.l("r-1") = 410;
 738  tc.l("c-1") = 390;
 739  tc.l("c-3") = 360;
 740  tr.l("r-3") = 380;
 741  tc.l("c-2") = 0;
 742  tr.l("r-2") = 0;
 743  tc.l("c-4") = 0;
 744  tr.l("r-4") = 0;
 745  f.l("c-1") = totflow;
 746  lmtd.l("c-1") = 75;
 747  lmtd.l("c-3") = 25;
 748  lmtd.l("c-2") = 0;
 749  lmtd.l("c-4") = 0;
 750  qr.l("r-2") = 0;
 751  qc.l("c-2") = 0;
 752  qr.l("r-4") = 0;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:52 Page 16
Heat Integrated Distillation Sequences, (MINLPHI,SEQ=118)
C o m p i l a t i o n


 753  qc.l("c-4") = 0;
 754   
 755  *======================================================================
 756  * add bounds on tc. A sqrt in equation lmtdsn is defined for tc > tcout
 757  * and for tc < tcin. The relevant interval is determined for each
 758  * element of tc based on the initial values given above.
 759  *======================================================================
 760  tc.lo("c-1") = tcout+1;
 761  tc.up("c-2") = tcin-1;
 762  tc.lo("c-3") = tcout+1;
 763  tc.up("c-4") = tcin-1;
 764   
 765  *======================================================================
 766  * bound the reboiler temperatures by their maximum allowable
 767  *======================================================================
 768  tr.up(j) = trmax(j);
 769   
 770  *======================================================================
 771  * initialize the dynamic sets for algorithm control
 772  *======================================================================
 773  k(km)       = no;
 774  kiter(km)   = no;
 775  kdynmax(km) = yes;
 776   
 777  *======================================================================
 778  * major driving loop of algorithm
 779  *======================================================================
 780  Loop(kloop$kdynmax(kloop),
 781   
 782  * update the dynamic iteration sets
 783  *  -set kiter to contain only the current iteration element
 784  *  -add to k the current iteration element
 785    kiter(km) = yes$(ord(km) eq ord(kloop));
 786    k(kiter) = yes;
 787   
 788  * store the current binary combination
 789    yhxk(i,j,kiter) = yhx.l(i,j);
 790    yhuk(hu,j,kiter) = yhu.l(hu,j);
 791    ycuk(i,cu,kiter) = ycu.l(i,cu);
 792    ycolk(i,kiter) = ycol.l(i);
 793   
 794  * set the current combination parameters that appear in the nlp constraints
 795    yhxp(i,j) = yhx.l(i,j);
 796    yhup(hu,j) = yhu.l(hu,j);
 797    ycup(i,cu) = ycu.l(i,cu);
 798    ycolp(i) = ycol.l(i);
 799   
 800    zoal.lo = zoal.l;
 801   
 802  *======================================================================
 803  * the current levels of the lmtds are moved away from zero
 804  *  to prevent evaluation errors in the next nlp subproblem
 805  *======================================================================
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:52 Page 17
Heat Integrated Distillation Sequences, (MINLPHI,SEQ=118)
C o m p i l a t i o n


 806    lmtd.l(i) = lmtd.l(i) + 1;
 807   
 808    nlpsub.reslim=15;
 809  * solve the nlp subproblem
 810    Solve nlpsub using nlp minimizing zoau;
 811   
 812  * resolve with conopt to get marginals for lmtdsn, if not provided by used NLP solver
 813    if( nlpsub.marginals = 0,
 814      option nlp = conopt;
 815      Solve nlpsub using nlp minimizing zoau;
 816      option nlp = BARON;
 817    );
 818   
 819  *======================================================================
 820  * update the optimal solution storage parameters if new nlp
 821  * objective function value is less than the incumbent
 822  *======================================================================
 823    If ((zoau.l lt zoaup),
 824      yhxopt(i,j) = yhx.l(i,j);
 825      yhuopt(hu,j) = yhu.l(hu,j);
 826      ycuopt(i,cu) = ycu.l(i,cu);
 827      ycolopt(i) = ycol.l(i);
 828   
 829      kopt = ord(kloop);            );
 830   
 831  *======================================================================
 832  * assign the solution levels of the variables that appear in the
 833  * nonlinear equations to their corresponding storage parameters
 834  *======================================================================
 835    fk(i,kiter) = f.l(i);
 836    qrk(j,kiter) = qr.l(j);
 837    qck(i,kiter) = qc.l(i);
 838    qcrk(i,j,kiter) = qcr.l(i,j);
 839    qhuk(hu,j,kiter) = qhu.l(hu,j);
 840    qcuk(i,cu,kiter) = qcu.l(i,cu);
 841    tck(i,kiter) = tc.l(i);
 842    trk(j,kiter) = tr.l(j);
 843    lmtdk(i,kiter) = lmtd.l(i);
 844   
 845  *======================================================================
 846  * assign the sign of marginal values of the nonlinear equalties
 847  * to the storage parameter lmtdmar
 848  *======================================================================
 849    lmtdmar(i,kiter) = -sign(lmtdsn.m(i))$(lmtdsn.m(i) ne eps);
 850   
 851  *======================================================================
 852  * store the smallest nlp objective value for upper bound on master
 853  *======================================================================
 854    zoaup = min(zoaup,zoau.l);
 855    zoal.up = zoaup;
 856  * protect against numerical errors introduced by the solver
 857    zoal.lo = min(zoal.lo,zoal.up);
 858   
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:52 Page 18
Heat Integrated Distillation Sequences, (MINLPHI,SEQ=118)
C o m p i l a t i o n


 859   
 860  * now solve the milp master problem
 861    Solve master using mip minimizing zoal;
 862   
 863    Display "new binary combination", ycol.l,yhx.l,yhu.l,ycu.l;
 864   
 865  *======================================================================
 866  * check stopping criterion:
 867  *  master problem integer infeasible
 868  *======================================================================
 869    If ((master.modelstat=4 OR
 870         master.modelstat=10 OR
 871         master.modelstat=19),
 872      kdynmax(km) = no;
 873      Display "stopping criterion met",
 874                   zoaup, yhxopt, yhuopt, ycuopt, ycolopt, kopt; );
 875                                                                     );
 876  * end of file
 877   
 878   


COMPILATION TIME     =        0.005 SECONDS      3 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:52 Page 19
Heat Integrated Distillation Sequences, (MINLPHI,SEQ=118)
Model Statistics    SOLVE nlpsub Using NLP From line 810


LOOPS                                kloop   k-1


MODEL STATISTICS

BLOCKS OF EQUATIONS          21     SINGLE EQUATIONS           80
BLOCKS OF VARIABLES          16     SINGLE VARIABLES           65
NON ZERO ELEMENTS           207     NON LINEAR N-Z             36
DERIVATIVE POOL              20     CONSTANT POOL              35
CODE LENGTH                 178


GENERATION TIME      =        0.003 SECONDS      4 MB  24.7.4 r58773 LEX-LEG


EXECUTION TIME       =        0.004 SECONDS      4 MB  24.7.4 r58773 LEX-LEG
               L O O P S              kloop k-1

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:52 Page 20
Heat Integrated Distillation Sequences, (MINLPHI,SEQ=118)
Solution Report     SOLVE nlpsub Using NLP From line 810


               S O L V E      S U M M A R Y

     MODEL   nlpsub              OBJECTIVE  zoau
     TYPE    NLP                 DIRECTION  MINIMIZE
     SOLVER  CONVERT             FROM LINE  810

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      14 No Solution Returned     
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.000        15.000
 ITERATION COUNT, LIMIT         0    2000000000
 EVALUATION ERRORS              0          1000

Convert 2.0      24.7.4 r58773 Released Sep 19, 2016 LEG x86 64bit/Linux      

--- Using Option File
Reading parameter(s) from "/home/renigijus/gams/opt-mod-lib/gamslib/minlphi/convert.opt"
>>  gams minlphi-scalar.gms
Finished reading from "/home/renigijus/gams/opt-mod-lib/gamslib/minlphi/convert.opt"
Gams      : minlphi-scalar.gms


No solution returned
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:52 Page 21
Heat Integrated Distillation Sequences, (MINLPHI,SEQ=118)
Model Statistics    SOLVE master Using MIP From line 861


LOOPS                                kloop   k-1


MODEL STATISTICS

BLOCKS OF EQUATIONS          30     SINGLE EQUATIONS           93
BLOCKS OF VARIABLES          23     SINGLE VARIABLES           88
NON ZERO ELEMENTS           320     DISCRETE VARIABLES         20


GENERATION TIME      =        0.007 SECONDS      3 MB  24.7.4 r58773 LEX-LEG


EXECUTION TIME       =        0.007 SECONDS      3 MB  24.7.4 r58773 LEX-LEG
               L O O P S              kloop k-1

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:52 Page 22
Heat Integrated Distillation Sequences, (MINLPHI,SEQ=118)
Solution Report     SOLVE master Using MIP From line 861


               S O L V E      S U M M A R Y

     MODEL   master              OBJECTIVE  zoal
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  861

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      10 Integer Infeasible       
**** OBJECTIVE VALUE               NA

 RESOURCE USAGE, LIMIT          0.005      1000.000
 ITERATION COUNT, LIMIT         0    2000000000

IBM ILOG CPLEX   24.7.4 r58773 Released Sep 19, 2016 LEG x86 64bit/Linux      
Cplex 12.6.3.0

*** Error Cannot open parameter file "/home/renigijus/gams/opt-mod-lib/gamslib/minlphi/cplex.opt"
*** Error Error code = 2; No such file or directory
Space for names approximately 0.00 Mb
Use option 'names no' to turn use of names off
MIP status(103): integer infeasible
Cplex Time: 0.00sec (det. 0.05 ticks)
Problem is integer infeasible.

No solution returned
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:52 Page 23
Heat Integrated Distillation Sequences, (MINLPHI,SEQ=118)
E x e c u t i o n


----    863 new binary combination

----    863 VARIABLE ycol.L  columns in superstructure

c-1 1.000,    c-3 1.000


----    863 VARIABLE yhx.L  heat integration matches condenser i reboiler j

            r-3

c-1       1.000


----    863 VARIABLE yhu.L  hot utility matches hot utility hu reboiler j

           r-1

lp       1.000


----    863 VARIABLE ycu.L  cold utility matches condenser i cold util cu

             cw

c-1       1.000
c-3       1.000


----    873 stopping criterion met
            PARAMETER zoaup                =        0.000  single value storage of upper bound

----    873 PARAMETER yhxopt  optimal heat integration

            r-3

c-1       1.000


----    873 PARAMETER yhuopt  optimal hot utility match

           r-1

lp       1.000


----    873 PARAMETER ycuopt  optimal cold utility match

             cw

c-1       1.000
c-3       1.000

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:52 Page 24
Heat Integrated Distillation Sequences, (MINLPHI,SEQ=118)
E x e c u t i o n


----    873 PARAMETER ycolopt  optimal superstructure

c-1 1.000,    c-3 1.000


----    873 PARAMETER kopt                 =        1.000  iteration at which optimal solution was found


EXECUTION TIME       =        0.000 SECONDS      3 MB  24.7.4 r58773 LEX-LEG


USER: Remigijus Paulavicius, Single User License     S170731:0859AO-LNX
      Imperial College London, Dept. of Chemical Engineering    DC13449
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      /home/renigijus/gams/opt-mod-lib/gamslib/minlphi/minlphi.gms
Output     /home/renigijus/gams/opt-mod-lib/gamslib/minlphi/minlphi-scalar.gms.lst
