GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:32:17 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  option MIP=convert;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:32:17 Page 2
Alcuin's River Crossing  (CROSS,SEQ=191)
C o m p i l a t i o n


      A farmer carrying a bushel of corn and accompanied by a goose
      and a wolf came to a river. He found a boat capable of
      transporting himself plus one of his possessions - corn, goose, or
      wolf - but no more. Now, he couldn't leave the corn alone with
      the goose, nor the goose alone with the wolf, else one would
      consume the other. Nevertheless, he succeeded in getting himself
      and his goods across the river safely.
       
       
      Borndoerfer, R, Groetschel, M, and Loebel, A, Alcuin's
      Transportation Problem and Integer Programming. Konrad Zuse
      Zentrum for Informationstechnik, Berlin, 1995.
       
      Contributed by Soren Nielsen, Institute for Mathematical Sciences
                     University of Copenhagen
  20   
  21  sets i items /goose, wolf, corn/
  22       t time  /t1*t10/;
  23   
  24  parameter dir(t)  crossing - near to far is +1 - far to near -1;
  25   
  26  dir(t) = power(-1,ord(t)-1);
  27   
  28  display dir;
  29   
  30  variables y(i,t)       1 iff the item is on the far side at time t
  31            cross(i,t)   crossing the river
  32            done(t)      all items in far side
  33            nocross      number of non crossing periods;
  34  binary variable y; positive variable cross,done;
  35   
  36  equations  DefDone(i,t)  everything on far side
  37             DefCross(i,t) crossing
  38             LimCross(t)
  39             EatNone1(t)
  40             EatNone2(t)
  41             Obj;
  42   
  43  DefCross(i,t+1)..    y(i,t+1) =e= y(i,t) + dir(t)*cross(i,t);
  44   
  45  DefDone(i,t) .. done(t) =l= y(i,t);
  46   
  47  limCross(t+1).. sum(i, cross(i,t)) =l= 1;
  48   
  49  EatNone1(t)..  dir(t)*(y('goose',t) + y('wolf',t) - 1) =l= done(t) ;
  50  EatNone2(t)..  dir(t)*(y('goose',t) + y('corn',t) - 1) =l= done(t) ;
  51   
  52  Obj..  nocross =e= sum(t, done(t));
  53   
  54  model river  / all /;
  55   
  56  y.fx(i,t)$(ord(t)=1) = 0;
  57   
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:32:17 Page 3
Alcuin's River Crossing  (CROSS,SEQ=191)
C o m p i l a t i o n


  58  option optcr = 0;
  59  solve river using mip maximizing nocross;
  60   
  61  display y.l, cross.l;


COMPILATION TIME     =        0.000 SECONDS      3 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:32:17 Page 4
Alcuin's River Crossing  (CROSS,SEQ=191)
E x e c u t i o n


----     28 PARAMETER dir  crossing - near to far is +1 - far to near -1

t1   1.000,    t2  -1.000,    t3   1.000,    t4  -1.000,    t5   1.000,    t6  -1.000,    t7   1.000,    t8  -1.000,    t9   1.000,    t10 -1.000

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:32:17 Page 5
Alcuin's River Crossing  (CROSS,SEQ=191)
Equation Listing    SOLVE river Using MIP From line 59


---- DefDone  =L=  everything on far side

DefDone(goose,t1)..  - y(goose,t1) + done(t1) =L= 0 ; (LHS = 0)
     
DefDone(goose,t2)..  - y(goose,t2) + done(t2) =L= 0 ; (LHS = 0)
     
DefDone(goose,t3)..  - y(goose,t3) + done(t3) =L= 0 ; (LHS = 0)
     
REMAINING 27 ENTRIES SKIPPED


---- DefCross  =E=  crossing

DefCross(goose,t2)..  - y(goose,t1) + y(goose,t2) - cross(goose,t1) =E= 0 ; (LHS = 0)
     
DefCross(goose,t3)..  - y(goose,t2) + y(goose,t3) + cross(goose,t2) =E= 0 ; (LHS = 0)
     
DefCross(goose,t4)..  - y(goose,t3) + y(goose,t4) - cross(goose,t3) =E= 0 ; (LHS = 0)
     
REMAINING 24 ENTRIES SKIPPED


---- LimCross  =L=  

LimCross(t2)..  cross(goose,t1) + cross(wolf,t1) + cross(corn,t1) =L= 1 ; (LHS = 0)
     
LimCross(t3)..  cross(goose,t2) + cross(wolf,t2) + cross(corn,t2) =L= 1 ; (LHS = 0)
     
LimCross(t4)..  cross(goose,t3) + cross(wolf,t3) + cross(corn,t3) =L= 1 ; (LHS = 0)
     
REMAINING 6 ENTRIES SKIPPED


---- EatNone1  =L=  

EatNone1(t1)..  y(goose,t1) + y(wolf,t1) - done(t1) =L= 1 ; (LHS = 0)
     
EatNone1(t2)..  - y(goose,t2) - y(wolf,t2) - done(t2) =L= -1 ; (LHS = 0, INFES = 1 ****)
     
EatNone1(t3)..  y(goose,t3) + y(wolf,t3) - done(t3) =L= 1 ; (LHS = 0)
     
REMAINING 7 ENTRIES SKIPPED


---- EatNone2  =L=  

EatNone2(t1)..  y(goose,t1) + y(corn,t1) - done(t1) =L= 1 ; (LHS = 0)
     
EatNone2(t2)..  - y(goose,t2) - y(corn,t2) - done(t2) =L= -1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:32:17 Page 6
Alcuin's River Crossing  (CROSS,SEQ=191)
Equation Listing    SOLVE river Using MIP From line 59


     EatNone2  =L=  

EatNone2(t3)..  y(goose,t3) + y(corn,t3) - done(t3) =L= 1 ; (LHS = 0)
     
REMAINING 7 ENTRIES SKIPPED


---- Obj  =E=  

Obj..  - done(t1) - done(t2) - done(t3) - done(t4) - done(t5) - done(t6) - done(t7) - done(t8) - done(t9) - done(t10) + nocross =E= 0 ; (LHS = 0)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:32:17 Page 7
Alcuin's River Crossing  (CROSS,SEQ=191)
Column Listing      SOLVE river Using MIP From line 59


---- y  1 iff the item is on the far side at time t

y(goose,t1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       -1       DefDone(goose,t1)
       -1       DefCross(goose,t2)
        1       EatNone1(t1)
        1       EatNone2(t1)

y(goose,t2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
       -1       DefDone(goose,t2)
        1       DefCross(goose,t2)
       -1       DefCross(goose,t3)
       -1       EatNone1(t2)
       -1       EatNone2(t2)

y(goose,t3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
       -1       DefDone(goose,t3)
        1       DefCross(goose,t3)
       -1       DefCross(goose,t4)
        1       EatNone1(t3)
        1       EatNone2(t3)

REMAINING 27 ENTRIES SKIPPED

---- cross  crossing the river

cross(goose,t1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       DefCross(goose,t2)
        1       LimCross(t2)

cross(goose,t2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       DefCross(goose,t3)
        1       LimCross(t3)

cross(goose,t3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       DefCross(goose,t4)
        1       LimCross(t4)

REMAINING 24 ENTRIES SKIPPED

---- done  all items in far side

done(t1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       DefDone(goose,t1)
        1       DefDone(wolf,t1)
        1       DefDone(corn,t1)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:32:17 Page 8
Alcuin's River Crossing  (CROSS,SEQ=191)
Column Listing      SOLVE river Using MIP From line 59


     done  all items in far side

       -1       EatNone1(t1)
       -1       EatNone2(t1)
       -1       Obj

done(t2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       DefDone(goose,t2)
        1       DefDone(wolf,t2)
        1       DefDone(corn,t2)
       -1       EatNone1(t2)
       -1       EatNone2(t2)
       -1       Obj

done(t3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       DefDone(goose,t3)
        1       DefDone(wolf,t3)
        1       DefDone(corn,t3)
       -1       EatNone1(t3)
       -1       EatNone2(t3)
       -1       Obj

REMAINING 7 ENTRIES SKIPPED

---- nocross  number of non crossing periods

nocross
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Obj

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:32:17 Page 9
Alcuin's River Crossing  (CROSS,SEQ=191)
Model Statistics    SOLVE river Using MIP From line 59


MODEL STATISTICS

BLOCKS OF EQUATIONS           6     SINGLE EQUATIONS           87
BLOCKS OF VARIABLES           4     SINGLE VARIABLES           68
NON ZERO ELEMENTS           239     DISCRETE VARIABLES         27


GENERATION TIME      =        0.002 SECONDS      4 MB  24.7.4 r58773 LEX-LEG


EXECUTION TIME       =        0.003 SECONDS      4 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:32:17 Page 10
Alcuin's River Crossing  (CROSS,SEQ=191)
Solution Report     SOLVE river Using MIP From line 59


               S O L V E      S U M M A R Y

     MODEL   river               OBJECTIVE  nocross
     TYPE    MIP                 DIRECTION  MAXIMIZE
     SOLVER  CONVERT             FROM LINE  59

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      14 No Solution Returned     
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.000      1000.000
 ITERATION COUNT, LIMIT         0    2000000000

Convert 2.0      24.7.4 r58773 Released Sep 19, 2016 LEG x86 64bit/Linux      

--- Using Option File
Reading parameter(s) from "/home/renigijus/gams/opt-mod-lib/gamslib/cross/convert.opt"
>>  ampl cross-scalar.mod
Finished reading from "/home/renigijus/gams/opt-mod-lib/gamslib/cross/convert.opt"
Ampl      : cross-scalar.mod


No solution returned
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:32:17 Page 11
Alcuin's River Crossing  (CROSS,SEQ=191)
E x e c u t i o n


----     61 VARIABLE y.L  1 iff the item is on the far side at time t

                      ( ALL       0.000 )


----     61 VARIABLE cross.L  crossing the river

                      ( ALL       0.000 )



EXECUTION TIME       =        0.001 SECONDS      3 MB  24.7.4 r58773 LEX-LEG


USER: Remigijus Paulavicius, Single User License     S170731:0859AO-LNX
      Imperial College London, Dept. of Chemical Engineering    DC13449
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      /home/renigijus/gams/opt-mod-lib/gamslib/cross/cross.gms
Output     /home/renigijus/gams/opt-mod-lib/gamslib/cross/cross-scalar.mod.lst
