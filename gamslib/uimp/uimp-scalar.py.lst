GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:29 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  option LP=convert;
   2  option LP=convert;
   3  option LP=convert;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:29 Page 2
UIMP - Production Scheduling Problem   (UIMP,SEQ=11)
C o m p i l a t i o n


   5   
       
      A company manufactures nuts, bolts and washers using three different machines
      that can be operated in normal or overtime production mode. The company
      needs to plan operations for the next two periods.
       
       
      Ellison, E F D, and Mitra, P, UIMP - User Interface for Mathematical
      Programming. ACM Transactions on Mathematical Software 8, 2 (1982).
       
  17   
  18   Sets  i  time periods       / summer, winter /
  19         j  production mode    / normal, overtime /
  20         k  products           / nuts, bolts, washers /
  21         l  machines           / m1, m2, m3 /
  22   
  23   
  24   Table  mh(l,k)  machine hours (hours per unit)
  25   
  26         nuts  bolts  washers
  27    m1    4     4       6
  28    m2    7     6       6
  29    m3    3
  30   
  31   
  32   Table mhadd(i,j) addfactors for mh
  33   
  34               normal  overtime
  35   summer                 -1
  36   winter        +1
  37   
  38   
  39   Table  av(l,j)  availability  (hours)
  40   
  41           normal  overtime
  42     m1     100       80
  43     m2     100       90
  44     m3      40       30
  45   
  46   Parameter t(i,j,k,l)  machine hours required
  47              a(i,j,l)    machine hours available;
  48   
  49    t(i,j,k,l) = mh(l,k) + mhadd(i,j)$mh(l,k) ;
  50    t("winter","overtime","washers","m1") = 5;
  51   
  52    a("summer",j,l) = av(l,j); a("winter",j,l) = av(l,j) + 10;
  53   
  54   Display mh, mhadd, av, t, a;
  55   
  56   
  57   Table tc(l,k)  production cost data
  58   
  59          nuts  bolts  washers
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:29 Page 3
UIMP - Production Scheduling Problem   (UIMP,SEQ=11)
C o m p i l a t i o n


  60   m1      2      3       4
  61   m2      4      3       2
  62   m3      1
  63   
  64   
  65   Table tcadd(i,j) addfactors for tc
  66   
  67                normal  overtime
  68   summer                  1
  69   winter          1       2
  70   
  71   
  72   Parameter c(i,j,k,l)  production cost ;
  73   
  74    c(i,j,k,l) = tc(l,k) + tcadd(i,j)$tc(l,k);  display c;
  75   
  76   
  77   Table  p(i,k)  selling price
  78   
  79                nuts  bolts  washers
  80   summer       10     10      9
  81   winter       11     11     10
  82   
  83   Table  d(i,k)  demand
  84   
  85               nuts  bolts  washers
  86   summer      25     30      30
  87   winter      30     25      25
  88   
  89   
  90   Parameter s(k)   storage cost     / (nuts,bolts,washers) = 1  /
  91             h(k)   storage capacity / (nuts,bolts)         = 20 /
  92   
  93   
  94   
  95   Variables  x(i,j,k,l)  production
  96              y(i,k)      products stored
  97              z(i,k)      products sold
  98              cost, revenue, profit
  99   
 100   Positive Variables x, y ;
 101   
 102   Equations  pdef        profit definition
 103              cdef        cost definition
 104              rdef        revenue definition
 105              ma(i,j,l)   machine availability
 106              ib(i,k)     inventory balance ;
 107   
 108   pdef.. profit =e= revenue - cost ;
 109   
 110   cdef.. cost =e= sum((i,k), s(k)*y(i,k) + sum((j,l), c(i,j,k,l)*x(i,j,k,l))) ;
 111   
 112   rdef.. revenue =e= sum((i,k), p(i,k)*z(i,k));
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:29 Page 4
UIMP - Production Scheduling Problem   (UIMP,SEQ=11)
C o m p i l a t i o n


 113   
 114   ma(i,j,l)..    sum(k, t(i,j,k,l)*x(i,j,k,l)) =l= a(i,j,l) ;
 115   
 116   ib(i,k).. sum((j,l)$mh(l,k), x(i,j,k,l)) + y(i-1,k) =e= z(i,k) + y(i,k) ;
 117   
 118     z.lo(i,k) = d(i,k) ;  y.up(i,k) = h(k) ;
 119   
 120   Model uimp ellison mitra / all / ;
 121   
 122    Solve uimp maximizing revenue using lp ;
 123    Solve uimp maximizing profit using lp ;
 124   
 125   Parameter rep summary report ;
 126   
 127       rep(l,i,k)  =  sum(j, x.l(i,j,k,l));
 128       rep("demand",i,k) = d(i,k);
 129       rep("supply",i,k) = sum(l, rep(l,i,k));
 130   
 131   Display rep;


COMPILATION TIME     =        0.001 SECONDS      3 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:29 Page 5
UIMP - Production Scheduling Problem   (UIMP,SEQ=11)
E x e c u t i o n


----     54 PARAMETER mh  machine hours (hours per unit)

          nuts       bolts     washers

m1       4.000       4.000       6.000
m2       7.000       6.000       6.000
m3       3.000


----     54 PARAMETER mhadd  addfactors for mh

            normal    overtime

summer                  -1.000
winter       1.000


----     54 PARAMETER av  availability  (hours)

        normal    overtime

m1     100.000      80.000
m2     100.000      90.000
m3      40.000      30.000


----     54 PARAMETER t  machine hours required

INDEX 1 = summer

                          m1          m2          m3

normal  .nuts          4.000       7.000       3.000
normal  .bolts         4.000       6.000
normal  .washers       6.000       6.000
overtime.nuts          3.000       6.000       2.000
overtime.bolts         3.000       5.000
overtime.washers       5.000       5.000

INDEX 1 = winter

                          m1          m2          m3

normal  .nuts          5.000       8.000       4.000
normal  .bolts         5.000       7.000
normal  .washers       7.000       7.000
overtime.nuts          4.000       7.000       3.000
overtime.bolts         4.000       6.000
overtime.washers       5.000       6.000

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:29 Page 6
UIMP - Production Scheduling Problem   (UIMP,SEQ=11)
E x e c u t i o n


----     54 PARAMETER a  machine hours available

                         m1          m2          m3

summer.normal       100.000     100.000      40.000
summer.overtime      80.000      90.000      30.000
winter.normal       110.000     110.000      50.000
winter.overtime      90.000     100.000      40.000


----     74 PARAMETER c  production cost

INDEX 1 = summer

                          m1          m2          m3

normal  .nuts          2.000       4.000       1.000
normal  .bolts         3.000       3.000
normal  .washers       4.000       2.000
overtime.nuts          3.000       5.000       2.000
overtime.bolts         4.000       4.000
overtime.washers       5.000       3.000

INDEX 1 = winter

                          m1          m2          m3

normal  .nuts          3.000       5.000       2.000
normal  .bolts         4.000       4.000
normal  .washers       5.000       3.000
overtime.nuts          4.000       6.000       3.000
overtime.bolts         5.000       5.000
overtime.washers       6.000       4.000

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:29 Page 7
UIMP - Production Scheduling Problem   (UIMP,SEQ=11)
Equation Listing    SOLVE uimp Using LP From line 122


---- pdef  =E=  profit definition

pdef..  cost - revenue + profit =E= 0 ; (LHS = 0)
     

---- cdef  =E=  cost definition

cdef..  - 2*x(summer,normal,nuts,m1) - 4*x(summer,normal,nuts,m2) - x(summer,normal,nuts,m3) - 3*x(summer,normal,bolts,m1) - 3*x(summer,normal,bolts,m2) - 4*x(summer,normal,washers,m1) - 2*x(summer,normal,washers,m2) - 3*x(summer,overtime,nuts,m1)
     
      - 5*x(summer,overtime,nuts,m2) - 2*x(summer,overtime,nuts,m3) - 4*x(summer,overtime,bolts,m1) - 4*x(summer,overtime,bolts,m2) - 5*x(summer,overtime,washers,m1) - 3*x(summer,overtime,washers,m2) - 3*x(winter,normal,nuts,m1)
     
      - 5*x(winter,normal,nuts,m2) - 2*x(winter,normal,nuts,m3) - 4*x(winter,normal,bolts,m1) - 4*x(winter,normal,bolts,m2) - 5*x(winter,normal,washers,m1) - 3*x(winter,normal,washers,m2) - 4*x(winter,overtime,nuts,m1) - 6*x(winter,overtime,nuts,m2)
     
      - 3*x(winter,overtime,nuts,m3) - 5*x(winter,overtime,bolts,m1) - 5*x(winter,overtime,bolts,m2) - 6*x(winter,overtime,washers,m1) - 4*x(winter,overtime,washers,m2) - y(summer,nuts) - y(summer,bolts) - y(summer,washers) - y(winter,nuts)
     
      - y(winter,bolts) - y(winter,washers) + cost =E= 0 ; (LHS = 0)
     

---- rdef  =E=  revenue definition

rdef..  - 10*z(summer,nuts) - 10*z(summer,bolts) - 9*z(summer,washers) - 11*z(winter,nuts) - 11*z(winter,bolts) - 10*z(winter,washers) + revenue =E= 0 ; (LHS = -1675, INFES = 1675 ****)
     

---- ma  =L=  machine availability

ma(summer,normal,m1)..  4*x(summer,normal,nuts,m1) + 4*x(summer,normal,bolts,m1) + 6*x(summer,normal,washers,m1) =L= 100 ; (LHS = 0)
     
ma(summer,normal,m2)..  7*x(summer,normal,nuts,m2) + 6*x(summer,normal,bolts,m2) + 6*x(summer,normal,washers,m2) =L= 100 ; (LHS = 0)
     
ma(summer,normal,m3)..  3*x(summer,normal,nuts,m3) =L= 40 ; (LHS = 0)
     
REMAINING 9 ENTRIES SKIPPED


---- ib  =E=  inventory balance

ib(summer,nuts)..  x(summer,normal,nuts,m1) + x(summer,normal,nuts,m2) + x(summer,normal,nuts,m3) + x(summer,overtime,nuts,m1) + x(summer,overtime,nuts,m2) + x(summer,overtime,nuts,m3) - y(summer,nuts) - z(summer,nuts) =E= 0 ; (LHS = -25, INFES = 25 ****)
     
ib(summer,bolts)..  x(summer,normal,bolts,m1) + x(summer,normal,bolts,m2) + x(summer,overtime,bolts,m1) + x(summer,overtime,bolts,m2) - y(summer,bolts) - z(summer,bolts) =E= 0 ; (LHS = -30, INFES = 30 ****)
     
ib(summer,washers)..  x(summer,normal,washers,m1) + x(summer,normal,washers,m2) + x(summer,overtime,washers,m1) + x(summer,overtime,washers,m2) - y(summer,washers) - z(summer,washers) =E= 0 ; (LHS = -30, INFES = 30 ****)
     
REMAINING 3 ENTRIES SKIPPED

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:29 Page 8
UIMP - Production Scheduling Problem   (UIMP,SEQ=11)
Column Listing      SOLVE uimp Using LP From line 122


---- x  production

x(summer,normal,nuts,m1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -2       cdef
        4       ma(summer,normal,m1)
        1       ib(summer,nuts)

x(summer,normal,nuts,m2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -4       cdef
        7       ma(summer,normal,m2)
        1       ib(summer,nuts)

x(summer,normal,nuts,m3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       cdef
        3       ma(summer,normal,m3)
        1       ib(summer,nuts)

REMAINING 25 ENTRIES SKIPPED

---- y  products stored

y(summer,nuts)
                (.LO, .L, .UP, .M = 0, 0, 20, 0)
       -1       cdef
       -1       ib(summer,nuts)
        1       ib(winter,nuts)

y(summer,bolts)
                (.LO, .L, .UP, .M = 0, 0, 20, 0)
       -1       cdef
       -1       ib(summer,bolts)
        1       ib(winter,bolts)

y(summer,washers)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       -1       cdef
       -1       ib(summer,washers)
        1       ib(winter,washers)

REMAINING 3 ENTRIES SKIPPED

---- z  products sold

z(summer,nuts)
                (.LO, .L, .UP, .M = 25, 25, +INF, 0)
      -10       rdef
       -1       ib(summer,nuts)
        0       (OLD LEVEL ****)

z(summer,bolts)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:29 Page 9
UIMP - Production Scheduling Problem   (UIMP,SEQ=11)
Column Listing      SOLVE uimp Using LP From line 122


     z  products sold

                (.LO, .L, .UP, .M = 30, 30, +INF, 0)
      -10       rdef
       -1       ib(summer,bolts)
        0       (OLD LEVEL ****)

z(summer,washers)
                (.LO, .L, .UP, .M = 30, 30, +INF, 0)
       -9       rdef
       -1       ib(summer,washers)
        0       (OLD LEVEL ****)

REMAINING 3 ENTRIES SKIPPED

---- cost  

cost
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       pdef
        1       cdef


---- revenue  

revenue
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       pdef
        1       rdef


---- profit  

profit
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       pdef

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:29 Page 10
UIMP - Production Scheduling Problem   (UIMP,SEQ=11)
Model Statistics    SOLVE uimp Using LP From line 122


MODEL STATISTICS

BLOCKS OF EQUATIONS           5     SINGLE EQUATIONS           21
BLOCKS OF VARIABLES           6     SINGLE VARIABLES           43  6 projected
NON ZERO ELEMENTS           116


GENERATION TIME      =        0.003 SECONDS      4 MB  24.7.4 r58773 LEX-LEG


EXECUTION TIME       =        0.003 SECONDS      4 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:29 Page 11
UIMP - Production Scheduling Problem   (UIMP,SEQ=11)
Solution Report     SOLVE uimp Using LP From line 122


               S O L V E      S U M M A R Y

     MODEL   uimp                OBJECTIVE  revenue
     TYPE    LP                  DIRECTION  MAXIMIZE
     SOLVER  CONVERT             FROM LINE  122

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      14 No Solution Returned     
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.000      1000.000
 ITERATION COUNT, LIMIT         0    2000000000

Convert 2.0      24.7.4 r58773 Released Sep 19, 2016 LEG x86 64bit/Linux      

--- Using Option File
Reading parameter(s) from "/home/renigijus/gams/opt-mod-lib/gamslib/uimp/convert.opt"
>>  pyomo uimp-scalar.py
Finished reading from "/home/renigijus/gams/opt-mod-lib/gamslib/uimp/convert.opt"
Pyomo     : uimp-scalar.py


No solution returned
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:29 Page 12
UIMP - Production Scheduling Problem   (UIMP,SEQ=11)
Equation Listing    SOLVE uimp Using LP From line 123


---- pdef  =E=  profit definition

pdef..  cost - revenue + profit =E= 0 ; (LHS = 0)
     

---- cdef  =E=  cost definition

cdef..  - 2*x(summer,normal,nuts,m1) - 4*x(summer,normal,nuts,m2) - x(summer,normal,nuts,m3) - 3*x(summer,normal,bolts,m1) - 3*x(summer,normal,bolts,m2) - 4*x(summer,normal,washers,m1) - 2*x(summer,normal,washers,m2) - 3*x(summer,overtime,nuts,m1)
     
      - 5*x(summer,overtime,nuts,m2) - 2*x(summer,overtime,nuts,m3) - 4*x(summer,overtime,bolts,m1) - 4*x(summer,overtime,bolts,m2) - 5*x(summer,overtime,washers,m1) - 3*x(summer,overtime,washers,m2) - 3*x(winter,normal,nuts,m1)
     
      - 5*x(winter,normal,nuts,m2) - 2*x(winter,normal,nuts,m3) - 4*x(winter,normal,bolts,m1) - 4*x(winter,normal,bolts,m2) - 5*x(winter,normal,washers,m1) - 3*x(winter,normal,washers,m2) - 4*x(winter,overtime,nuts,m1) - 6*x(winter,overtime,nuts,m2)
     
      - 3*x(winter,overtime,nuts,m3) - 5*x(winter,overtime,bolts,m1) - 5*x(winter,overtime,bolts,m2) - 6*x(winter,overtime,washers,m1) - 4*x(winter,overtime,washers,m2) - y(summer,nuts) - y(summer,bolts) - y(summer,washers) - y(winter,nuts)
     
      - y(winter,bolts) - y(winter,washers) + cost =E= 0 ; (LHS = 0)
     

---- rdef  =E=  revenue definition

rdef..  - 10*z(summer,nuts) - 10*z(summer,bolts) - 9*z(summer,washers) - 11*z(winter,nuts) - 11*z(winter,bolts) - 10*z(winter,washers) + revenue =E= 0 ; (LHS = -1675, INFES = 1675 ****)
     

---- ma  =L=  machine availability

ma(summer,normal,m1)..  4*x(summer,normal,nuts,m1) + 4*x(summer,normal,bolts,m1) + 6*x(summer,normal,washers,m1) =L= 100 ; (LHS = 0)
     
ma(summer,normal,m2)..  7*x(summer,normal,nuts,m2) + 6*x(summer,normal,bolts,m2) + 6*x(summer,normal,washers,m2) =L= 100 ; (LHS = 0)
     
ma(summer,normal,m3)..  3*x(summer,normal,nuts,m3) =L= 40 ; (LHS = 0)
     
REMAINING 9 ENTRIES SKIPPED


---- ib  =E=  inventory balance

ib(summer,nuts)..  x(summer,normal,nuts,m1) + x(summer,normal,nuts,m2) + x(summer,normal,nuts,m3) + x(summer,overtime,nuts,m1) + x(summer,overtime,nuts,m2) + x(summer,overtime,nuts,m3) - y(summer,nuts) - z(summer,nuts) =E= 0 ; (LHS = -25, INFES = 25 ****)
     
ib(summer,bolts)..  x(summer,normal,bolts,m1) + x(summer,normal,bolts,m2) + x(summer,overtime,bolts,m1) + x(summer,overtime,bolts,m2) - y(summer,bolts) - z(summer,bolts) =E= 0 ; (LHS = -30, INFES = 30 ****)
     
ib(summer,washers)..  x(summer,normal,washers,m1) + x(summer,normal,washers,m2) + x(summer,overtime,washers,m1) + x(summer,overtime,washers,m2) - y(summer,washers) - z(summer,washers) =E= 0 ; (LHS = -30, INFES = 30 ****)
     
REMAINING 3 ENTRIES SKIPPED

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:29 Page 13
UIMP - Production Scheduling Problem   (UIMP,SEQ=11)
Column Listing      SOLVE uimp Using LP From line 123


---- x  production

x(summer,normal,nuts,m1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -2       cdef
        4       ma(summer,normal,m1)
        1       ib(summer,nuts)

x(summer,normal,nuts,m2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -4       cdef
        7       ma(summer,normal,m2)
        1       ib(summer,nuts)

x(summer,normal,nuts,m3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       cdef
        3       ma(summer,normal,m3)
        1       ib(summer,nuts)

REMAINING 25 ENTRIES SKIPPED

---- y  products stored

y(summer,nuts)
                (.LO, .L, .UP, .M = 0, 0, 20, 0)
       -1       cdef
       -1       ib(summer,nuts)
        1       ib(winter,nuts)

y(summer,bolts)
                (.LO, .L, .UP, .M = 0, 0, 20, 0)
       -1       cdef
       -1       ib(summer,bolts)
        1       ib(winter,bolts)

y(summer,washers)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       -1       cdef
       -1       ib(summer,washers)
        1       ib(winter,washers)

REMAINING 3 ENTRIES SKIPPED

---- z  products sold

z(summer,nuts)
                (.LO, .L, .UP, .M = 25, 25, +INF, 0)
      -10       rdef
       -1       ib(summer,nuts)
        0       (OLD LEVEL ****)

z(summer,bolts)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:29 Page 14
UIMP - Production Scheduling Problem   (UIMP,SEQ=11)
Column Listing      SOLVE uimp Using LP From line 123


     z  products sold

                (.LO, .L, .UP, .M = 30, 30, +INF, 0)
      -10       rdef
       -1       ib(summer,bolts)
        0       (OLD LEVEL ****)

z(summer,washers)
                (.LO, .L, .UP, .M = 30, 30, +INF, 0)
       -9       rdef
       -1       ib(summer,washers)
        0       (OLD LEVEL ****)

REMAINING 3 ENTRIES SKIPPED

---- cost  

cost
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       pdef
        1       cdef


---- revenue  

revenue
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       pdef
        1       rdef


---- profit  

profit
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       pdef

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:29 Page 15
UIMP - Production Scheduling Problem   (UIMP,SEQ=11)
Model Statistics    SOLVE uimp Using LP From line 123


MODEL STATISTICS

BLOCKS OF EQUATIONS           5     SINGLE EQUATIONS           21
BLOCKS OF VARIABLES           6     SINGLE VARIABLES           43  6 projected
NON ZERO ELEMENTS           116


GENERATION TIME      =        0.001 SECONDS      3 MB  24.7.4 r58773 LEX-LEG


EXECUTION TIME       =        0.002 SECONDS      3 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:29 Page 16
UIMP - Production Scheduling Problem   (UIMP,SEQ=11)
Solution Report     SOLVE uimp Using LP From line 123


               S O L V E      S U M M A R Y

     MODEL   uimp                OBJECTIVE  profit
     TYPE    LP                  DIRECTION  MAXIMIZE
     SOLVER  CONVERT             FROM LINE  123

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      14 No Solution Returned     
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.000      1000.000
 ITERATION COUNT, LIMIT         0    2000000000

Convert 2.0      24.7.4 r58773 Released Sep 19, 2016 LEG x86 64bit/Linux      

--- Using Option File
Reading parameter(s) from "/home/renigijus/gams/opt-mod-lib/gamslib/uimp/convert.opt"
>>  pyomo uimp-scalar.py
Finished reading from "/home/renigijus/gams/opt-mod-lib/gamslib/uimp/convert.opt"
Pyomo     : uimp-scalar.py


No solution returned
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:29 Page 17
UIMP - Production Scheduling Problem   (UIMP,SEQ=11)
E x e c u t i o n


----    131 PARAMETER rep  summary report

                     nuts       bolts     washers

demand.summer      25.000      30.000      30.000
demand.winter      30.000      25.000      25.000



EXECUTION TIME       =        0.000 SECONDS      3 MB  24.7.4 r58773 LEX-LEG


USER: Remigijus Paulavicius, Single User License     S170731:0859AO-LNX
      Imperial College London, Dept. of Chemical Engineering    DC13449
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      /home/renigijus/gams/opt-mod-lib/gamslib/uimp/uimp.gms
Output     /home/renigijus/gams/opt-mod-lib/gamslib/uimp/uimp-scalar.py.lst
