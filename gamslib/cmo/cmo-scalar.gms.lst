GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:51 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  option MIP=convert;
   2  option MIP=convert;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:51 Page 2
Financial Optimization: Financial Engineering (CMO,SEQ=114)
C o m p i l a t i o n


   4   
       
         Collateralized Mortgage Obligations (CMO) are used to restructure
         the cashflows from underlying mortgage collateral into a set of
         high quality bonds with different maturities. In the following
         mixed-integer programming it is used to restructure a mortgage
         pool into six normal tranches and one zero tranche.
       
         The model is written in a general form to allow experimentation
         with different periodicity. The following version is annual.
       
       
      Dahl, H, Meeraus, A, and Zenios, S A, Some Financial Optimization
      Models: Risk Management. In Zenios, S A, Ed, Financial Optimization.
      Cambridge University Press, New York, NY, 1993.
       
  22   
  23  Sets
  24    i            tranches            / n1*n6, m /
  25    n(i)         normal tranches     / n1*n6 /
  26    m(i)         m tranches          / m    /
  27    tp           time periods        / 0*10 /
  28    ts(tp)       settlement date     / 0    /
  29    t(tp)        payment periods     / 1*10 /
  30    tl(tp)       last payment        /   10 /
  31    zpos(i,tp)   possible payment periods by tranche;
  32   
  33  Alias (i,j), (tp, tau) ;
  34   
  35  * note: all rates are monthly rates x 12.  for aggregation we need to
  36  *       compute equivalent rates.
  37  *
  38  *       (1+r/12)**12 == (1+rd)**d
  39   
  40  Scalars
  41    cg       collateral annual gross coupon        / .10 /
  42    nom      nominal value of collateral           / 100 /
  43    s        servicing rate                        /.005 /
  44    psa      pricing speed                         / 115 /
  45    d        periodicity                           /   1 /
  46    age      age of the collateral in years
  47    minn     minimum number of normal tranches     /   3 /
  48    minm     minimum number of m tranches          /   1 /;
  49   
  50  Table tranches(*,*)   tranche data (annual coupon and yield)
  51   
  52             coupon     yield     low-wal    up-wal
  53   
  54    n1        .085       .099      1.00       1.24
  55    n2        .085       .0999     2.00       2.44
  56    n3        .085       .0999     3.00       3.44
  57    n4        .0875      .1006     4.00       4.44
  58    n5        .0875      .1009     5.00       5.65
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:51 Page 3
Financial Optimization: Financial Engineering (CMO,SEQ=114)
C o m p i l a t i o n


  59    n6        .0875      .1017     7.00       7.94
  60    n7        .0875      .1018    10.00      10.94
  61    n8        .0875      .1025    15.00      20.00
  62    m         .0995      .105
  63    r                    .1285 ;
  64   
  65  Parameters
  66    po(tp)       outstanding collateral principal at zero prepayment
  67    a            zero prepayment annuity
  68    bv(tp)       temporary factor for bvf calculation
  69    bvfac(tp)    temporary factor for bvf calculation - rev sum
  70    bvf(tp)      bond value factor
  71    pe(tp)       expected outstanding collateral principal
  72    b(tp)        prepayment rate
  73    cflow(tp)    expected collateral payments
  74    prin(tp)     structuring principal payments from collateral
  75    sump         sum of prin
  76    cd           periodic gross coupon
  77    sd           periodic servicing rate
  78    coupon(i)    periodic coupon by tranche
  79    yield(i)     periodic yield by tranche
  80    yr           periodic residual yield
  81    wallo(i)     lower weighted average life in periodicity
  82    walup(i)     upper weighted average life in periodicity
  83    bign         big number
  84    smalln       small number
  85    cmax         maximum cmo coupon
  86    tmax         term to maturity of collateral
  87    rev(tp)      reverse order addresses
  88    psum(tp)     sum of principal payments on collateral till tp
  89    tpsum(tp)    sum of time principal payment products
  90    walp(tp)     wal on principal payments from collateral ;
  91   
  92   
  93    rev(tp) = card(tp) - 2*ord(tp) + 1 ;
  94    tmax    = card(t) ;
  95    age  = (360 - tmax*12/d)/12;
  96    b(t) = 0.06*(psa/100)*min((ord(t)+age*d)/(d*2.5),1) ;
  97    cd   = (1+cg/12)**(12/d)-1 ;
  98    sd   = (1+s/12)**(12/d)-1 ;
  99    yr   = (1 + tranches("r","yield")/12)**(12/d)-1 ;
 100    coupon(i) = (1+tranches(i,"coupon")/12)**(12/d)-1;
 101    yield(i)  = (1+tranches(i,"yield")/12)**(12/d)-1 ;
 102   
 103    wallo(n) = tranches(n,"low-wal")*d ;
 104    walup(n) = tranches(n,"up-wal")*d ;
 105   
 106    cmax = smax(i, coupon(i));
 107   
 108    a = nom*cd/(1 - power(1+cd,-tmax)) ;
 109    po(tp) = nom*(1 - power(1+cd,ord(tp)-1-tmax))/(1 - power(1+cd,-tmax));
 110    bv(tl) = 0;
 111    Loop(tp,
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:51 Page 4
Financial Optimization: Financial Engineering (CMO,SEQ=114)
C o m p i l a t i o n


 112       bv(tp+(rev(tp)-1)) = (bv(tp+rev(tp))+(a-sd*po(tp+(rev(tp)-1))))/(1+cmax) );
 113   
 114    bvf(tp)$po(tp) = min(bv(tp)/po(tp),1) ;
 115    bvf(tl) = 1;
 116   
 117    pe(ts) = nom ;
 118    Loop(t(tp),
 119       pe(tp) = pe(tp-1)*(1-b(tp))**(1/d)*po(tp)/po(tp-1)) ;
 120   
 121    cflow(t(tp)) = (1 + cd - sd)*pe(tp-1) - pe(tp) ;
 122    prin(t(tp))  = pe(tp-1)*bvf(tp-1) - pe(tp)*bvf(tp) ;
 123    sump = sum(tp, prin(tp));
 124   
 125    walp(ts)  = 0   ;
 126    tpsum(ts) = 0 ;
 127    psum(ts)  = 0 ;
 128    Loop(t(tp),
 129       psum(tp) = psum(tp-1) + prin(tp) ;
 130       tpsum(tp) = tpsum(tp-1) + (ord(tp)-1)*prin(tp)  );
 131    walp(t) = tpsum(t)/psum(t) ;
 132   
 133    zpos(i,tp)  = yes ;
 134    zpos(n,tp)$(walp(tp) gt walup(n)) = no ;
 135   
 136   
 137  Option age:6, tmax:6, cd:6, sd:6, cmax:6,a:6 ;
 138  Display age, tmax, cd, sd, cmax, a ;
 139  Display po, cflow, pe, bv, bvf, prin, walp, zpos ;
 140   
 141    bign   = sump*.7;
 142    smalln = sump*.03;
 143   
 144   
 145   
 146  Variables
 147    x(i,tp)     outstanding principal in each tranche
 148    p(i,tp)     principal payments on tranches
 149    c(i,tp)     cashflow in each tranche
 150    r(tp)       residual payments
 151    tpp(i)      product of time and principal payment
 152    z(i,tp)     tranche utilization variable (1=usage)
 153    y(i,tp)     upper triangular structure
 154    tin(i)      tranche in the structure
 155    pv          def pv tranches
 156    pvres       def pv residuals
 157    proceeds    gross proceeds ;
 158   
 159  Positive Variables x, c, r, y ;
 160  Binary Variables z, tin ;
 161   
 162  Equations
 163    obj               objective function
 164    defpv             def pv tranches
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:51 Page 5
Financial Optimization: Financial Engineering (CMO,SEQ=114)
C o m p i l a t i o n


 165    defpvres          def pv residuals
 166    pdef(i,tp)        definition of principal payments
 167    cdef(i,tp)        cashflow accounting
 168    retiren1(tp)      retirement of normal tranches
 169    retire(i,tp)      retirement of tranches
 170    retirem(m,tp)     retirement of m tranche
 171    retirem1(m,tp)    retirement of m tranche
 172    cbal(tp)          cashflow balance
 173    tppdef(i)         definition of tpp
 174    lowal(n)          lower bound on weighted average life
 175    upwal(n)          upper bound on weighted average life
 176    seq1(tp)          sequencing constraint 1
 177    seq2(i,tp)        sequencing constraint 2
 178    ydef(i,tp)        definition of y
 179    tindef1(i)        tranche in definition
 180    tindef2(i)        tranche in definition
 181    mcon              constraint on number of m tranches
 182    ncon              constraint on number of tranches ;
 183   
 184   
 185   
 186  obj..       proceeds =e= sum(i, pv(i)) + pvres;
 187   
 188  defpv(i)..  pv(i) =e= sum(zpos(i,t), c(i,t)*(1+yield(i))**(-ord(t))) ;
 189   
 190  defpvres..  pvres =e= sum(t, r(t)*(1+yr)**(-ord(t))) ;
 191   
 192  pdef(zpos(i,t(tp)))..  p(i,tp) =e= x(i,tp-1) - x(i,tp) ;
 193   
 194  cdef(zpos(i,t(tp)))..  c(i,tp) =e= coupon(i)*x(i,tp-1) + p(i,tp) ;
 195   
 196  retiren1(t(tp))..  sum(zpos(n,tp), p(n,tp)) =e= prin(tp)
 197                                                + sum(m, x(m,tp-1)*coupon(m) - c(m,tp)) ;
 198   
 199  retire(zpos(n,t)).. p(n,t) =l= cflow(t)*z(n,t) ;
 200   
 201  retirem(m,t)..  c(m,t) =l= cflow(t)*z(m,t) ;
 202   
 203  retirem1(m,t).. p(m,t) =l= prin(t)*z(m,t) ;
 204   
 205  cbal(t)..       sum(zpos(i,t), c(i,t)) + r(t) =e= cflow(t) ;
 206   
 207  tppdef(n)..     tpp(n) =e= sum(zpos(n,t), ord(t)*p(n,t)) ;
 208   
 209  lowal(n)..      wallo(n)*sum(ts, x(n,ts)) =l= tpp(n) ;
 210   
 211  upwal(n)..      walup(n)*sum(ts, x(n,ts)) =g= tpp(n) ;
 212   
 213  seq1(t)..       sum(zpos(i,t), z(i,t)) =e= 1 ;
 214   
 215  seq2(zpos(i,t)).. y(i,t) =g= y(i,t+1) ;
 216   
 217  ydef(zpos(i,t)).. y(i,t) =e= y(i-1,t) + z(i,t) ;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:51 Page 6
Financial Optimization: Financial Engineering (CMO,SEQ=114)
C o m p i l a t i o n


 218   
 219  tindef1(i)..   sum(ts, x(i,ts)) =l= tin(i)*bign ;
 220   
 221  tindef2(i)..   sum(ts, x(i,ts)) =g= tin(i)*smalln ;
 222   
 223  ncon..         sum(n, tin(n)) =g= minn ;
 224   
 225  mcon..         sum(m, tin(m)) =g= minm ;
 226   
 227   
 228   
 229  Model cmo structuring model / all /;
 230   
 231  p.lo(n,tp) = 0 ;
 232   
 233  x.fx(i,tl) = 0 ;
 234  x.fx(i,t)$(not zpos(i,t+1)) = 0 ;
 235  z.fx(i,tp)$(not zpos(i,tp)) = 0 ;
 236  z.fx(m,tp)$(not sum(n, zpos(n,tp))) = 1 ;
 237  Option optcr = 0.001 ;
 238   
 239   
 240  Parameter xx(tp,i)   principals
 241            zs(t,i)    binary time increments
 242            cs(t,i)    cashflows ;
 243   
 244  Solve cmo maximizing proceeds using mip ;
 245   
 246  xx(tp,i) = x.l(i,tp) ;
 247  zs(t,i)  = z.l(i,t) ;
 248  cs(t,i)  = c.l(i,t) ;
 249  Display zs, xx, cs, r.l ;
 250   
 251  Parameter report;
 252  report(t,n)              = z.l(n,t);
 253  report("value",i)        = sum(ts, x.l(i,ts));
 254  report("avl",n)$report("value",n) = tpp.l(n)/report("value",n)/d;
 255  report("pvalue",i)       = pv.l(i);
 256  report("pvalue","resid") = pvres.l;
 257  report("pvalue","total") = proceeds.l;
 258  Display report;


COMPILATION TIME     =        0.001 SECONDS      3 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:51 Page 7
Financial Optimization: Financial Engineering (CMO,SEQ=114)
E x e c u t i o n


----    138 PARAMETER age                  =    20.000000  age of the collateral in years
            PARAMETER tmax                 =    10.000000  term to maturity of collateral
            PARAMETER cd                   =     0.104713  periodic gross coupon
            PARAMETER sd                   =     0.005011  periodic servicing rate
            PARAMETER cmax                 =     0.104165  maximum cmo coupon
            PARAMETER a                    =    16.605491  zero prepayment annuity

----    139 PARAMETER po  outstanding collateral principal at zero prepayment

0 100.000,    1  93.866,    2  87.089,    3  79.603,    4  71.333,    5  62.197,    6  52.105,    7  40.955,    8  28.638,    9  15.031


----    139 PARAMETER cflow  expected collateral payments

1  22.581,    2  20.616,    3  18.775,    4  17.050,    5  15.431,    6  13.911,    7  12.483,    8  11.141,    9   9.877,    10  8.686


----    139 PARAMETER pe  expected outstanding collateral principal

0 100.000,    1  87.389,    2  75.486,    3  64.236,    4  53.591,    5  43.503,    6  33.929,    7  24.829,    8  16.164,    9   7.899


----    139 PARAMETER bv  temporary factor for bvf calculation

0 98.101,    1 92.215,    2 85.686,    3 78.442,    4 70.406,    5 61.492,    6 51.604,    7 40.635,    8 28.467,    9 14.971


----    139 PARAMETER bvf  bond value factor

0  0.981,    1  0.982,    2  0.984,    3  0.985,    4  0.987,    5  0.989,    6  0.990,    7  0.992,    8  0.994,    9  0.996,    10 1.000


----    139 PARAMETER prin  structuring principal payments from collateral

1  12.248,    2  11.583,    3  10.970,    4  10.405,    5   9.885,    6   9.407,    7   8.969,    8   8.567,    9   8.201,    10  7.867


----    139 PARAMETER walp  wal on principal payments from collateral

1  1.000,    2  1.486,    3  1.963,    4  2.432,    5  2.893,    6  3.346,    7  3.792,    8  4.232,    9  4.665,    10 5.093


----    139 SET zpos  possible payment periods by tranche

             0           1           2           3           4           5           6           7           8           9          10

n1         YES         YES
n2         YES         YES         YES         YES         YES
n3         YES         YES         YES         YES         YES         YES         YES
n4         YES         YES         YES         YES         YES         YES         YES         YES         YES
n5         YES         YES         YES         YES         YES         YES         YES         YES         YES         YES         YES
n6         YES         YES         YES         YES         YES         YES         YES         YES         YES         YES         YES
m          YES         YES         YES         YES         YES         YES         YES         YES         YES         YES         YES
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:51 Page 8
Financial Optimization: Financial Engineering (CMO,SEQ=114)
Equation Listing    SOLVE cmo Using MIP From line 244


---- obj  =E=  objective function

obj..  - pv(n1) - pv(n2) - pv(n3) - pv(n4) - pv(n5) - pv(n6) - pv(m) - pvres + proceeds =E= 0 ; (LHS = 0)
     

---- defpv  =E=  def pv tranches

defpv(n1)..  - 0.906110643564382*c(n1,1) + pv(n1) =E= 0 ; (LHS = 0)
     
defpv(n2)..  - 0.905302207746877*c(n2,1) - 0.819572087351369*c(n2,2) - 0.74196042008691*c(n2,3) - 0.67169840636548*c(n2,4) + pv(n2) =E= 0 ; (LHS = 0)
     
defpv(n3)..  - 0.905302207746877*c(n3,1) - 0.819572087351369*c(n3,2) - 0.74196042008691*c(n3,3) - 0.67169840636548*c(n3,4) - 0.608090050222728*c(n3,5) - 0.550505264975544*c(n3,6) + pv(n3) =E= 0 ; (LHS = 0)
     
REMAINING 4 ENTRIES SKIPPED


---- defpvres  =E=  def pv residuals

defpvres..  - 0.880014528399164*r(1) - 0.774425570193603*r(2) - 0.681505752934177*r(3) - 0.599734963769687*r(4) - 0.527775481306271*r(5) - 0.46445009128238*r(6) - 0.408722828044812*r(7) - 0.359682026767828*r(8) - 0.316525409159745*r(9)
     
      - 0.278546958668066*r(10) + pvres =E= 0 ; (LHS = 0)
     

---- pdef  =E=  definition of principal payments

pdef(n1,1)..  - x(n1,0) + x(n1,1) + p(n1,1) =E= 0 ; (LHS = 0)
     
pdef(n2,1)..  - x(n2,0) + x(n2,1) + p(n2,1) =E= 0 ; (LHS = 0)
     
pdef(n2,2)..  - x(n2,1) + x(n2,2) + p(n2,2) =E= 0 ; (LHS = 0)
     
REMAINING 46 ENTRIES SKIPPED


---- cdef  =E=  cashflow accounting

cdef(n1,1)..  - 0.0883909058926351*x(n1,0) - p(n1,1) + c(n1,1) =E= 0 ; (LHS = 0)
     
cdef(n2,1)..  - 0.0883909058926351*x(n2,0) - p(n2,1) + c(n2,1) =E= 0 ; (LHS = 0)
     
cdef(n2,2)..  - 0.0883909058926351*x(n2,1) - p(n2,2) + c(n2,2) =E= 0 ; (LHS = 0)
     
REMAINING 46 ENTRIES SKIPPED


---- retiren1  =E=  retirement of normal tranches

retiren1(1)..  - 0.104165400318551*x(m,0) + p(n1,1) + p(n2,1) + p(n3,1) + p(n4,1) + p(n5,1) + p(n6,1) + c(m,1) =E= 12.2484831531748 ; (LHS = 0, INFES = 12.2484831531748 ****)
     
retiren1(2)..  - 0.104165400318551*x(m,1) + p(n2,2) + p(n3,2) + p(n4,2) + p(n5,2) + p(n6,2) + c(m,2) =E= 11.5832895131723 ; (LHS = 0, INFES = 11.5832895131723 ****)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:51 Page 9
Financial Optimization: Financial Engineering (CMO,SEQ=114)
Equation Listing    SOLVE cmo Using MIP From line 244


     retiren1  =E=  retirement of normal tranches

retiren1(3)..  - 0.104165400318551*x(m,2) + p(n2,3) + p(n3,3) + p(n4,3) + p(n5,3) + p(n6,3) + c(m,3) =E= 10.9697879902878 ; (LHS = 0, INFES = 10.9697879902878 ****)
     
REMAINING 7 ENTRIES SKIPPED


---- retire  =L=  retirement of tranches

retire(n1,1)..  p(n1,1) - 22.5810847001566*z(n1,1) =L= 0 ; (LHS = 0)
     
retire(n2,1)..  p(n2,1) - 22.5810847001566*z(n2,1) =L= 0 ; (LHS = 0)
     
retire(n2,2)..  p(n2,2) - 20.6162935725221*z(n2,2) =L= 0 ; (LHS = 0)
     
REMAINING 36 ENTRIES SKIPPED


---- retirem  =L=  retirement of m tranche

retirem(m,1)..  c(m,1) - 22.5810847001566*z(m,1) =L= 0 ; (LHS = 0)
     
retirem(m,2)..  c(m,2) - 20.6162935725221*z(m,2) =L= 0 ; (LHS = 0)
     
retirem(m,3)..  c(m,3) - 18.7754871235587*z(m,3) =L= 0 ; (LHS = 0)
     
REMAINING 7 ENTRIES SKIPPED


---- retirem1  =L=  retirement of m tranche

retirem1(m,1)..  p(m,1) - 12.2484831531748*z(m,1) =L= 0 ; (LHS = 0)
     
retirem1(m,2)..  p(m,2) - 11.5832895131723*z(m,2) =L= 0 ; (LHS = 0)
     
retirem1(m,3)..  p(m,3) - 10.9697879902878*z(m,3) =L= 0 ; (LHS = 0)
     
REMAINING 7 ENTRIES SKIPPED


---- cbal  =E=  cashflow balance

cbal(1)..  c(n1,1) + c(n2,1) + c(n3,1) + c(n4,1) + c(n5,1) + c(n6,1) + c(m,1) + r(1) =E= 22.5810847001566 ; (LHS = 0, INFES = 22.5810847001566 ****)
     
cbal(2)..  c(n2,2) + c(n3,2) + c(n4,2) + c(n5,2) + c(n6,2) + c(m,2) + r(2) =E= 20.6162935725221 ; (LHS = 0, INFES = 20.6162935725221 ****)
     
cbal(3)..  c(n2,3) + c(n3,3) + c(n4,3) + c(n5,3) + c(n6,3) + c(m,3) + r(3) =E= 18.7754871235587 ; (LHS = 0, INFES = 18.7754871235587 ****)
     
REMAINING 7 ENTRIES SKIPPED

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:51 Page 10
Financial Optimization: Financial Engineering (CMO,SEQ=114)
Equation Listing    SOLVE cmo Using MIP From line 244


---- tppdef  =E=  definition of tpp

tppdef(n1)..  - p(n1,1) + tpp(n1) =E= 0 ; (LHS = 0)
     
tppdef(n2)..  - p(n2,1) - 2*p(n2,2) - 3*p(n2,3) - 4*p(n2,4) + tpp(n2) =E= 0 ; (LHS = 0)
     
tppdef(n3)..  - p(n3,1) - 2*p(n3,2) - 3*p(n3,3) - 4*p(n3,4) - 5*p(n3,5) - 6*p(n3,6) + tpp(n3) =E= 0 ; (LHS = 0)
     
REMAINING 3 ENTRIES SKIPPED


---- lowal  =L=  lower bound on weighted average life

lowal(n1)..  x(n1,0) - tpp(n1) =L= 0 ; (LHS = 0)
     
lowal(n2)..  2*x(n2,0) - tpp(n2) =L= 0 ; (LHS = 0)
     
lowal(n3)..  3*x(n3,0) - tpp(n3) =L= 0 ; (LHS = 0)
     
REMAINING 3 ENTRIES SKIPPED


---- upwal  =G=  upper bound on weighted average life

upwal(n1)..  1.24*x(n1,0) - tpp(n1) =G= 0 ; (LHS = 0)
     
upwal(n2)..  2.44*x(n2,0) - tpp(n2) =G= 0 ; (LHS = 0)
     
upwal(n3)..  3.44*x(n3,0) - tpp(n3) =G= 0 ; (LHS = 0)
     
REMAINING 3 ENTRIES SKIPPED


---- seq1  =E=  sequencing constraint 1

seq1(1)..  z(n1,1) + z(n2,1) + z(n3,1) + z(n4,1) + z(n5,1) + z(n6,1) + z(m,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
seq1(2)..  z(n2,2) + z(n3,2) + z(n4,2) + z(n5,2) + z(n6,2) + z(m,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
seq1(3)..  z(n2,3) + z(n3,3) + z(n4,3) + z(n5,3) + z(n6,3) + z(m,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
REMAINING 7 ENTRIES SKIPPED


---- seq2  =G=  sequencing constraint 2

seq2(n1,1)..  y(n1,1) - y(n1,2) =G= 0 ; (LHS = 0)
     
seq2(n2,1)..  y(n2,1) - y(n2,2) =G= 0 ; (LHS = 0)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:51 Page 11
Financial Optimization: Financial Engineering (CMO,SEQ=114)
Equation Listing    SOLVE cmo Using MIP From line 244


     seq2  =G=  sequencing constraint 2

seq2(n2,2)..  y(n2,2) - y(n2,3) =G= 0 ; (LHS = 0)
     
REMAINING 46 ENTRIES SKIPPED


---- ydef  =E=  definition of y

ydef(n1,1)..  - z(n1,1) + y(n1,1) =E= 0 ; (LHS = 0)
     
ydef(n2,1)..  - z(n2,1) - y(n1,1) + y(n2,1) =E= 0 ; (LHS = 0)
     
ydef(n2,2)..  - z(n2,2) - y(n1,2) + y(n2,2) =E= 0 ; (LHS = 0)
     
REMAINING 46 ENTRIES SKIPPED


---- tindef1  =L=  tranche in definition

tindef1(n1)..  x(n1,0) - 68.6704994180012*tin(n1) =L= 0 ; (LHS = 0)
     
tindef1(n2)..  x(n2,0) - 68.6704994180012*tin(n2) =L= 0 ; (LHS = 0)
     
tindef1(n3)..  x(n3,0) - 68.6704994180012*tin(n3) =L= 0 ; (LHS = 0)
     
REMAINING 4 ENTRIES SKIPPED


---- tindef2  =G=  tranche in definition

tindef2(n1)..  x(n1,0) - 2.94302140362862*tin(n1) =G= 0 ; (LHS = 0)
     
tindef2(n2)..  x(n2,0) - 2.94302140362862*tin(n2) =G= 0 ; (LHS = 0)
     
tindef2(n3)..  x(n3,0) - 2.94302140362862*tin(n3) =G= 0 ; (LHS = 0)
     
REMAINING 4 ENTRIES SKIPPED


---- mcon  =G=  constraint on number of m tranches

mcon..  tin(m) =G= 1 ; (LHS = 0, INFES = 1 ****)
     

---- ncon  =G=  constraint on number of tranches

ncon..  tin(n1) + tin(n2) + tin(n3) + tin(n4) + tin(n5) + tin(n6) =G= 3 ; (LHS = 0, INFES = 3 ****)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:51 Page 12
Financial Optimization: Financial Engineering (CMO,SEQ=114)
Column Listing      SOLVE cmo Using MIP From line 244


---- x  outstanding principal in each tranche

x(n1,0)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       pdef(n1,1)
       -0.0884  cdef(n1,1)
        1       lowal(n1)
        1.24    upwal(n1)
        1       tindef1(n1)
        1       tindef2(n1)

x(n1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       pdef(n1,1)

x(n2,0)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       pdef(n2,1)
       -0.0884  cdef(n2,1)
        2       lowal(n2)
        2.44    upwal(n2)
        1       tindef1(n2)
        1       tindef2(n2)

REMAINING 53 ENTRIES SKIPPED

---- p  principal payments on tranches

p(n1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       pdef(n1,1)
       -1       cdef(n1,1)
        1       retiren1(1)
        1       retire(n1,1)
       -1       tppdef(n1)

p(n2,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       pdef(n2,1)
       -1       cdef(n2,1)
        1       retiren1(1)
        1       retire(n2,1)
       -1       tppdef(n2)

p(n2,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       pdef(n2,2)
       -1       cdef(n2,2)
        1       retiren1(2)
        1       retire(n2,2)
       -2       tppdef(n2)

REMAINING 46 ENTRIES SKIPPED
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:51 Page 13
Financial Optimization: Financial Engineering (CMO,SEQ=114)
Column Listing      SOLVE cmo Using MIP From line 244


---- c  cashflow in each tranche

c(n1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -0.9061  defpv(n1)
        1       cdef(n1,1)
        1       cbal(1)

c(n2,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -0.9053  defpv(n2)
        1       cdef(n2,1)
        1       cbal(1)

c(n2,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -0.8196  defpv(n2)
        1       cdef(n2,2)
        1       cbal(2)

REMAINING 46 ENTRIES SKIPPED

---- r  residual payments

r(1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -0.88    defpvres
        1       cbal(1)

r(2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -0.7744  defpvres
        1       cbal(2)

r(3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -0.6815  defpvres
        1       cbal(3)

REMAINING 7 ENTRIES SKIPPED

---- tpp  product of time and principal payment

tpp(n1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       tppdef(n1)
       -1       lowal(n1)
       -1       upwal(n1)

tpp(n2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       tppdef(n2)
       -1       lowal(n2)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:51 Page 14
Financial Optimization: Financial Engineering (CMO,SEQ=114)
Column Listing      SOLVE cmo Using MIP From line 244


     tpp  product of time and principal payment

       -1       upwal(n2)

tpp(n3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       tppdef(n3)
       -1       lowal(n3)
       -1       upwal(n3)

REMAINING 3 ENTRIES SKIPPED

---- z  tranche utilization variable (1=usage)

z(n1,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
      -22.5811  retire(n1,1)
        1       seq1(1)
       -1       ydef(n1,1)

z(n2,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
      -22.5811  retire(n2,1)
        1       seq1(1)
       -1       ydef(n2,1)

z(n2,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
      -20.6163  retire(n2,2)
        1       seq1(2)
       -1       ydef(n2,2)

REMAINING 46 ENTRIES SKIPPED

---- y  upper triangular structure

y(n1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       seq2(n1,1)
        1       ydef(n1,1)
       -1       ydef(n2,1)

y(n1,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       seq2(n1,1)
       -1       ydef(n2,2)

y(n1,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       ydef(n2,3)

REMAINING 55 ENTRIES SKIPPED
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:51 Page 15
Financial Optimization: Financial Engineering (CMO,SEQ=114)
Column Listing      SOLVE cmo Using MIP From line 244


---- tin  tranche in the structure

tin(n1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
      -68.6705  tindef1(n1)
       -2.943   tindef2(n1)
        1       ncon

tin(n2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
      -68.6705  tindef1(n2)
       -2.943   tindef2(n2)
        1       ncon

tin(n3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
      -68.6705  tindef1(n3)
       -2.943   tindef2(n3)
        1       ncon

REMAINING 4 ENTRIES SKIPPED

---- pv  def pv tranches

pv(n1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       obj
        1       defpv(n1)

pv(n2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       obj
        1       defpv(n2)

pv(n3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       obj
        1       defpv(n3)

REMAINING 4 ENTRIES SKIPPED

---- pvres  def pv residuals

pvres
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       obj
        1       defpvres

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:51 Page 16
Financial Optimization: Financial Engineering (CMO,SEQ=114)
Column Listing      SOLVE cmo Using MIP From line 244


---- proceeds  gross proceeds

proceeds
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       obj

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:51 Page 17
Financial Optimization: Financial Engineering (CMO,SEQ=114)
Model Statistics    SOLVE cmo Using MIP From line 244


MODEL STATISTICS

BLOCKS OF EQUATIONS          20     SINGLE EQUATIONS          328
BLOCKS OF VARIABLES          11     SINGLE VARIABLES          293
NON ZERO ELEMENTS         1,000     DISCRETE VARIABLES         56


GENERATION TIME      =        0.003 SECONDS      4 MB  24.7.4 r58773 LEX-LEG


EXECUTION TIME       =        0.004 SECONDS      4 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:51 Page 18
Financial Optimization: Financial Engineering (CMO,SEQ=114)
Solution Report     SOLVE cmo Using MIP From line 244


               S O L V E      S U M M A R Y

     MODEL   cmo                 OBJECTIVE  proceeds
     TYPE    MIP                 DIRECTION  MAXIMIZE
     SOLVER  CONVERT             FROM LINE  244

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      14 No Solution Returned     
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.000      1000.000
 ITERATION COUNT, LIMIT         0    2000000000

Convert 2.0      24.7.4 r58773 Released Sep 19, 2016 LEG x86 64bit/Linux      

--- Using Option File
Reading parameter(s) from "/home/renigijus/gams/opt-mod-lib/gamslib/cmo/convert.opt"
>>  gams cmo-scalar.gms
Finished reading from "/home/renigijus/gams/opt-mod-lib/gamslib/cmo/convert.opt"
Gams      : cmo-scalar.gms


No solution returned
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:51 Page 19
Financial Optimization: Financial Engineering (CMO,SEQ=114)
E x e c u t i o n


----    249 PARAMETER zs  binary time increments

                      ( ALL       0.000 )


----    249 PARAMETER xx  principals

                      ( ALL       0.000 )


----    249 PARAMETER cs  cashflows

                      ( ALL       0.000 )


----    249 VARIABLE r.L  residual payments

                      ( ALL       0.000 )


----    258 PARAMETER report  

                      ( ALL       0.000 )



EXECUTION TIME       =        0.000 SECONDS      3 MB  24.7.4 r58773 LEX-LEG


USER: Remigijus Paulavicius, Single User License     S170731:0859AO-LNX
      Imperial College London, Dept. of Chemical Engineering    DC13449
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      /home/renigijus/gams/opt-mod-lib/gamslib/cmo/cmo.gms
Output     /home/renigijus/gams/opt-mod-lib/gamslib/cmo/cmo-scalar.gms.lst
