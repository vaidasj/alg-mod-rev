*  MIP written by GAMS Convert at 12/13/18 10:24:49
*  
*  Equation counts
*      Total        E        G        L        N        X        C        B
*         49       45        4        0        0        0        0        0
*  
*  Variable counts
*                   x        b        i      s1s      s2s       sc       si
*      Total     cont   binary  integer     sos1     sos2    scont     sint
*         86       45        9        0        0       32        0        0
*  FX      0        0        0        0        0        0        0        0
*  
*  Nonzero counts
*      Total    const       NL      DLL
*        225      225        0        0
*
*  Solve m using MIP minimizing x1;


Sets  s1 /22*25/,s2 /26*29/,s3 /30*33/,s4 /34*37/,s5 /38*41/,s6 /42*45/
          ,s7 /46*49/,s8 /50*53/;

Variables  x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19
          ,x20,x21,s2s1(s1),s2s2(s2),s2s3(s3),s2s4(s4),s2s5(s5),s2s6(s6)
          ,s2s7(s7),s2s8(s8),x54,x55,x56,x57,b58,x59,x60,x61,x62,x63,x64,x65
          ,x66,x67,x68,x69,x70,b71,b72,b73,b74,b75,b76,b77,b78,x79,x80,x81,x82
          ,x83,x84,x85,x86;

Positive Variables  x14,x15,x16,x17,x18,x19,x20,x21,x54,x55,x56,x57,x79,x80
          ,x81,x82,x83,x84,x85,x86;

Binary Variables  b58,b71,b72,b73,b74,b75,b76,b77,b78;

SOS2 Variables  s2s1(s1),s2s2(s2),s2s3(s3),s2s4(s4),s2s5(s5),s2s6(s6),s2s7(s7)
          ,s2s8(s8);

Equations  e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19
          ,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36
          ,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49;


e1..    x1 - x2 - 0.970873786407767*x3 - 0.942595909133754*x4
      - 0.91514165935316*x5 - x6 - 0.970873786407767*x7 - 0.942595909133754*x8
      - 0.91514165935316*x9 - x10 - 0.970873786407767*x11
      - 0.942595909133754*x12 - 0.91514165935316*x13 =E= 0;

e2..    x2 - 0.1*x18 - 3.5*x63 - 4.1*x64 - 10*b71 - 16*b72 =E= 0;

e3..    x3 - 0.1*x19 - 3.5*x65 - 4.1*x66 - 10*b73 - 16*b74 =E= 0;

e4..    x4 - 0.1*x20 - 3.5*x67 - 4.1*x68 - 10*b75 - 16*b76 =E= 0;

e5..    x5 - 0.1*x21 - 3.5*x69 - 4.1*x70 - 10*b77 - 16*b78 =E= 0;

e6..    x18 - 1000*s2s1('22') - 3000*s2s1('23') - 4500*s2s1('24')
      - 5800*s2s1('25') - 1000*s2s2('26') - 3000*s2s2('27') - 4500*s2s2('28')
      - 5800*s2s2('29') =E= 0;

e7..    x19 - 1000*s2s3('30') - 3000*s2s3('31') - 4500*s2s3('32')
      - 5800*s2s3('33') - 1000*s2s4('34') - 3000*s2s4('35') - 4500*s2s4('36')
      - 5800*s2s4('37') =E= 0;

e8..    x20 - 1000*s2s5('38') - 3000*s2s5('39') - 4500*s2s5('40')
      - 5800*s2s5('41') - 1000*s2s6('42') - 3000*s2s6('43') - 4500*s2s6('44')
      - 5800*s2s6('45') =E= 0;

e9..    x21 - 1000*s2s7('46') - 3000*s2s7('47') - 4500*s2s7('48')
      - 5800*s2s7('49') - 1000*s2s8('50') - 3000*s2s8('51') - 4500*s2s8('52')
      - 5800*s2s8('53') =E= 0;

e10..  - 20*s2s1('22') - 40*s2s1('23') - 50*s2s1('24') - 60*s2s1('25') + x63
       =E= 0;

e11..  - 20*s2s2('26') - 40*s2s2('27') - 50*s2s2('28') - 60*s2s2('29') + x64
       =E= 0;

e12..  - 20*s2s3('30') - 40*s2s3('31') - 50*s2s3('32') - 60*s2s3('33') + x65
       =E= 0;

e13..  - 20*s2s4('34') - 40*s2s4('35') - 50*s2s4('36') - 60*s2s4('37') + x66
       =E= 0;

e14..  - 20*s2s5('38') - 40*s2s5('39') - 50*s2s5('40') - 60*s2s5('41') + x67
       =E= 0;

e15..  - 20*s2s6('42') - 40*s2s6('43') - 50*s2s6('44') - 60*s2s6('45') + x68
       =E= 0;

e16..  - 20*s2s7('46') - 40*s2s7('47') - 50*s2s7('48') - 60*s2s7('49') + x69
       =E= 0;

e17..  - 20*s2s8('50') - 40*s2s8('51') - 50*s2s8('52') - 60*s2s8('53') + x70
       =E= 0;

e18..    s2s1('22') + s2s1('23') + s2s1('24') + s2s1('25') - b71 =E= 0;

e19..    s2s2('26') + s2s2('27') + s2s2('28') + s2s2('29') - b72 =E= 0;

e20..    s2s3('30') + s2s3('31') + s2s3('32') + s2s3('33') - b73 =E= 0;

e21..    s2s4('34') + s2s4('35') + s2s4('36') + s2s4('37') - b74 =E= 0;

e22..    s2s5('38') + s2s5('39') + s2s5('40') + s2s5('41') - b75 =E= 0;

e23..    s2s6('42') + s2s6('43') + s2s6('44') + s2s6('45') - b76 =E= 0;

e24..    s2s7('46') + s2s7('47') + s2s7('48') + s2s7('49') - b77 =E= 0;

e25..    s2s8('50') + s2s8('51') + s2s8('52') + s2s8('53') - b78 =E= 0;

e26..    x6 - 0.001*x14 - 15*b58 =E= 0;

e27..    x7 - 0.001*x15 =E= 0;

e28..    x8 - 0.001*x16 =E= 0;

e29..    x9 - 0.001*x17 =E= 0;

e30..  - x18 + x54 =E= 0;

e31..  - x19 - x54 + x55 =E= 0;

e32..  - x20 - x55 + x56 =E= 0;

e33..  - x21 - x56 + x57 =E= -24000;

e34..    x14 - 2*x54 + 48000*b58 =G= 0;

e35..    x15 - 2*x55 + 48000*b58 =G= 0;

e36..    x16 - 2*x56 + 48000*b58 =G= 0;

e37..    x17 - 2*x57 + 48000*b58 =G= 0;

e38..    x10 - 0.9*x79 - 0.15*x83 =E= 0;

e39..    x11 - 0.9*x80 - 0.15*x84 =E= 0;

e40..    x12 - 0.9*x81 - 0.15*x85 =E= 0;

e41..    x13 - 0.9*x82 - 0.15*x86 =E= 0;

e42..    x59 - x63 - x64 =E= 0;

e43..    x60 - x65 - x66 =E= 0;

e44..    x61 - x67 - x68 =E= 0;

e45..    x62 - x69 - x70 =E= 0;

e46..    x59 - x62 - x79 + x83 =E= 0;

e47..  - x59 + x60 - x80 + x84 =E= 0;

e48..  - x60 + x61 - x81 + x85 =E= 0;

e49..  - x61 + x62 - x82 + x86 =E= 0;

* set non-default bounds
x21.up = 9280;

Model m / all /;

m.limrow=0; m.limcol=0;

m.optcr      = 0;
Solve m using MIP minimizing x1;
