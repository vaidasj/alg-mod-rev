GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:29 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  option MIP=convert;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:29 Page 2
A P E X  -  Production Scheduling model  (PRODSCH,SEQ=9)
C o m p i l a t i o n


   3   
       
      A company specializing in the manufacture of outboard motors faces
      highly seasonal demands and wants to minimize production cost. The
      three main cost categories are:
        1. Direct production cost (nonlinear production relations and shift
           operations are possible)
        2. Inventory cost (rent or lease option)
        3. Workforce fluctuation cost.
       
       
      CDC, APEX-III Reference Manual Version 1.2, Control Data Corporation,
      Minneapolis, 1980. MIP Sample Problem
       
  19   
  20   
  21  Sets  q    quarters                   / summer, fall, winter, spring /
  22        s    shifts                     / first, second /
  23        l    production levels          / 1*4 /
  24        i(l) production level intervals / 1*3 /
  25   
  26  Parameters  d(q)    demand (motors per season)        / spring = 24000 /
  27              delt(q) discount factor
  28              lc(q)   leasing cost (dollars per season) / summer = 15000 /
  29              ei(q)   initial employment                / summer =    84 /
  30   
  31  Scalars  mc     material cost (dollars per motor)  / 100 /
  32           sr     space rental  (dollars per motor)  /   2 /
  33           invmax upper bound on inventory (motors)
  34           hc     hiring cost (dollars per employee) / 900 /
  35           fc     firing cost (dollars per employee) / 150 / ;
  36   
  37  delt(q) = 1/1.03**(ord(q)-1);   invmax = sum(q, d(q));
  38   
  39   
  40  Table  pr(*,l) production relationship
  41   
  42             1      2      3      4
  43   
  44  labor     20     40     50     60
  45  motor   1000   3000   4500   5800
  46   
  47   
  48  table sc(*,s)  shift cost  ( dollars per shift )
  49   
  50          first    second
  51   
  52  fixed   10000     16000
  53  labor    3500      4100
  54   
  55   
  56  Variables  cost        total discounted cost per year           (1000 $)
  57             dpc(q)      direct production cost        (1000 $ per season)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:29 Page 3
A P E X  -  Production Scheduling model  (PRODSCH,SEQ=9)
C o m p i l a t i o n


  58             isc(q)      inventory storage cost        (1000 $ per season)
  59             wfc(q)      workforce fluctuation cost    (1000 $ per season)
  60             src(q)      space rental cost             (1000 $ per season)
  61             p(q)        production                    (motors per season)
  62             ss(l,q,s)   production segments                   (sos2 type)
  63             ssb(l,q,s)  0-1 needed for ss sos2 formulation
  64             inv(q)      inventory                     (motors per season)
  65             lease       lease-rent option
  66             e(q)        total employment                      (employees)
  67             se(q,s)     shift employment            (employees per shift)
  68             shift(q,s)  shift use indicator                      (binary)
  69             h(q)        hirings in quarter                    (employees)
  70             f(q)        firings in quarter                    (employees)
  71   
  72  Positive Variables p, ss, inv, src, h, f ;
  73  Binary   Variables bpl, lease, shift, ssb ;
  74   
  75  Equations  acost        total cost definition                  (1000 $)
  76             ddpc(q)      direct production cost definition      (1000 $)
  77             disc(q)      inventory storage cost definition      (1000 $)
  78             dwfc(q)      workforce fluctuation cost definition  (1000 $)
  79             sbp(q)       sos product balance                    (motors)
  80             sbse(q,s)    sos shift employment balance        (employees)
  81             scc(q,s)     sos shift link
  82             invb(q)      inventory balance                      (motors)
  83             dsrc(q)      definition: space rental
  84             ed(q)        total employment definition         (employees)
  85             eb1(q)       employment balance type 1           (employees)
  86             eb2(q)       employment balance type 2           (employees)
  87             messb(q,s)   mutual exclusivity for ssb
  88             lssb(l,q,s)  ss - ssb linkage ;
  89   
  90   
  91  acost..      cost   =e= sum(q, delt(q)*( dpc(q) + isc(q) + wfc(q) ));
  92   
  93  ddpc(q)..    dpc(q) =e= (mc*p(q) + sum(s, sc("fixed",s)*shift(q,s)
  94                                          + sc("labor",s)*se(q,s)))/1000;
  95   
  96  sbp(q)..     p(q) =e= sum((s,l), pr("motor",l)*ss(l,q,s)) ;
  97   
  98  sbse(q,s)..  se(q,s) =e= sum(l, pr("labor",l)*ss(l,q,s)) ;
  99   
 100  scc(q,s)..   sum(l, ss(l,q,s)) =e= shift(q,s) ;
 101   
 102  invb(q)..    inv(q) =e= inv(q-1) + p(q) - d(q) ;
 103   
 104  disc(q)..    isc(q) =e= (lc(q)*lease + src(q))/1000 ;
 105   
 106  dsrc(q)..    src(q) =g= sr*( inv(q) - invmax*lease ) ;
 107   
 108  dwfc(q)..    wfc(q) =e= (hc*h(q) + fc*f(q))/1000 ;
 109   
 110  ed(q)..      e(q)   =e= sum(s, se(q,s));
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:29 Page 4
A P E X  -  Production Scheduling model  (PRODSCH,SEQ=9)
C o m p i l a t i o n


 111   
 112  eb1(q)..     e(q)   =e= e(q-1) + h(q) - f(q) + ei(q) ;
 113   
 114  eb2(q)..     e(q)   =e= e(q--1) + h(q) - f(q) ;
 115   
 116  messb(q,s).. sum(l, ssb(l,q,s)) =e= 1;
 117   
 118  lssb(l,q,s).. ss(l-1,q,s) + ss(l,q,s) =l= ssb(l-2,q,s) + ssb(l-1,q,s)
 119                                                         + ssb(l,q,s);
 120   
 121  p.up("spring") = .8*card(s)*smax(l, pr("motor",l));
 122   
 123  Model prod1 initial employment / acost, ddpc, sbp, sbse, scc, disc, invb
 124                                   dsrc, dwfc, ed, eb1, messb, lssb /
 125        prod2 steady state       / acost, ddpc, sbp, sbse, scc, disc, invb
 126                                   dsrc, dwfc, ed, eb2, messb, lssb /
 127   
 128   
 129  Solve prod1 minimizing cost using mip;
 130  Display se.l, p.l ;
 131   
 132  Parameter rep1 cost summary , rep2 production summary ;
 133   
 134  rep1("direct",q)    = dpc.l(q);  rep1("storage",q) = isc.l(q);
 135  rep1("hire-fire",q) = wfc.l(q);
 136  rep1("*total*",q)   = dpc.l(q) + isc.l(q) + wfc.l(q);
 137   
 138  rep2("output",q) = p.l(q); rep2("inventory",q)  = inv.l(q) ;
 139  rep2("sales",q)  = d(q);   rep2("employment",q) = e.l(q);
 140   
 141  Display rep1, rep2 ;


COMPILATION TIME     =        0.001 SECONDS      3 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:29 Page 5
A P E X  -  Production Scheduling model  (PRODSCH,SEQ=9)
Equation Listing    SOLVE prod1 Using MIP From line 129


---- acost  =E=  total cost definition                  (1000 $)

acost..  cost - dpc(summer) - 0.970873786407767*dpc(fall) - 0.942595909133754*dpc(winter) - 0.91514165935316*dpc(spring) - isc(summer) - 0.970873786407767*isc(fall) - 0.942595909133754*isc(winter) - 0.91514165935316*isc(spring) - wfc(summer)
     
      - 0.970873786407767*wfc(fall) - 0.942595909133754*wfc(winter) - 0.91514165935316*wfc(spring) =E= 0 ; (LHS = 0)
     

---- ddpc  =E=  direct production cost definition      (1000 $)

ddpc(summer)..  dpc(summer) - 0.1*p(summer) - 3.5*se(summer,first) - 4.1*se(summer,second) - 10*shift(summer,first) - 16*shift(summer,second) =E= 0 ; (LHS = 0)
     
ddpc(fall)..  dpc(fall) - 0.1*p(fall) - 3.5*se(fall,first) - 4.1*se(fall,second) - 10*shift(fall,first) - 16*shift(fall,second) =E= 0 ; (LHS = 0)
     
ddpc(winter)..  dpc(winter) - 0.1*p(winter) - 3.5*se(winter,first) - 4.1*se(winter,second) - 10*shift(winter,first) - 16*shift(winter,second) =E= 0 ; (LHS = 0)
     
REMAINING ENTRY SKIPPED


---- sbp  =E=  sos product balance                    (motors)

sbp(summer)..  p(summer) - 1000*ss(1,summer,first) - 1000*ss(1,summer,second) - 3000*ss(2,summer,first) - 3000*ss(2,summer,second) - 4500*ss(3,summer,first) - 4500*ss(3,summer,second) - 5800*ss(4,summer,first) - 5800*ss(4,summer,second) =E= 0 ; (LHS = 0)
     
sbp(fall)..  p(fall) - 1000*ss(1,fall,first) - 1000*ss(1,fall,second) - 3000*ss(2,fall,first) - 3000*ss(2,fall,second) - 4500*ss(3,fall,first) - 4500*ss(3,fall,second) - 5800*ss(4,fall,first) - 5800*ss(4,fall,second) =E= 0 ; (LHS = 0)
     
sbp(winter)..  p(winter) - 1000*ss(1,winter,first) - 1000*ss(1,winter,second) - 3000*ss(2,winter,first) - 3000*ss(2,winter,second) - 4500*ss(3,winter,first) - 4500*ss(3,winter,second) - 5800*ss(4,winter,first) - 5800*ss(4,winter,second) =E= 0 ; (LHS = 0)
     
REMAINING ENTRY SKIPPED


---- sbse  =E=  sos shift employment balance        (employees)

sbse(summer,first)..  - 20*ss(1,summer,first) - 40*ss(2,summer,first) - 50*ss(3,summer,first) - 60*ss(4,summer,first) + se(summer,first) =E= 0 ; (LHS = 0)
     
sbse(summer,second)..  - 20*ss(1,summer,second) - 40*ss(2,summer,second) - 50*ss(3,summer,second) - 60*ss(4,summer,second) + se(summer,second) =E= 0 ; (LHS = 0)
     
sbse(fall,first)..  - 20*ss(1,fall,first) - 40*ss(2,fall,first) - 50*ss(3,fall,first) - 60*ss(4,fall,first) + se(fall,first) =E= 0 ; (LHS = 0)
     
REMAINING 5 ENTRIES SKIPPED


---- scc  =E=  sos shift link

scc(summer,first)..  ss(1,summer,first) + ss(2,summer,first) + ss(3,summer,first) + ss(4,summer,first) - shift(summer,first) =E= 0 ; (LHS = 0)
     
scc(summer,second)..  ss(1,summer,second) + ss(2,summer,second) + ss(3,summer,second) + ss(4,summer,second) - shift(summer,second) =E= 0 ; (LHS = 0)
     
scc(fall,first)..  ss(1,fall,first) + ss(2,fall,first) + ss(3,fall,first) + ss(4,fall,first) - shift(fall,first) =E= 0 ; (LHS = 0)
     
REMAINING 5 ENTRIES SKIPPED

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:29 Page 6
A P E X  -  Production Scheduling model  (PRODSCH,SEQ=9)
Equation Listing    SOLVE prod1 Using MIP From line 129


---- disc  =E=  inventory storage cost definition      (1000 $)

disc(summer)..  isc(summer) - 0.001*src(summer) - 15*lease =E= 0 ; (LHS = 0)
     
disc(fall)..  isc(fall) - 0.001*src(fall) =E= 0 ; (LHS = 0)
     
disc(winter)..  isc(winter) - 0.001*src(winter) =E= 0 ; (LHS = 0)
     
REMAINING ENTRY SKIPPED


---- invb  =E=  inventory balance                      (motors)

invb(summer)..  - p(summer) + inv(summer) =E= 0 ; (LHS = 0)
     
invb(fall)..  - p(fall) - inv(summer) + inv(fall) =E= 0 ; (LHS = 0)
     
invb(winter)..  - p(winter) - inv(fall) + inv(winter) =E= 0 ; (LHS = 0)
     
REMAINING ENTRY SKIPPED


---- dsrc  =G=  definition: space rental

dsrc(summer)..  src(summer) - 2*inv(summer) + 48000*lease =G= 0 ; (LHS = 0)
     
dsrc(fall)..  src(fall) - 2*inv(fall) + 48000*lease =G= 0 ; (LHS = 0)
     
dsrc(winter)..  src(winter) - 2*inv(winter) + 48000*lease =G= 0 ; (LHS = 0)
     
REMAINING ENTRY SKIPPED


---- dwfc  =E=  workforce fluctuation cost definition  (1000 $)

dwfc(summer)..  wfc(summer) - 0.9*h(summer) - 0.15*f(summer) =E= 0 ; (LHS = 0)
     
dwfc(fall)..  wfc(fall) - 0.9*h(fall) - 0.15*f(fall) =E= 0 ; (LHS = 0)
     
dwfc(winter)..  wfc(winter) - 0.9*h(winter) - 0.15*f(winter) =E= 0 ; (LHS = 0)
     
REMAINING ENTRY SKIPPED


---- ed  =E=  total employment definition         (employees)

ed(summer)..  e(summer) - se(summer,first) - se(summer,second) =E= 0 ; (LHS = 0)
     
ed(fall)..  e(fall) - se(fall,first) - se(fall,second) =E= 0 ; (LHS = 0)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:29 Page 7
A P E X  -  Production Scheduling model  (PRODSCH,SEQ=9)
Equation Listing    SOLVE prod1 Using MIP From line 129


     ed  =E=  total employment definition         (employees)

ed(winter)..  e(winter) - se(winter,first) - se(winter,second) =E= 0 ; (LHS = 0)
     
REMAINING ENTRY SKIPPED


---- eb1  =E=  employment balance type 1           (employees)

eb1(summer)..  e(summer) - h(summer) + f(summer) =E= 84 ; (LHS = 0, INFES = 84 ****)
     
eb1(fall)..  - e(summer) + e(fall) - h(fall) + f(fall) =E= 0 ; (LHS = 0)
     
eb1(winter)..  - e(fall) + e(winter) - h(winter) + f(winter) =E= 0 ; (LHS = 0)
     
REMAINING ENTRY SKIPPED


---- messb  =E=  mutual exclusivity for ssb

messb(summer,first)..  ssb(1,summer,first) + ssb(2,summer,first) + ssb(3,summer,first) + ssb(4,summer,first) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
messb(summer,second)..  ssb(1,summer,second) + ssb(2,summer,second) + ssb(3,summer,second) + ssb(4,summer,second) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
messb(fall,first)..  ssb(1,fall,first) + ssb(2,fall,first) + ssb(3,fall,first) + ssb(4,fall,first) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
REMAINING 5 ENTRIES SKIPPED


---- lssb  =L=  ss - ssb linkage

lssb(1,summer,first)..  ss(1,summer,first) - ssb(1,summer,first) =L= 0 ; (LHS = 0)
     
lssb(1,summer,second)..  ss(1,summer,second) - ssb(1,summer,second) =L= 0 ; (LHS = 0)
     
lssb(1,fall,first)..  ss(1,fall,first) - ssb(1,fall,first) =L= 0 ; (LHS = 0)
     
REMAINING 29 ENTRIES SKIPPED

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:29 Page 8
A P E X  -  Production Scheduling model  (PRODSCH,SEQ=9)
Column Listing      SOLVE prod1 Using MIP From line 129


---- cost  total discounted cost per year           (1000 $)

cost
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       acost


---- dpc  direct production cost        (1000 $ per season)

dpc(summer)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       acost
        1       ddpc(summer)

dpc(fall)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -0.9709  acost
        1       ddpc(fall)

dpc(winter)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -0.9426  acost
        1       ddpc(winter)

REMAINING ENTRY SKIPPED

---- isc  inventory storage cost        (1000 $ per season)

isc(summer)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       acost
        1       disc(summer)

isc(fall)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -0.9709  acost
        1       disc(fall)

isc(winter)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -0.9426  acost
        1       disc(winter)

REMAINING ENTRY SKIPPED

---- wfc  workforce fluctuation cost    (1000 $ per season)

wfc(summer)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       acost
        1       dwfc(summer)

wfc(fall)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:24:29 Page 9
A P E X  -  Production Scheduling model  (PRODSCH,SEQ=9)
Column Listing      SOLVE prod1 Using MIP From line 129


     wfc  workforce fluctuation cost    (1000 $ per season)

                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -0.9709  acost
        1       dwfc(fall)

wfc(winter)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -0.9426  acost
        1       dwfc(winter)

REMAINING ENTRY SKIPPED

---- src  space rental cost             (1000 $ per season)

src(summer)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -0.001   disc(summer)
        1       dsrc(summer)

src(fall)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -0.001   disc(fall)
        1       dsrc(fall)

src(winter)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -0.001   disc(winter)
        1       dsrc(winter)

REMAINING ENTRY SKIPPED

---- p  production                    (motors per season)

p(summer)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -0.1     ddpc(summer)
        1       sbp(summer)
       -1       invb(summer)

p(fall)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -0.1     ddpc(fall)
        1       sbp(fall)
       -1       invb(fall)

p(winter)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -0.1     ddpc(winter)
        1       sbp(winter)
       -1       invb(winter)

REMAINING ENTRY SKIPPED
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:29 Page 10
A P E X  -  Production Scheduling model  (PRODSCH,SEQ=9)
Column Listing      SOLVE prod1 Using MIP From line 129


---- ss  production segments                   (sos2 type)

ss(1,summer,first)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
    -1000       sbp(summer)
      -20       sbse(summer,first)
        1       scc(summer,first)
        1       lssb(1,summer,first)
        1       lssb(2,summer,first)

ss(1,summer,second)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
    -1000       sbp(summer)
      -20       sbse(summer,second)
        1       scc(summer,second)
        1       lssb(1,summer,second)
        1       lssb(2,summer,second)

ss(1,fall,first)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
    -1000       sbp(fall)
      -20       sbse(fall,first)
        1       scc(fall,first)
        1       lssb(1,fall,first)
        1       lssb(2,fall,first)

REMAINING 29 ENTRIES SKIPPED

---- ssb  0-1 needed for ss sos2 formulation

ssb(1,summer,first)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       messb(summer,first)
       -1       lssb(1,summer,first)
       -1       lssb(2,summer,first)
       -1       lssb(3,summer,first)

ssb(1,summer,second)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       messb(summer,second)
       -1       lssb(1,summer,second)
       -1       lssb(2,summer,second)
       -1       lssb(3,summer,second)

ssb(1,fall,first)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       messb(fall,first)
       -1       lssb(1,fall,first)
       -1       lssb(2,fall,first)
       -1       lssb(3,fall,first)

REMAINING 29 ENTRIES SKIPPED
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:29 Page 11
A P E X  -  Production Scheduling model  (PRODSCH,SEQ=9)
Column Listing      SOLVE prod1 Using MIP From line 129


---- inv  inventory                     (motors per season)

inv(summer)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       invb(summer)
       -1       invb(fall)
       -2       dsrc(summer)

inv(fall)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       invb(fall)
       -1       invb(winter)
       -2       dsrc(fall)

inv(winter)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       invb(winter)
       -1       invb(spring)
       -2       dsrc(winter)

REMAINING ENTRY SKIPPED

---- lease  lease-rent option

lease
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
      -15       disc(summer)
    48000       dsrc(summer)
    48000       dsrc(fall)
    48000       dsrc(winter)
    48000       dsrc(spring)


---- e  total employment                      (employees)

e(summer)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       ed(summer)
        1       eb1(summer)
       -1       eb1(fall)

e(fall)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       ed(fall)
        1       eb1(fall)
       -1       eb1(winter)

e(winter)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       ed(winter)
        1       eb1(winter)
       -1       eb1(spring)

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:29 Page 12
A P E X  -  Production Scheduling model  (PRODSCH,SEQ=9)
Column Listing      SOLVE prod1 Using MIP From line 129


     e  total employment                      (employees)

REMAINING ENTRY SKIPPED

---- se  shift employment            (employees per shift)

se(summer,first)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -3.5     ddpc(summer)
        1       sbse(summer,first)
       -1       ed(summer)

se(summer,second)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -4.1     ddpc(summer)
        1       sbse(summer,second)
       -1       ed(summer)

se(fall,first)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -3.5     ddpc(fall)
        1       sbse(fall,first)
       -1       ed(fall)

REMAINING 5 ENTRIES SKIPPED

---- shift  shift use indicator                      (binary)

shift(summer,first)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
      -10       ddpc(summer)
       -1       scc(summer,first)

shift(summer,second)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
      -16       ddpc(summer)
       -1       scc(summer,second)

shift(fall,first)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
      -10       ddpc(fall)
       -1       scc(fall,first)

REMAINING 5 ENTRIES SKIPPED

---- h  hirings in quarter                    (employees)

h(summer)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -0.9     dwfc(summer)
       -1       eb1(summer)

h(fall)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:29 Page 13
A P E X  -  Production Scheduling model  (PRODSCH,SEQ=9)
Column Listing      SOLVE prod1 Using MIP From line 129


     h  hirings in quarter                    (employees)

                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -0.9     dwfc(fall)
       -1       eb1(fall)

h(winter)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -0.9     dwfc(winter)
       -1       eb1(winter)

REMAINING ENTRY SKIPPED

---- f  firings in quarter                    (employees)

f(summer)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -0.15    dwfc(summer)
        1       eb1(summer)

f(fall)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -0.15    dwfc(fall)
        1       eb1(fall)

f(winter)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -0.15    dwfc(winter)
        1       eb1(winter)

REMAINING ENTRY SKIPPED
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:29 Page 14
A P E X  -  Production Scheduling model  (PRODSCH,SEQ=9)
Model Statistics    SOLVE prod1 Using MIP From line 129


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS           89
BLOCKS OF VARIABLES          15     SINGLE VARIABLES          118
NON ZERO ELEMENTS           384     DISCRETE VARIABLES         41


GENERATION TIME      =        0.004 SECONDS      4 MB  24.7.4 r58773 LEX-LEG


EXECUTION TIME       =        0.004 SECONDS      4 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:29 Page 15
A P E X  -  Production Scheduling model  (PRODSCH,SEQ=9)
Solution Report     SOLVE prod1 Using MIP From line 129


               S O L V E      S U M M A R Y

     MODEL   prod1               OBJECTIVE  cost
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CONVERT             FROM LINE  129

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      14 No Solution Returned     
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.000      1000.000
 ITERATION COUNT, LIMIT         0    2000000000

Convert 2.0      24.7.4 r58773 Released Sep 19, 2016 LEG x86 64bit/Linux      

--- Using Option File
Reading parameter(s) from "/home/renigijus/gams/opt-mod-lib/gamslib/prodsch/convert.opt"
>>  ampl prodsch-scalar.mod
Finished reading from "/home/renigijus/gams/opt-mod-lib/gamslib/prodsch/convert.opt"
Ampl      : prodsch-scalar.mod


No solution returned
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:24:29 Page 16
A P E X  -  Production Scheduling model  (PRODSCH,SEQ=9)
E x e c u t i o n


----    130 VARIABLE se.L  shift employment            (employees per shift)

                      ( ALL       0.000 )


----    130 VARIABLE p.L  production                    (motors per season)

                      ( ALL       0.000 )


----    141 PARAMETER rep1  cost summary

                      ( ALL       0.000 )


----    141 PARAMETER rep2  production summary

           spring

sales   24000.000



EXECUTION TIME       =        0.000 SECONDS      3 MB  24.7.4 r58773 LEX-LEG


USER: Remigijus Paulavicius, Single User License     S170731:0859AO-LNX
      Imperial College London, Dept. of Chemical Engineering    DC13449
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      /home/renigijus/gams/opt-mod-lib/gamslib/prodsch/prodsch.gms
Output     /home/renigijus/gams/opt-mod-lib/gamslib/prodsch/prodsch-scalar.mod.lst
