GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:28:44 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  option MIP=convert;
   2  option MIP=convert;
   3  option MIP=convert;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:28:44 Page 2
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
C o m p i l a t i o n


   5   
       
         This GAMS file contains the implementation of the Generalized Benders'
         Decomposition method for the mathematical formulation based on the
         superstructure proposed in the paper "Synthesis of General Distillation
         Sequences - Nonsharp Separations" (Aggarwal and Floudas, 1990). The
         superstructure features simple columns (single feed and top and bottom
         products) and no heat integration between columns is considered. The
         formulation is a mixed-integer nonlinear programming (MINLP) problem.
         The implementation is based on the algorithmic procedure APROS (Paules
         and Floudas, 1989).
       
       
      Morari, M, and Grossmann, I E, Eds, Chemical Engineering Optimization
      Models with GAMS. Computer Aids for Chemical Engineering Corporation,
      1991.
       
      Aggarwal, A, and Floudas, C A, Synthesis of General Distillation
      Sequences: Nonsharp Separation. Computers and Chemical Engineering 14,
      6 (1990), 631-653.
       
  28   
  30  {{
  31  ===========================================================================
  32   
  33                        copyright(C) 1989 A. Aggarwal & C.A. Floudas
  34                                          Dept. of Chemical Engineering
  35                                          Princeton University
  36                                          Princeton, NJ 08544-5263
  37   
  38  ===========================================================================
  39                      -----------------------------
  40                      ** Three Component Example **
  41                      -----------------------------
  42           _____________________________________________________
  43          |   Comp.   |    Feed    |   Product 1  |  Product 2  |
  44          |___________|____________|______________|_____________|
  45          |  propane  |    100.0   |     30.0     |    70.0     |
  46          | i-butane  |    100.0   |     50.0     |    50.0     |
  47          | n-butane  |    100.0   |     30.0     |    70.0     |
  48          |___________|____________|______________|_____________|
  49   
  50  ===========================================================================
  51  }}
  52   
  53  Option
  54       limrow = 0
  55       limcol = 0
  56       decimals = 4
  57       solprint = off ;
  58   
  59  *==========================================================================
  60  * Declare Sets
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:28:44 Page 3
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
C o m p i l a t i o n


  61  *==========================================================================
  62   
  63  Sets
  64   
  65  {{ Basic Sets - These sets define the problem i.e. number of components
  66     in the feed stream, columns in the superstructure and no. of product
  67     streams }}
  68   
  69      cp               components /a,b,c/
  70      col              columns /col-1*col-2/
  71      pr               products /prod-1,prod-2/
  72      stm              column streams /top,bot/
  73   
  74  {{ Derived Sets - These sets are used to define the mapping of the
  75     superstructure for the problem at any stage }}
  76   
  77      bypass(pr)              overall pass to product pr from initial feed
  78      acol(col)               existing columns
  79      prstream(col,stm,pr)    stream to product pr from column col
  80      inter(col,col,stm)      column i fed by column j top or bottom
  81      key(col,stm,cp)         key components for column col
  82      link(col,stm,cp)        nondistribution of nonkeys
  83   
  84  {{ Duplicate Sets For Saving Full Mapping - These sets are used for
  85     saving the full mapping of the original superstructure }}
  86   
  87      savprst(col,stm,pr)     save full representation of prstream
  88      savinter(col,col,stm)   save full representation of feedtop
  89      savkey(col,stm,cp)      save full representation of keys
  90      savlink(col,stm,cp)     save full representation of link
  91   
  92  {{ Sets For Algorithm - These are the static and dynamic sets needed
  93     to implement the iterative algorithm }}
  94   
  95      km               static iterations /1*150/
  96      kloop            loop counter /1*20/
  97      k(km)            dynamic iterations /1/
  98      count(km)        dynamic counter /1/     ;
  99   
 100  Alias(col,colp) ;
 101   
 102   
 103  *==========================================================================
 104  * Define Mapping Of Sets
 105  *==========================================================================
 106   
 107  {{ The set "bypass" defines the set of streams of overall bypasses to the
 108     final products. If an overall bypass stream for a particular product
 109     does not exist in the superstructure then that element for this set is
 110     set to "NO" }}
 111   
 112  bypass(pr) = YES ;
 113   
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:28:44 Page 4
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
C o m p i l a t i o n


 114  {{ The set "inter" defines interconnections between columns based upon the
 115     superstructure. e.g. "inter('col-1','col-2','top')" refers to a stream
 116     to column 1 from column 2 top }}
 117   
 118  inter(colp,col,stm) = NO ;
 119  inter('col-1','col-2','top') = YES ;
 120  inter('col-2','col-1','bot') = YES ;
 121   
 122  {{ The set "key" defines the key components for each column in the
 123     superstructure. e.g. "key('col-1','top','a') = YES" defines the light key
 124     for column 1 to be component a }}
 125   
 126  key(col,stm,cp) = NO ;
 127  key('col-1','top','a') = YES ;
 128  key('col-2','top','b') = YES ;
 129  key('col-1','bot','b') = YES ;
 130  key('col-2','bot','c') = YES ;
 131   
 132  {{ The set "link" is used to restrict distribution of nonkeys in the top
 133     and bottom streams of a column. Each element of this set represents
 134     the nonexistence of a particular component in a particular stream }}
 135   
 136  link(col,stm,cp) = NO ;
 137  link('col-1','top','c') = YES ;
 138  link('col-2','bot','a') = YES ;
 139   
 140  {{ The set "prstream" defines the set of streams from various columns to
 141     the final products. If it is known that one or more of such streams
 142     cannot exist then they can be deleted from the formulation by setting
 143     the corresponding elements of this set to "NO" }}
 144   
 145  prstream(col,stm,pr) = YES ;
 146   
 147  Display bypass,inter,key,link,prstream ;
 148   
 149  {{ The full mapping representation of the superstructure is saved in
 150     the save sets defined earlier }}
 151   
 152  savprst(prstream(col,stm,pr)) = prstream(col,stm,pr) ;
 153  savinter(inter(colp,col,stm)) = inter(colp,col,stm) ;
 154  savkey(key(col,stm,cp)) = key(col,stm,cp) ;
 155  savlink(col,stm,cp) = link(col,stm,cp) ;
 156   
 157   
 158  *==========================================================================
 159  * Declare Parameters & Scalars
 160  *==========================================================================
 161   
 162  Parameters
 163   
 164  {{ Define the component flowrates for the feedstream }}
 165   
 166      feed(cp)         feed of each component
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:28:44 Page 5
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
C o m p i l a t i o n


 167                       /a  100
 168                        b  100
 169                        c  100/
 170   
 171  {{ Define the various coefficients for the cost expression for each column.
 172     These coefficients are determined by regression analysis of cost data
 173     generated by doing column simulations for each column for a range of
 174     flowrates, feed composition and key component recoveries }}
 175   
 176      cost(col)        alpha coeff.
 177                       /col-1    0.23947
 178                        col-2    0.75835/
 179      a1(col)          a1 coeff.
 180                       /col-1   -0.0139904
 181                        col-2   -0.0661588/
 182      a2(col,stm)      a2 coeff.
 183                       /col-1.top    0.0093514
 184                        col-2.top    0.0338147
 185                        col-1.bot    0.0077308
 186                        col-2.bot    0.0373349/
 187      a3(col,cp)       a3 coeff.(corresponds to feed composition)
 188                       /col-1.a   -0.0005719
 189                        col-2.a    0.0016371
 190                        col-1.b    0.0042656
 191                        col-2.b    0.0288996
 192                        col-1.c    0.0
 193                        col-2.c    0.0/
 194   
 195  {{ Define parameters for storage of cost coefficients for each lagrange
 196     function }}
 197   
 198      mcost(km,col)
 199      ma1(km,col)
 200      ma2(km,col,stm)
 201      ma3(km,col,cp)
 202   
 203  {{ Define parameters for storage of lagrange multipliers for primal
 204     problems }}
 205   
 206      mint(km,col)
 207   
 208  {{ Define parameters for storage of lagrange multipliers for relaxed primal
 209     problems }}
 210   
 211      mlint(km,col)
 212   
 213  {{ Define parameters for storage of variable values for primal problems }}
 214   
 215      zk(km)
 216      finitk(km,col)
 217      fink(km,col)
 218      fk(km,col,stm)
 219      fintk(km,colp,col,stm)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:28:44 Page 6
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
C o m p i l a t i o n


 220      fprk(km,col,stm,pr)
 221      fbyk(km,pr)
 222      cfink(km,col,cp)
 223      xkin(km,col,cp)
 224      xk(km,col,stm,cp)
 225      reck(km,col,stm,cp)
 226   
 227  {{ Define parameters to represent current values of complicating variables
 228     given by the master problem }}
 229   
 230      yp(col)
 231   
 232  {{ Miscellaneous parameters }}
 233   
 234      cut(km)
 235      cutcol(km,col)
 236      nfeas(km)        feasibility of primal problem
 237      xinit(cp)        composition of streams from initial splitter
 238   
 239  Scalars
 240   
 241      totfeed          total flow to the superstructure
 242      flag             check to run primal /1/
 243      kend             stopping criteria for algorithm /1/
 244      iter             iteration number /0/
 245      zup              upper bound
 246      zlo              lower bound
 247      np               number of products  ;
 248   
 249  np = card(pr) ;
 250   
 251  {{ The table gives the compositions of the desired product streams }}
 252   
 253  Table              out(cp,pr)     product amounts
 254   
 255                     prod-1    prod-2
 256   
 257      a               30.0      70.0
 258      b               50.0      50.0
 259      c               30.0      70.0   ;
 260   
 261  *==========================================================================
 262  * Declare Variables
 263  *==========================================================================
 264   
 265  Variables
 266   
 267      c                total cost of distillation sequence
 268      alp              sum of infeasibilities
 269      mu               master solution
 270   
 271  Positive Variables
 272   
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:28:44 Page 7
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
C o m p i l a t i o n


 273  {{ The positive variables define the material balance for the superstructure
 274     and the names are self explanatory }}
 275   
 276      finit(col)         flow from initial splitter to column col
 277      fin(col)           total flow to column col
 278      f(col,stm)         flow rate of column top & bottom product streams
 279      fint(colp,col,stm) flow rate of interconnecting streams
 280      fpr(col,stm,pr)    flow rate of streams to products
 281      fby(pr)            flow rate of bypass streams
 282   
 283      cfin(col,cp)       component flow to column col
 284   
 285      xin(col,cp)        composition of stream to column col
 286      x(col,stm,cp)      composition of column product streams
 287   
 288      rec(col,stm,cp)    recovery of key components
 289   
 290  {{ The following are slack variables used for relaxing the constraints of
 291     the primal problem for the formulation of the relaxed primal problem.
 292     Each inequality constraint f(x) < 0 is relaxed by the addition of a
 293     positive slack variables sa to give :
 294                            f(x) < sa                                     }}
 295   
 296      saint(col)           sa for logical constraints
 297   
 298  Binary Variables
 299   
 300  {{ The binary variables define the existence or nonexistence of a particular
 301      column in the sequence. A value of 1 means that the column exists,
 302      a value of 0 denotes nonexistence }}
 303   
 304      y(col)               existence of column col ;
 305   
 306  *==========================================================================
 307  * Declare Equations
 308  *==========================================================================
 309   
 310  Equations
 311   
 312  {{ PRIMAL PROBLEM EQUATIONS }}
 313   
 314  lpobj                 objective function
 315   
 316  spblinit              initial splitter balance
 317  spblcol(col,stm)      splitter balances at each column top & bottom outlets
 318  mixbal(col,cp)        mixer balance equations at inlet of each column
 319  colbal(col,cp)        component balance equations around each column
 320  keybal(col,stm,cp)    key component balances for each column
 321  probal(pr,cp)         component balance equations for each product
 322  cfloin(col,cp)        equations defining component flowrates for column inlet
 323  molsum(col,stm)       constraint for sum of mole fractions for column products
 324  molsumin(col)         constraint for sum of mole fractions for column inlet
 325  dist(col,stm,cp)      constraint defining the nondistribution of nonkeys
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:28:44 Page 8
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
C o m p i l a t i o n


 326   
 327  intcon(col)           logical constraints
 328   
 329  {{ RELAXED PRIMAL PROBLEM EQUATIONS }}
 330   
 331  infeas                sum of infeasibilities as objective function
 332   
 333  lintcon(col)          relaxed logical constraints
 334   
 335  {{ MASTER PROBLEM EQUATIONS }}
 336   
 337  bnd                   lower bound on solution of master problem
 338  lagrange(km)          lagrange functions for primal problems
 339  laerr(km)             lagrange functions for relaxed primal problems
 340  intcut(km)            integer cuts ;
 341   
 342  *==========================================================================
 343  * Define Equations
 344  *==========================================================================
 345   
 346  {{ PRIMAL PROBLEM EQUATIONS }}
 347   
 348  lpobj..
 349      c =E= sum(acol(col),(cost(col)*yp(col) + (a1(col) +
 350              sum(key(col,stm,cp),a2(col,stm)*rec(col,stm,cp)) +
 351              sum(cp,a3(col,cp)*xin(col,cp)))*fin(col))) ;
 352   
 353  spblinit..
 354        sum(acol(col),finit(col)) + sum(pr,fby(pr)) =E= totfeed ;
 355   
 356  spblcol(acol(col),stm)..
 357        sum(inter(colp,col,stm),fint(colp,col,stm)) +
 358        sum(prstream(col,stm,pr),fpr(col,stm,pr)) - f(col,stm) =E= 0 ;
 359   
 360  mixbal(acol(col),cp)..
 361      finit(col)*xinit(cp) + sum(inter(col,colp,stm),fint(col,colp,stm)*
 362      x(colp,stm,cp)) - cfin(col,cp) =E= 0 ;
 363   
 364  colbal(acol(col),cp)..
 365      cfin(col,cp) - sum(stm,f(col,stm)*x(col,stm,cp)) =E= 0 ;
 366   
 367  keybal(key(col,stm,cp))..
 368      cfin(col,cp)*rec(col,stm,cp) - f(col,stm)*x(col,stm,cp) =E= 0 ;
 369   
 370  probal(pr,cp)$(ord(pr) ne np)..
 371      sum(prstream(col,stm,pr),fpr(col,stm,pr)*x(col,stm,cp)) +
 372      fby(pr)*xinit(cp) - out(cp,pr) =E= 0 ;
 373   
 374  cfloin(acol(col),cp)..
 375      fin(col)*xin(col,cp) - cfin(col,cp) =E= 0 ;
 376   
 377  molsum(acol(col),stm)..
 378      sum(cp,x(col,stm,cp)) - 1 =E= 0 ;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:28:44 Page 9
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
C o m p i l a t i o n


 379   
 380  molsumin(acol(col))..
 381      sum(cp,xin(col,cp)) - 1 =E= 0 ;
 382   
 383  dist(link(col,stm,cp))..
 384      x(col,stm,cp) =E= 0 ;
 385   
 386  intcon(col)..
 387        fin(col) - totfeed*yp(col) =L= 0 ;
 388   
 389  {{ RELAXED PRIMAL PROBLEM EQUATIONS }}
 390   
 391  infeas.. alp =E= sum(col,saint(col)) ;
 392   
 393  lintcon(col)..
 394        fin(col) - totfeed*yp(col) =L= saint(col) ;
 395   
 396  {{ FULL NLP EQUATIONS }}
 397   
 398  {{ MASTER PROBLEM EQUATIONS }}
 399   
 400  bnd.. mu =G= zlo ;
 401   
 402  lagrange(k)$(nfeas(k) eq 1)..
 403   
 404        sum(col,(mcost(k,col)*y(col) + (ma1(k,col) +
 405            sum(savkey(col,stm,cp),ma2(k,col,stm)*reck(k,col,stm,cp)) +
 406            sum(cp,ma3(k,col,cp)*xkin(k,col,cp)))*
 407            fink(k,col))) +                                  ## objective function
 408   
 409        sum(col,mint(k,col)*(fink(k,col) - totfeed*y(col)))  ## logical const.
 410                                           =L= mu ;
 411   
 412  laerr(k)$(nfeas(k) eq 0)..
 413   
 414        sum(col,mlint(k,col)*(fink(k,col) - totfeed*y(col))) ## logical const.
 415                                           =L= 0 ;
 416   
 417  intcut(k)..
 418        sum(col,cutcol(k,col)*y(col)) =L= cut(k) ;
 419   
 420  {{ Bounds for all material balance variables }}
 421   
 422  totfeed = sum(cp,feed(cp)) ;
 423  xinit(cp) = feed(cp)/totfeed ;
 424   
 425  rec.up(col,stm,cp) = 1 ;
 426  rec.lo(col,stm,cp) = 0.85 ;
 427   
 428  finit.lo(col) = 0 ;
 429  fin.lo(col) = 0 ;
 430  f.lo(col,stm) = 0 ;
 431  fint.lo(savinter(colp,col,stm)) = 0 ;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:28:44 Page 10
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
C o m p i l a t i o n


 432  fpr.lo(savprst(col,stm,pr)) = 0 ;
 433  fby.lo(pr) = 0 ;
 434  finit.up(col) = totfeed ;
 435  fin.up(col) = totfeed ;
 436  f.up(col,stm) = totfeed ;
 437  fint.up(savinter(colp,col,stm)) = totfeed ;
 438  fpr.up(savprst(col,stm,pr)) = totfeed ;
 439  fby.up('prod-1') = 90 ;
 440  fby.up('prod-2') = 150 ;
 441  cfin.lo(col,cp) = 0 ;
 442  cfin.up(col,cp) = feed(cp) ;
 443   
 444  *==========================================================================
 445  * Declare Models
 446  *==========================================================================
 447   
 448  Model primal /lpobj,spblinit,spblcol,mixbal,colbal,keybal,probal,cfloin,
 449                molsum,molsumin,dist,intcon/ ;
 450   
 451  Model relax /infeas,spblinit,spblcol,mixbal,colbal,keybal,probal,cfloin,
 452               molsum,molsumin,dist,lintcon/ ;
 453   
 454  Model master /bnd,lagrange,laerr,intcut/ ;
 455   
 456  *==========================================================================
 457  * Begin Solving Problem
 458  *==========================================================================
 459   
 460  {{* STARTING POINT - The user has to provide a set of values of the
 461    * complicating variables for the algorithm to start. For finding a
 462    * feasible starting point, the full NLP can be solved (by fixing the
 463    * binary variables). Even though the algorithm is designed to start from
 464    * an infeasible starting point also, it helps the performance to provide
 465    * a feasible starting point }}
 466   
 467  yp('col-1') = 1 ;
 468  yp('col-2') = 1 ;
 469   
 470  finit.l('col-1') = 60 ;
 471  finit.l('col-2') = 0 ;
 472  fin.l('col-1') = 60 ;
 473  fin.l('col-2') = 40 ;
 474  f.l('col-1','top') = 20 ;
 475  f.l('col-2','top') = 20 ;
 476  f.l('col-1','bot') = 40 ;
 477  f.l('col-2','bot') = 20 ;
 478  fint.l('col-1','col-2','top') = 0 ;
 479  fint.l('col-2','col-1','bot') = 40 ;
 480  fpr.l('col-1','top','prod-1') = 0 ;
 481  fpr.l('col-1','top','prod-2') = 20 ;
 482  fpr.l('col-1','bot','prod-1') = 0 ;
 483  fpr.l('col-1','bot','prod-2') = 0 ;
 484  fpr.l('col-2','top','prod-1') = 20 ;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:28:44 Page 11
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
C o m p i l a t i o n


 485  fpr.l('col-2','top','prod-2') = 0 ;
 486  fpr.l('col-2','bot','prod-1') = 0 ;
 487  fpr.l('col-2','bot','prod-2') = 20 ;
 488  fby.l('prod-1') = 90 ;
 489  fby.l('prod-2') = 150 ;
 490   
 491  cfin.l('col-1','a') = 20 ;
 492  cfin.l('col-1','b') = 20 ;
 493  cfin.l('col-1','c') = 20 ;
 494  cfin.l('col-2','a') = 0 ;
 495  cfin.l('col-2','b') = 20 ;
 496  cfin.l('col-2','c') = 20 ;
 497   
 498  {{ The upper and lower bounds are initialized to large positive and negative
 499     numbers respectively }}
 500   
 501  zup = 1000 ;
 502  zlo = -1000000 ;
 503   
 504  *==========================================================================
 505  * Begin Iterations *
 506  *==========================================================================
 507   
 508  k(km) = NO ;
 509   
 510  Loop(kloop$kend,                     ##  START OF LOOP
 511  iter = iter + 1 ;                    ##  update iteration number
 512  count(km) = yes$(ord(km) eq iter) ;  ##  current element
 513  k(km)= k(km) + count(km) ;           ##  add current element to dynamic set
 514   
 515  {{ Modify sets to current configuration based on current values of the
 516     binary variables. If a binary variable corresponding to a particular
 517     column is not active then all streams connected to that column are
 518     dropped from the superstructure }}
 519   
 520  acol(col) = YES$yp(col) ;
 521  prstream(savprst(col,stm,pr)) = YES$yp(col) ;
 522  inter(savinter(colp,col,stm)) = YES$yp(col) ;
 523  inter(inter(col,colp,stm)) = YES$yp(col) ;
 524  key(savkey(col,stm,cp)) = YES$yp(col) ;
 525  link(savlink(col,stm,cp)) = YES$yp(col) ;
 526   
 527  {{ Store the values of the cost coefficients for the Lagrange function
 528     based on the current mapping }}
 529   
 530  mcost(count,acol(col)) = cost(col) ;
 531  ma1(count,acol(col)) = a1(col) ;
 532  ma2(count,acol(col),stm) = a2(col,stm) ;
 533  ma3(count,acol(col),cp) = a3(col,cp) ;
 534   
 535  {{ Solve the relaxed primal problem }}
 536   
 537  Solve relax using nlp minimizing alp ;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:28:44 Page 12
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
C o m p i l a t i o n


 538   
 539  {{ The next statement checks for the feasiblity of the relaxed primal
 540     problem and sets the stopping criteria flag "kend" to 0 if the relaxed
 541     primal problem dees not have a feasible solution }}
 542   
 543  if(((relax.modelstat ne 1) and
 544      (relax.modelstat ne 2) and
 545      (relax.modelstat ne 7)),
 546               kend = 0 ) ;
 547   
 548  {{ Store the lagrange multipliers as parameters }}
 549   
 550  mlint(count,acol(col)) = -lintcon.m(col) ;
 551   
 552  {{ Store the values of noncomplicating variables as parameters }}
 553   
 554  finitk(count,acol(col)) = finit.l(col) ;
 555  fink(count,acol(col)) = fin.l(col) ;
 556  fk(count,acol(col),stm) = f.l(col,stm) ;
 557  fintk(count,inter(colp,col,stm)) = fint.l(colp,col,stm) ;
 558  fprk(count,prstream(col,stm,pr)) = fpr.l(col,stm,pr) ;
 559  fbyk(count,pr) = fby.l(pr) ;
 560  cfink(count,acol(col),cp) = cfin.l(col,cp) ;
 561  xkin(count,acol(col),cp) = xin.l(col,cp) ;
 562  xk(count,acol(col),stm,cp) = x.l(col,stm,cp) ;
 563  reck(count,key(col,stm,cp)) = rec.l(col,stm,cp) ;
 564   
 565  nfeas(count) = 0 ;
 566  flag = 0 ;
 567   
 568  {{ The value of sum of infeasibilities is checked at this stage }}
 569   
 570  If((alp.l le .00001),
 571   
 572      Solve primal using nlp minimizing c ;
 573   
 574  {{ If primal is feasible store the lagrange multipliers as parameters,
 575     objective function and update upper bound }}
 576   
 577      If(((primal.modelstat eq 1) or
 578          (primal.modelstat eq 2)),
 579         mint(count,acol(col)) = -intcon.m(col) ;
 580         zk(count) = c.l ;
 581         nfeas(count) = 1 ;
 582         If((c.l le zup),
 583            zup = c.l ) ;
 584   
 585  {{ Store the values of noncomplicating variables as parameters and
 586     display them }}
 587   
 588         finitk(count,acol(col)) = finit.l(col) ;
 589         fink(count,acol(col)) = fin.l(col) ;
 590         fk(count,acol(col),stm) = f.l(col,stm) ;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:28:44 Page 13
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
C o m p i l a t i o n


 591         fintk(count,inter(colp,col,stm)) = fint.l(colp,col,stm) ;
 592         fprk(count,prstream(col,stm,pr)) = fpr.l(col,stm,pr) ;
 593         fbyk(count,pr) = fby.l(pr) ;
 594         cfink(count,acol(col),cp) = cfin.l(col,cp) ;
 595         xkin(count,acol(col),cp) = xin.l(col,cp) ;
 596         xk(count,acol(col),stm,cp) = x.l(col,stm,cp) ;
 597         reck(count,key(col,stm,cp)) = rec.l(col,stm,cp) ;
 598   
 599         Display finit.l,fin.l,f.l,fint.l,fpr.l,fby.l,cfin.l,xin.l,x.l,rec.l ) ) ;
 600   
 601  {{ Store the values of the complicating variables as parameters to formulate
 602     the integer cuts }}
 603   
 604     cut(count) = sum(col,yp(col)) - 1 ;
 605     cutcol(count,col) = 2*yp(col) - 1 ;
 606   
 607  {{ Solve the master problem }}
 608   
 609  Solve master using mip minimizing mu ;
 610   
 611  {{ The next six statements check for the feasiblity of the master problem
 612     and set the stopping criteria flag "kend" to 0 if the master problem has
 613     become infeasible }}
 614   
 615  kend$(master.modelstat eq 4)              = 0 ;
 616  kend$(master.modelstat eq 5)       = 0 ;
 617  kend$(master.modelstat eq 6)  = 0 ;
 618  kend$(master.modelstat eq 7)  = 0 ;
 619  kend$(master.modelstat eq 9) = 0 ;
 620  kend$(master.modelstat eq 10)       = 0 ;
 621   
 622  {{ If the master problem has a feasible solution, the lower bound is
 623     updated }}
 624   
 625  zlo$kend = mu.l ;
 626   
 627  {{ The stopping criteria is checked next. If the upper and lower bounds have
 628     crossed or are almost equal, "kend" is set to 0 }}
 629   
 630  kend$((zup le zlo) or ((zup-zlo) le .001)) = 0 ;
 631   
 632  {{ The values of the complicating variables produced by the master problem
 633     are stored as parameters (to be used in the next iteration) and
 634     displayed }}
 635   
 636  yp(col) = y.l(col) ;
 637  Display yp ;
 638   
 639  {{ Display iteration number, sum of infeasibilites for this iteration, and
 640     the lower and upper bounds at the end of this iteration }}
 641   
 642  Display iter,alp.l,zlo,zup ) ;       ##  END OF LOOP
 643  *==========================================================================
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:28:44 Page 14
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
C o m p i l a t i o n




COMPILATION TIME     =        0.004 SECONDS      3 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:28:44 Page 15
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
E x e c u t i o n


----    147 SET bypass  overall pass to product pr from initial feed

prod-1,    prod-2


----    147 SET inter  column i fed by column j top or bottom

                    top         bot

col-1.col-2         YES
col-2.col-1                     YES


----    147 SET key  key components for column col

                    a           b           c

col-1.top         YES
col-1.bot                     YES
col-2.top                     YES
col-2.bot                                 YES


----    147 SET link  nondistribution of nonkeys

                    a           c

col-1.top                     YES
col-2.bot         YES


----    147 SET prstream  stream to product pr from column col

               prod-1      prod-2

col-1.top         YES         YES
col-1.bot         YES         YES
col-2.top         YES         YES
col-2.bot         YES         YES

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:28:44 Page 16
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
Model Statistics    SOLVE relax Using NLP From line 537


LOOPS                                kloop   1


MODEL STATISTICS

BLOCKS OF EQUATIONS          12     SINGLE EQUATIONS           41
BLOCKS OF VARIABLES          12     SINGLE VARIABLES           51  4 projected
NON ZERO ELEMENTS           160     NON LINEAR N-Z             88
DERIVATIVE POOL              20     CONSTANT POOL              16
CODE LENGTH                 163


GENERATION TIME      =        0.003 SECONDS      4 MB  24.7.4 r58773 LEX-LEG


EXECUTION TIME       =        0.004 SECONDS      4 MB  24.7.4 r58773 LEX-LEG
               L O O P S              kloop 1

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:28:44 Page 17
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
Solution Report     SOLVE relax Using NLP From line 537


               S O L V E      S U M M A R Y

     MODEL   relax               OBJECTIVE  alp
     TYPE    NLP                 DIRECTION  MINIMIZE
     SOLVER  BARON               FROM LINE  537

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.010      1000.000
 ITERATION COUNT, LIMIT         0    2000000000
 EVALUATION ERRORS              0             0

GAMS/BARON       24.7.4 r58773 Released Sep 19, 2016 LEG x86 64bit/Linux      

BARON is a product of The Optimization Firm, LLC. http://www.minlp.com/
Parts of the BARON software were created at the
University of Illinois at Urbana-Champaign.

--- Using Option File
*** Error Cannot open parameter file "/home/renigijus/gams/opt-mod-lib/gamslib/nonsharp/baron.opt"
*** Error Error code = 2; No such file or directory

===========================================================================
 BARON version 16.8.24. Built: LNX-64 Wed Aug 24 08:52:24 EDT 2016

 If you use this software, please cite:
 Tawarmalani, M. and N. V. Sahinidis, A polyhedral
 branch-and-cut approach to global optimization,
 Mathematical Programming, 103(2), 225-249, 2005.

 BARON is a product of The Optimization Firm, LLC. http://www.minlp.com/
 Parts of the BARON software were created at the
 University of Illinois at Urbana-Champaign.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP: ILOG CPLEX                                      
 For NLP: MINOS, SNOPT, GAMS external NLP, IPOPT, FILTERSD
===========================================================================

Solution      = 0  best solution found during preprocessing
Best possible = -1E-9
Absolute gap  = 1E-9  optca = 1E-9
Relative gap  = 1.00000  optcr = 0.1
  (Note that BARON uses a different formula to compute the relative gap as
   was used for the above reported value.)

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:28:44 Page 18
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
Solution Report     SOLVE relax Using NLP From line 537


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:28:44 Page 19
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
Model Statistics    SOLVE primal Using NLP From line 572


LOOPS                                kloop   1


MODEL STATISTICS

BLOCKS OF EQUATIONS          12     SINGLE EQUATIONS           41
BLOCKS OF VARIABLES          11     SINGLE VARIABLES           49
NON ZERO ELEMENTS           166     NON LINEAR N-Z             98
DERIVATIVE POOL              20     CONSTANT POOL              26
CODE LENGTH                 187


GENERATION TIME      =        0.002 SECONDS      3 MB  24.7.4 r58773 LEX-LEG


EXECUTION TIME       =        0.002 SECONDS      3 MB  24.7.4 r58773 LEX-LEG
               L O O P S              kloop 1

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:28:44 Page 20
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
Solution Report     SOLVE primal Using NLP From line 572


               S O L V E      S U M M A R Y

     MODEL   primal              OBJECTIVE  c
     TYPE    NLP                 DIRECTION  MINIMIZE
     SOLVER  BARON               FROM LINE  572

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      2 Locally Optimal           
**** OBJECTIVE VALUE                1.5671

 RESOURCE USAGE, LIMIT        123.030      1000.000
 ITERATION COUNT, LIMIT         0    2000000000
 EVALUATION ERRORS              0             0

GAMS/BARON       24.7.4 r58773 Released Sep 19, 2016 LEG x86 64bit/Linux      

BARON is a product of The Optimization Firm, LLC. http://www.minlp.com/
Parts of the BARON software were created at the
University of Illinois at Urbana-Champaign.

--- Using Option File
*** Error Cannot open parameter file "/home/renigijus/gams/opt-mod-lib/gamslib/nonsharp/baron.opt"
*** Error Error code = 2; No such file or directory

===========================================================================
 BARON version 16.8.24. Built: LNX-64 Wed Aug 24 08:52:24 EDT 2016

 If you use this software, please cite:
 Tawarmalani, M. and N. V. Sahinidis, A polyhedral
 branch-and-cut approach to global optimization,
 Mathematical Programming, 103(2), 225-249, 2005.

 BARON is a product of The Optimization Firm, LLC. http://www.minlp.com/
 Parts of the BARON software were created at the
 University of Illinois at Urbana-Champaign.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP: ILOG CPLEX                                      
 For NLP: MINOS, SNOPT, GAMS external NLP, IPOPT, FILTERSD
===========================================================================

Solution      = 1.56707199988892  found at node 36061
Best possible = 1.4104030785
Absolute gap  = 0.156668921388921  optca = 1E-9
Relative gap  = 0.09998  optcr = 0.1
  (Note that BARON uses a different formula to compute the relative gap as
   was used for the above reported value.)

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:28:44 Page 21
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
Solution Report     SOLVE primal Using NLP From line 572


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:28:44 Page 22
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
E x e c u t i o n


----    599 VARIABLE finit.L  flow from initial splitter to column col

col-2 85.7143


----    599 VARIABLE fin.L  total flow to column col

col-1 57.1429,    col-2 85.7143


----    599 VARIABLE f.L  flow rate of column top & bottom product streams

              top         bot

col-1     24.2857     32.8571
col-2     57.1429     28.5714


----    599 VARIABLE fint.L  flow rate of interconnecting streams

                    top

col-1.col-2     57.1429


----    599 VARIABLE fpr.L  flow rate of streams to products

               prod-1      prod-2

col-1.top                 24.2857
col-1.bot     32.8571
col-2.bot                 28.5714


----    599 VARIABLE fby.L  flow rate of bypass streams

prod-1  77.1429,    prod-2 137.1429


----    599 VARIABLE cfin.L  component flow to column col

                a           b           c

col-1     28.5714     24.2857      4.2857
col-2     28.5714     28.5714     28.5714

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:28:44 Page 23
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
E x e c u t i o n


----    599 VARIABLE xin.L  composition of stream to column col

                a           b           c

col-1      0.5000      0.4250      0.0750
col-2      0.3333      0.3333      0.3333


----    599 VARIABLE x.L  composition of column product streams

                    a           b           c

col-1.top      1.0000
col-1.bot      0.1304      0.7391      0.1304
col-2.top      0.5000      0.4250      0.0750
col-2.bot                  0.1500      0.8500


----    599 VARIABLE rec.L  recovery of key components

                    a           b           c

col-1.top      0.8500
col-1.bot                  1.0000
col-2.top                  0.8500
col-2.bot                              0.8500

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:28:44 Page 24
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
Model Statistics    SOLVE master Using MIP From line 609


LOOPS                                kloop   1


MODEL STATISTICS

BLOCKS OF EQUATIONS           4     SINGLE EQUATIONS            3
BLOCKS OF VARIABLES           2     SINGLE VARIABLES            3
NON ZERO ELEMENTS             6     DISCRETE VARIABLES          2


GENERATION TIME      =        0.002 SECONDS      3 MB  24.7.4 r58773 LEX-LEG


EXECUTION TIME       =        0.003 SECONDS      3 MB  24.7.4 r58773 LEX-LEG
               L O O P S              kloop 1

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:28:44 Page 25
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
Solution Report     SOLVE master Using MIP From line 609


               S O L V E      S U M M A R Y

     MODEL   master              OBJECTIVE  mu
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CONVERT             FROM LINE  609

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      14 No Solution Returned     
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.000      1000.000
 ITERATION COUNT, LIMIT         0    2000000000

Convert 2.0      24.7.4 r58773 Released Sep 19, 2016 LEG x86 64bit/Linux      

--- Using Option File
Reading parameter(s) from "/home/renigijus/gams/opt-mod-lib/gamslib/nonsharp/convert.opt"
>>  pyomo nonsharp-scalar.py
Finished reading from "/home/renigijus/gams/opt-mod-lib/gamslib/nonsharp/convert.opt"
Pyomo     : nonsharp-scalar.py


No solution returned
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:28:44 Page 26
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
E x e c u t i o n


----    637 PARAMETER yp  

                      ( ALL      0.0000 )


----    642 PARAMETER iter                 =       1.0000  iteration number
            VARIABLE alp.L                 =       0.0000  sum of infeasibilities
            PARAMETER zlo                  =       0.0000  lower bound
            PARAMETER zup                  =       1.5671  upper bound
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:28:44 Page 27
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
Model Statistics    SOLVE relax Using NLP From line 537


LOOPS                                kloop   2


MODEL STATISTICS

BLOCKS OF EQUATIONS          12     SINGLE EQUATIONS            7
BLOCKS OF VARIABLES           4     SINGLE VARIABLES            7
NON ZERO ELEMENTS            12     NON LINEAR N-Z              0
DERIVATIVE POOL              20     CONSTANT POOL              16
CODE LENGTH                   0


GENERATION TIME      =        0.001 SECONDS      3 MB  24.7.4 r58773 LEX-LEG


EXECUTION TIME       =        0.002 SECONDS      3 MB  24.7.4 r58773 LEX-LEG
               L O O P S              kloop 2

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:28:44 Page 28
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
Solution Report     SOLVE relax Using NLP From line 537


               S O L V E      S U M M A R Y

     MODEL   relax               OBJECTIVE  alp
     TYPE    NLP                 DIRECTION  MINIMIZE
     SOLVER  BARON               FROM LINE  537

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      19 Infeasible - No Solution 
**** OBJECTIVE VALUE               NA

 RESOURCE USAGE, LIMIT          0.000      1000.000
 ITERATION COUNT, LIMIT        NA    2000000000
 EVALUATION ERRORS              0             0

GAMS/BARON       24.7.4 r58773 Released Sep 19, 2016 LEG x86 64bit/Linux      

BARON is a product of The Optimization Firm, LLC. http://www.minlp.com/
Parts of the BARON software were created at the
University of Illinois at Urbana-Champaign.

--- Using Option File
*** Error Cannot open parameter file "/home/renigijus/gams/opt-mod-lib/gamslib/nonsharp/baron.opt"
*** Error Error code = 2; No such file or directory

===========================================================================
 BARON version 16.8.24. Built: LNX-64 Wed Aug 24 08:52:24 EDT 2016

 If you use this software, please cite:
 Tawarmalani, M. and N. V. Sahinidis, A polyhedral
 branch-and-cut approach to global optimization,
 Mathematical Programming, 103(2), 225-249, 2005.

 BARON is a product of The Optimization Firm, LLC. http://www.minlp.com/
 Parts of the BARON software were created at the
 University of Illinois at Urbana-Champaign.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP: ILOG CPLEX                                      
 For NLP: MINOS, SNOPT, GAMS external NLP, IPOPT, FILTERSD
===========================================================================
*** Could not extract solution on /home/renigijus/gams/opt-mod-lib/gamslib/nonsharp/225a/res.dat file

No solution returned
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:28:44 Page 29
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
Model Statistics    SOLVE primal Using NLP From line 572


LOOPS                                kloop   2


MODEL STATISTICS

BLOCKS OF EQUATIONS          12     SINGLE EQUATIONS            7
BLOCKS OF VARIABLES           3     SINGLE VARIABLES            5
NON ZERO ELEMENTS             8     NON LINEAR N-Z              0
DERIVATIVE POOL              20     CONSTANT POOL              16
CODE LENGTH                   0


GENERATION TIME      =        0.002 SECONDS      3 MB  24.7.4 r58773 LEX-LEG


EXECUTION TIME       =        0.003 SECONDS      3 MB  24.7.4 r58773 LEX-LEG
               L O O P S              kloop 2

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:28:44 Page 30
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
Solution Report     SOLVE primal Using NLP From line 572


               S O L V E      S U M M A R Y

     MODEL   primal              OBJECTIVE  c
     TYPE    NLP                 DIRECTION  MINIMIZE
     SOLVER  BARON               FROM LINE  572

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      19 Infeasible - No Solution 
**** OBJECTIVE VALUE               NA

 RESOURCE USAGE, LIMIT          0.000      1000.000
 ITERATION COUNT, LIMIT        NA    2000000000
 EVALUATION ERRORS              0             0

GAMS/BARON       24.7.4 r58773 Released Sep 19, 2016 LEG x86 64bit/Linux      

BARON is a product of The Optimization Firm, LLC. http://www.minlp.com/
Parts of the BARON software were created at the
University of Illinois at Urbana-Champaign.

--- Using Option File
*** Error Cannot open parameter file "/home/renigijus/gams/opt-mod-lib/gamslib/nonsharp/baron.opt"
*** Error Error code = 2; No such file or directory

===========================================================================
 BARON version 16.8.24. Built: LNX-64 Wed Aug 24 08:52:24 EDT 2016

 If you use this software, please cite:
 Tawarmalani, M. and N. V. Sahinidis, A polyhedral
 branch-and-cut approach to global optimization,
 Mathematical Programming, 103(2), 225-249, 2005.

 BARON is a product of The Optimization Firm, LLC. http://www.minlp.com/
 Parts of the BARON software were created at the
 University of Illinois at Urbana-Champaign.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP: ILOG CPLEX                                      
 For NLP: MINOS, SNOPT, GAMS external NLP, IPOPT, FILTERSD
===========================================================================
*** Could not extract solution on /home/renigijus/gams/opt-mod-lib/gamslib/nonsharp/225a/res.dat file

No solution returned
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:28:44 Page 31
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
Model Statistics    SOLVE master Using MIP From line 609


LOOPS                                kloop   2


MODEL STATISTICS

BLOCKS OF EQUATIONS           4     SINGLE EQUATIONS            4
BLOCKS OF VARIABLES           2     SINGLE VARIABLES            3
NON ZERO ELEMENTS             8     DISCRETE VARIABLES          2


GENERATION TIME      =        0.002 SECONDS      3 MB  24.7.4 r58773 LEX-LEG


EXECUTION TIME       =        0.002 SECONDS      3 MB  24.7.4 r58773 LEX-LEG
               L O O P S              kloop 2

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:28:44 Page 32
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
Solution Report     SOLVE master Using MIP From line 609


               S O L V E      S U M M A R Y

     MODEL   master              OBJECTIVE  mu
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CONVERT             FROM LINE  609

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      14 No Solution Returned     
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.000      1000.000
 ITERATION COUNT, LIMIT         0    2000000000

Convert 2.0      24.7.4 r58773 Released Sep 19, 2016 LEG x86 64bit/Linux      

--- Using Option File
Reading parameter(s) from "/home/renigijus/gams/opt-mod-lib/gamslib/nonsharp/convert.opt"
>>  pyomo nonsharp-scalar.py
Finished reading from "/home/renigijus/gams/opt-mod-lib/gamslib/nonsharp/convert.opt"
Pyomo     : nonsharp-scalar.py


No solution returned
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:28:44 Page 33
Synthesis of General Distillation Sequences (NONSHARP,SEQ=120)
E x e c u t i o n


----    637 PARAMETER yp  

                      ( ALL      0.0000 )


----    642 PARAMETER iter                 =       2.0000  iteration number
            VARIABLE alp.L                 =       0.0000  sum of infeasibilities
            PARAMETER zlo                  =       0.0000  lower bound
            PARAMETER zup                  =       1.5671  upper bound


EXECUTION TIME       =        0.000 SECONDS      3 MB  24.7.4 r58773 LEX-LEG


USER: Remigijus Paulavicius, Single User License     S170731:0859AO-LNX
      Imperial College London, Dept. of Chemical Engineering    DC13449
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      /home/renigijus/gams/opt-mod-lib/gamslib/nonsharp/nonsharp.gms
Output     /home/renigijus/gams/opt-mod-lib/gamslib/nonsharp/nonsharp-scalar.py.lst
