GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:31:11 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  option MIP=convert;
   2  option MIP=convert;
   3  option MIP=convert;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:31:11 Page 2
Traveling Salesman Problem - Two (TSP2,SEQ=178)
C o m p i l a t i o n


       This is the second problem in a series of traveling salesman
       problems. The formulation in this model uses subtour elimination
       constraints of the form
       
              u(i)-u(j)+n*x(i,j) <= n-1
       
       Additional information can be found at:
       
       http://www.gams.com/modlib/adddocs/tsp2doc.htm
       
       
      Kalvelagen, E, Model Building with GAMS. forthcoming
       
      de Wetering, A V, private communication.
       
  23   
INCLUDE    /home/renigijus/gams/opt-mod-lib/gamslib/tsp2/br17.inc
  25   
  26  * TSP data and incomplete TSP model. The data is problem br17 from TSPLIB.
  27  * (http://www.iwr.uni-heidelberg.de/iwr/comopt/soft/TSPLIB95/TSPLIB.html)
  28   
  29  set ii    cities / i1*i17 /
  30      i(ii) subset of cities
  31  alias (ii,jj),(i,j,k);
  32   
  33  table c(ii,jj) cost coefficients (br17 from TSPLIB)
  34       i1  i2  i3  i4  i5  i6  i7  i8  i9  i10 i11 i12 i13 i14 i15 i16 i17
  35  i1        3   5  48  48   8   8   5   5   3   3   0   3   5   8   8   5
  36  i2    3       3  48  48   8   8   5   5   0   0   3   0   3   8   8   5
  37  i3    5   3      72  72  48  48  24  24   3   3   5   3   0  48  48  24
  38  i4   48  48  74       0   6   6  12  12  48  48  48  48  74   6   6  12
  39  i5   48  48  74   0       6   6  12  12  48  48  48  48  74   6   6  12
  40  i6    8   8  50   6   6       0   8   8   8   8   8   8  50   0   0   8
  41  i7    8   8  50   6   6   0       8   8   8   8   8   8  50   0   0   8
  42  i8    5   5  26  12  12   8   8       0   5   5   5   5  26   8   8   0
  43  i9    5   5  26  12  12   8   8   0       5   5   5   5  26   8   8   0
  44  i10   3   0   3  48  48   8   8   5   5       0   3   0   3   8   8   5
  45  i11   3   0   3  48  48   8   8   5   5   0       3   0   3   8   8   5
  46  i12   0   3   5  48  48   8   8   5   5   3   3       3   5   8   8   5
  47  i13   3   0   3  48  48   8   8   5   5   0   0   3       3   8   8   5
  48  i14   5   3   0  72  72  48  48  24  24   3   3   5   3      48  48  24
  49  i15   8   8  50   6   6   0   0   8   8   8   8   8   8  50       0   8
  50  i16   8   8  50   6   6   0   0   8   8   8   8   8   8  50   0       8
  51  i17   5   5  26  12  12   8   8   0   0   5   5   5   5  26   8   8
  52  *
  53  * for computational work with simple minded
  54  * algorithm we can restrict size of problem
  55  * and define the model over a subset of all cities.
  56  *
  57  *
  58  variables x(ii,jj)  decision variables - leg of trip
  59            z         objective variable;
  60  binary variable x;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:31:11 Page 3
Traveling Salesman Problem - Two (TSP2,SEQ=178)
C o m p i l a t i o n


  61   
  62  equations objective   total cost
  63            rowsum(ii)  leave each city only once
  64            colsum(jj)  arrive at each city only once;
  65  *
  66  *
  67  * the assignment problem is a relaxation of the TSP
  68  *
  69  objective.. z =e= sum((i,j), c(i,j)*x(i,j));
  70   
  71  rowsum(i).. sum(j, x(i,j)) =e= 1;
  72  colsum(j).. sum(i, x(i,j)) =e= 1;
  73   
  74  * exclude diagonal
  75  *
  76  x.fx(ii,ii) = 0;
  77   
  78   
  79   
  80  set ij(ii,jj) exclude first row and column; ij(ii,jj) = ord(ii)>1 and ord(jj)>1;
  81   
  82  variable u(ii) subtour elimination strategy 3
  83   
  84  equation se(ii,jj) subtour elimination constraints;
  85   
  86  se(ij(i,j)).. u(i) - u(j) + card(i)*x(i,j) =l= card(i) - 1;
  87   
  88  model tsp / objective, rowsum, colsum, se /;
  89   
  90  * Try a small problem first - first six cities
  91  i(ii) = ord(ii) <= 6;
  92   
  93  option optcr=0.05;
  94  solve tsp min z using mip; display x.l;
  95   
  96  * Try a bit larger problem - 10 cities
  97  i(ii) = ord(ii) <= 10;
  98   
  99  option limcol=0,limrow=0;
 100  solve tsp min z using mip;
 101   
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:31:11 Page 4
Traveling Salesman Problem - Two (TSP2,SEQ=178)
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  /home/renigijus/gams/opt-mod-lib/gamslib/tsp2/tsp2.gms
     2       24 INCLUDE        1      24  ./home/renigijus/gams/opt-mod-lib/gamslib/tsp2/br17.inc


COMPILATION TIME     =        0.001 SECONDS      3 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:31:11 Page 5
Traveling Salesman Problem - Two (TSP2,SEQ=178)
Equation Listing    SOLVE tsp Using MIP From line 94


---- objective  =E=  total cost

objective..  - 3*x(i1,i2) - 5*x(i1,i3) - 48*x(i1,i4) - 48*x(i1,i5) - 8*x(i1,i6) - 3*x(i2,i1) - 3*x(i2,i3) - 48*x(i2,i4) - 48*x(i2,i5) - 8*x(i2,i6) - 5*x(i3,i1) - 3*x(i3,i2) - 72*x(i3,i4) - 72*x(i3,i5) - 48*x(i3,i6) - 48*x(i4,i1) - 48*x(i4,i2)
     
      - 74*x(i4,i3) - 6*x(i4,i6) - 48*x(i5,i1) - 48*x(i5,i2) - 74*x(i5,i3) - 6*x(i5,i6) - 8*x(i6,i1) - 8*x(i6,i2) - 50*x(i6,i3) - 6*x(i6,i4) - 6*x(i6,i5) + z =E= 0 ; (LHS = 0)
     

---- rowsum  =E=  leave each city only once

rowsum(i1)..  x(i1,i1) + x(i1,i2) + x(i1,i3) + x(i1,i4) + x(i1,i5) + x(i1,i6) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
rowsum(i2)..  x(i2,i1) + x(i2,i2) + x(i2,i3) + x(i2,i4) + x(i2,i5) + x(i2,i6) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
rowsum(i3)..  x(i3,i1) + x(i3,i2) + x(i3,i3) + x(i3,i4) + x(i3,i5) + x(i3,i6) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
REMAINING 3 ENTRIES SKIPPED


---- colsum  =E=  arrive at each city only once

colsum(i1)..  x(i1,i1) + x(i2,i1) + x(i3,i1) + x(i4,i1) + x(i5,i1) + x(i6,i1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
colsum(i2)..  x(i1,i2) + x(i2,i2) + x(i3,i2) + x(i4,i2) + x(i5,i2) + x(i6,i2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
colsum(i3)..  x(i1,i3) + x(i2,i3) + x(i3,i3) + x(i4,i3) + x(i5,i3) + x(i6,i3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
REMAINING 3 ENTRIES SKIPPED


---- se  =L=  subtour elimination constraints

se(i2,i2)..  6*x(i2,i2) =L= 5 ; (LHS = 0)
     
se(i2,i3)..  6*x(i2,i3) + u(i2) - u(i3) =L= 5 ; (LHS = 0)
     
se(i2,i4)..  6*x(i2,i4) + u(i2) - u(i4) =L= 5 ; (LHS = 0)
     
REMAINING 22 ENTRIES SKIPPED

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:31:11 Page 6
Traveling Salesman Problem - Two (TSP2,SEQ=178)
Column Listing      SOLVE tsp Using MIP From line 94


---- x  decision variables - leg of trip

x(i1,i1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       rowsum(i1)
        1       colsum(i1)

x(i1,i2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
       -3       objective
        1       rowsum(i1)
        1       colsum(i2)

x(i1,i3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
       -5       objective
        1       rowsum(i1)
        1       colsum(i3)

REMAINING 33 ENTRIES SKIPPED

---- z  objective variable

z
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       objective


---- u  subtour elimination strategy 3

u(i2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       se(i2,i3)
        1       se(i2,i4)
        1       se(i2,i5)
        1       se(i2,i6)
       -1       se(i3,i2)
       -1       se(i4,i2)
       -1       se(i5,i2)
       -1       se(i6,i2)

u(i3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       se(i2,i3)
        1       se(i3,i2)
        1       se(i3,i4)
        1       se(i3,i5)
        1       se(i3,i6)
       -1       se(i4,i3)
       -1       se(i5,i3)
       -1       se(i6,i3)

u(i4)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:31:11 Page 7
Traveling Salesman Problem - Two (TSP2,SEQ=178)
Column Listing      SOLVE tsp Using MIP From line 94


     u  subtour elimination strategy 3

                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       se(i2,i4)
       -1       se(i3,i4)
        1       se(i4,i2)
        1       se(i4,i3)
        1       se(i4,i5)
        1       se(i4,i6)
       -1       se(i5,i4)
       -1       se(i6,i4)

REMAINING 2 ENTRIES SKIPPED
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:31:11 Page 8
Traveling Salesman Problem - Two (TSP2,SEQ=178)
Model Statistics    SOLVE tsp Using MIP From line 94


MODEL STATISTICS

BLOCKS OF EQUATIONS           4     SINGLE EQUATIONS           38
BLOCKS OF VARIABLES           3     SINGLE VARIABLES           42
NON ZERO ELEMENTS           166     DISCRETE VARIABLES         30


GENERATION TIME      =        0.002 SECONDS      4 MB  24.7.4 r58773 LEX-LEG


EXECUTION TIME       =        0.002 SECONDS      4 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:31:11 Page 9
Traveling Salesman Problem - Two (TSP2,SEQ=178)
Solution Report     SOLVE tsp Using MIP From line 94


               S O L V E      S U M M A R Y

     MODEL   tsp                 OBJECTIVE  z
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CONVERT             FROM LINE  94

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      14 No Solution Returned     
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.000      1000.000
 ITERATION COUNT, LIMIT         0    2000000000

Convert 2.0      24.7.4 r58773 Released Sep 19, 2016 LEG x86 64bit/Linux      

--- Using Option File
Reading parameter(s) from "/home/renigijus/gams/opt-mod-lib/gamslib/tsp2/convert.opt"
>>  pyomo tsp2-scalar.py
Finished reading from "/home/renigijus/gams/opt-mod-lib/gamslib/tsp2/convert.opt"
Pyomo     : tsp2-scalar.py


No solution returned
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:31:11 Page 10
Traveling Salesman Problem - Two (TSP2,SEQ=178)
E x e c u t i o n


----     94 VARIABLE x.L  decision variables - leg of trip

                      ( ALL       0.000 )

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:31:11 Page 11
Traveling Salesman Problem - Two (TSP2,SEQ=178)
Model Statistics    SOLVE tsp Using MIP From line 100


MODEL STATISTICS

BLOCKS OF EQUATIONS           4     SINGLE EQUATIONS          102
BLOCKS OF VARIABLES           3     SINGLE VARIABLES          110
NON ZERO ELEMENTS           508     DISCRETE VARIABLES         90


GENERATION TIME      =        0.002 SECONDS      3 MB  24.7.4 r58773 LEX-LEG


EXECUTION TIME       =        0.003 SECONDS      3 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:31:11 Page 12
Traveling Salesman Problem - Two (TSP2,SEQ=178)
Solution Report     SOLVE tsp Using MIP From line 100


               S O L V E      S U M M A R Y

     MODEL   tsp                 OBJECTIVE  z
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CONVERT             FROM LINE  100

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      14 No Solution Returned     
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.000      1000.000
 ITERATION COUNT, LIMIT         0    2000000000

Convert 2.0      24.7.4 r58773 Released Sep 19, 2016 LEG x86 64bit/Linux      

--- Using Option File
Reading parameter(s) from "/home/renigijus/gams/opt-mod-lib/gamslib/tsp2/convert.opt"
>>  pyomo tsp2-scalar.py
Finished reading from "/home/renigijus/gams/opt-mod-lib/gamslib/tsp2/convert.opt"
Pyomo     : tsp2-scalar.py


No solution returned


EXECUTION TIME       =        0.000 SECONDS      2 MB  24.7.4 r58773 LEX-LEG


USER: Remigijus Paulavicius, Single User License     S170731:0859AO-LNX
      Imperial College London, Dept. of Chemical Engineering    DC13449
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      /home/renigijus/gams/opt-mod-lib/gamslib/tsp2/tsp2.gms
Output     /home/renigijus/gams/opt-mod-lib/gamslib/tsp2/tsp2-scalar.py.lst
