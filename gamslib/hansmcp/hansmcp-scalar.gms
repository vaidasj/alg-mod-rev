*  MCP written by GAMS Convert at 12/13/18 10:30:50
*  
*  Equation counts
*      Total        E        G        L        N        X        C        B
*         44        0       44        0        0        0        0        0
*  
*  Variable counts
*                   x        b        i      s1s      s2s       sc       si
*      Total     cont   binary  integer     sos1     sos2    scont     sint
*         44       44        0        0        0        0        0        0
*  FX      1        1        0        0        0        0        0        0
*  
*  Nonzero counts
*      Total    const       NL      DLL
*        367      334       33        0
*
*  Solve m using MCP;


Variables  x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19
          ,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36
          ,x37,x38,x39,x40,x41,x42,x43,x44;

Positive Variables  x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22
          ,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39
          ,x40,x41,x42,x43,x44;

Equations  e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19
          ,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36
          ,e37,e38,e39,e40,e41,e42,e43,e44;


e1.. -(0.1*x41/x1 + 0.2*x42/x1 + 0.3*x43/x1 + 0.1*x44/x1) + 5*x15 - 3.5*x16
      - 0.1*x17 - 0.7*x19 + x27 - x34 =G= 0;

e2.. -(0.2*x41/x2 + 0.2*x42/x2 + 0.2*x43/x2 + 0.2*x44/x2) - 0.9*x15 + 5*x16
      - 0.1*x17 - 0.8*x19 + x28 - x35 =G= 0;

e3.. -(0.1*x41/x3 + 0.1*x42/x3 + 0.3*x43/x3 + 0.1*x44/x3) - 0.2*x15 - 0.5*x16
      + 2*x17 - 0.1*x18 - 0.1*x19 - 0.8*x20 - 0.4*x21 - 0.1*x22 - 0.1*x23
      - 0.1*x24 + x29 - x36 =G= 0;

e4.. -(0.1*x41/x4 + 0.1*x42/x4 + 0.1*x43/x4 + 0.1*x44/x4) - x15 - 2*x16 - 2*x17
      + 2*x18 - 2*x19 - 0.4*x20 - 1.8*x21 - 1.6*x22 - 0.8*x23 - 0.2*x24
      - 0.4*x27 - 0.2*x28 - 0.2*x29 - 0.4*x30 - 0.4*x31 - 0.4*x32 - 0.4*x33
      - 0.2*x34 - 0.2*x35 - 0.2*x36 - 0.4*x37 - 0.4*x38 - 0.4*x39 - 0.4*x40
      =G= 0;

e5.. -(0.1*x41/x5 + 0.1*x42/x5 + 0.1*x43/x5 + 0.1*x44/x5) + 4*x19 =G= 0;

e6.. -(0.3*x41/x6 + 0.1*x42/x6 + 0.1*x44/x6) + 0.32*x18 + 0.8*x20 + 0.36*x26
      =G= 0;

e7.. -(0.1*x41/x7 + 0.2*x42/x7 + 0.3*x44/x7) + 0.4*x15 + 1.3*x16 + 1.2*x17
      + 1.1*x20 + 6*x21 + 1.8*x22 + 1.2*x23 + 0.4*x24 + 0.9*x25 + x30 - x37
      =G= 0;

e8..  - 0.2*x15 - 0.4*x16 - 0.2*x17 - 0.1*x18 - x20 - 2*x21 + 2*x22 - 0.5*x23
      - 0.2*x24 + x31 - x38 =G= 0;

e9..  - x15 - 0.1*x16 - 0.1*x17 - x18 - 0.2*x21 - x22 + 2*x23 - 0.2*x24 + x32
      - x39 =G= 0;

e10..  - 0.5*x15 - 0.4*x16 - 0.3*x17 - 0.3*x18 - 3*x20 - 0.2*x21 - 0.2*x22
       - 0.5*x23 + x24 + x33 - x40 =G= 0;

e11..  - 0.4*x18 - 0.4*x26 =G= -3.2;

e12..  - 0.5*x15 - 1.5*x16 - 1.5*x17 - 0.1*x18 - 0.1*x19 - 1.5*x20 - 2.5*x21
       - 2.5*x22 - 1.5*x23 - 0.5*x24 - x25 - 0.2*x27 - 0.1*x28 - 0.1*x29
       - 0.2*x30 - 0.2*x31 - 0.2*x32 - 0.2*x33 - 0.2*x34 - 0.1*x35 - 0.1*x36
       - 0.2*x37 - 0.2*x38 - 0.2*x39 - 0.2*x40 =G= -12.5;

e13..  - 0.4*x15 - 0.2*x16 - 0.2*x17 - 0.02*x18 - 0.4*x19 - 0.3*x20 - 0.1*x21
       - 0.1*x22 - 0.4*x23 - 0.4*x24 - 0.04*x27 - 0.02*x28 - 0.02*x29
       - 0.04*x30 - 0.04*x31 - 0.04*x32 - 0.04*x33 - 0.04*x34 - 0.02*x35
       - 0.02*x36 - 0.04*x37 - 0.04*x38 - 0.04*x39 - 0.04*x40 =G= -3;

e14..  - 0.5*x27 - 0.4*x28 - 0.8*x29 - 1.2*x30 - 0.6*x31 - 0.7*x32 - 0.4*x33
       + 0.5*x34 + 0.4*x35 + 0.8*x36 + 1.2*x37 + 0.6*x38 + 0.7*x39 + 0.4*x40
       =G= 0;

e15..  - 5*x1 + 0.9*x2 + 0.2*x3 + x4 - 0.4*x7 + 0.2*x8 + x9 + 0.5*x10 + 0.5*x12
       + 0.4*x13 =G= 0;

e16..    3.5*x1 - 5*x2 + 0.5*x3 + 2*x4 - 1.3*x7 + 0.4*x8 + 0.1*x9 + 0.4*x10
       + 1.5*x12 + 0.2*x13 =G= 0;

e17..    0.1*x1 + 0.1*x2 - 2*x3 + 2*x4 - 1.2*x7 + 0.2*x8 + 0.1*x9 + 0.3*x10
       + 1.5*x12 + 0.2*x13 =G= 0;

e18..    0.1*x3 - 2*x4 - 0.32*x6 + 0.1*x8 + x9 + 0.3*x10 + 0.4*x11 + 0.1*x12
       + 0.02*x13 =G= 0;

e19..    0.7*x1 + 0.8*x2 + 0.1*x3 + 2*x4 - 4*x5 + 0.1*x12 + 0.4*x13 =G= 0;

e20..    0.8*x3 + 0.4*x4 - 0.8*x6 - 1.1*x7 + x8 + 3*x10 + 1.5*x12 + 0.3*x13
       =G= 0;

e21..    0.4*x3 + 1.8*x4 - 6*x7 + 2*x8 + 0.2*x9 + 0.2*x10 + 2.5*x12 + 0.1*x13
       =G= 0;

e22..    0.1*x3 + 1.6*x4 - 1.8*x7 - 2*x8 + x9 + 0.2*x10 + 2.5*x12 + 0.1*x13
       =G= 0;

e23..    0.1*x3 + 0.8*x4 - 1.2*x7 + 0.5*x8 - 2*x9 + 0.5*x10 + 1.5*x12 + 0.4*x13
       =G= 0;

e24..    0.1*x3 + 0.2*x4 - 0.4*x7 + 0.2*x8 + 0.2*x9 - x10 + 0.5*x12 + 0.4*x13
       =G= 0;

e25..  - 0.9*x7 + x12 =G= 0;

e26..  - 0.36*x6 + 0.4*x11 =G= 0;

e27..  - x1 + 0.4*x4 + 0.2*x12 + 0.04*x13 + 0.5*x14 =G= 0;

e28..  - x2 + 0.2*x4 + 0.1*x12 + 0.02*x13 + 0.4*x14 =G= 0;

e29..  - x3 + 0.2*x4 + 0.1*x12 + 0.02*x13 + 0.8*x14 =G= 0;

e30..    0.4*x4 - x7 + 0.2*x12 + 0.04*x13 + 1.2*x14 =G= 0;

e31..    0.4*x4 - x8 + 0.2*x12 + 0.04*x13 + 0.6*x14 =G= 0;

e32..    0.4*x4 - x9 + 0.2*x12 + 0.04*x13 + 0.7*x14 =G= 0;

e33..    0.4*x4 - x10 + 0.2*x12 + 0.04*x13 + 0.4*x14 =G= 0;

e34..    x1 + 0.2*x4 + 0.2*x12 + 0.04*x13 - 0.5*x14 =G= 0;

e35..    x2 + 0.2*x4 + 0.1*x12 + 0.02*x13 - 0.4*x14 =G= 0;

e36..    x3 + 0.2*x4 + 0.1*x12 + 0.02*x13 - 0.8*x14 =G= 0;

e37..    0.4*x4 + x7 + 0.2*x12 + 0.04*x13 - 1.2*x14 =G= 0;

e38..    0.4*x4 + x8 + 0.2*x12 + 0.04*x13 - 0.6*x14 =G= 0;

e39..    0.4*x4 + x9 + 0.2*x12 + 0.04*x13 - 0.7*x14 =G= 0;

e40..    0.4*x4 + x10 + 0.2*x12 + 0.04*x13 - 0.4*x14 =G= 0;

e41..  - 2*x11 - 3*x12 - 0.6*x13 + x41 =G= 0;

e42..  - 0.4*x11 - 2*x12 - 0.8*x13 + x42 =G= 0;

e43..  - x13 + x43 =G= 0;

e44..  - 0.8*x11 - 7.5*x12 - 0.6*x13 + x44 =G= 0;

* set non-default bounds
x1.fx = 1;
x2.lo = 1E-5;
x3.lo = 1E-5;
x4.lo = 1E-5;
x5.lo = 1E-5;
x6.lo = 1E-5;
x7.lo = 1E-5;

* set non-default levels
x2.l = 1;
x3.l = 1;
x4.l = 1;
x5.l = 1;
x6.l = 1;
x7.l = 1;
x8.l = 1;
x9.l = 1;
x10.l = 1;
x11.l = 1;
x12.l = 1;
x13.l = 1;
x14.l = 1;
x15.l = 1;
x16.l = 1;
x17.l = 1;
x18.l = 1;
x19.l = 1;
x20.l = 1;
x21.l = 1;
x22.l = 1;
x23.l = 1;
x24.l = 1;
x25.l = 1;
x26.l = 1;
x27.l = 1;
x28.l = 1;
x29.l = 1;
x30.l = 1;
x31.l = 1;
x32.l = 1;
x33.l = 1;
x34.l = 1;
x35.l = 1;
x36.l = 1;
x37.l = 1;
x38.l = 1;
x39.l = 1;
x40.l = 1;
x41.l = 1;
x42.l = 1;
x43.l = 1;
x44.l = 1;

Model m / e1.x1,e2.x2,e3.x3,e4.x4,e5.x5,e6.x6,e7.x7,e8.x8,e9.x9,e10.x10
         ,e11.x11,e12.x12,e13.x13,e14.x14,e15.x15,e16.x16,e17.x17,e18.x18
         ,e19.x19,e20.x20,e21.x21,e22.x22,e23.x23,e24.x24,e25.x25,e26.x26
         ,e27.x27,e28.x28,e29.x29,e30.x30,e31.x31,e32.x32,e33.x33,e34.x34
         ,e35.x35,e36.x36,e37.x37,e38.x38,e39.x39,e40.x40,e41.x41,e42.x42
         ,e43.x43,e44.x44 /;

m.limrow=0; m.limcol=0;

Solve m using MCP;
