*  DNLP written by GAMS Convert at 12/13/18 10:24:32
*  
*  Equation counts
*      Total        E        G        L        N        X        C        B
*         21       21        0        0        0        0        0        0
*  
*  Variable counts
*                   x        b        i      s1s      s2s       sc       si
*      Total     cont   binary  integer     sos1     sos2    scont     sint
*         25       25        0        0        0        0        0        0
*  FX      0        0        0        0        0        0        0        0
*  
*  Nonzero counts
*      Total    const       NL      DLL
*        121      101       20        0
*
*  Solve m using DNLP minimizing x1;


Variables  x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19
          ,x20,x21,x22,x23,x24,x25;

Equations  e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19
          ,e20,e21;


e1..    x2 + x22 + 85*x23 + 76*x24 + 44*x25 =E= 99;

e2..    x3 + x22 + 82*x23 + 78*x24 + 42*x25 =E= 93;

e3..    x4 + x22 + 75*x23 + 73*x24 + 42*x25 =E= 99;

e4..    x5 + x22 + 74*x23 + 72*x24 + 44*x25 =E= 97;

e5..    x6 + x22 + 76*x23 + 73*x24 + 43*x25 =E= 90;

e6..    x7 + x22 + 74*x23 + 69*x24 + 46*x25 =E= 96;

e7..    x8 + x22 + 73*x23 + 69*x24 + 46*x25 =E= 93;

e8..    x9 + x22 + 96*x23 + 80*x24 + 36*x25 =E= 130;

e9..    x10 + x22 + 93*x23 + 78*x24 + 36*x25 =E= 118;

e10..    x11 + x22 + 70*x23 + 73*x24 + 37*x25 =E= 88;

e11..    x12 + x22 + 82*x23 + 71*x24 + 46*x25 =E= 89;

e12..    x13 + x22 + 80*x23 + 72*x24 + 45*x25 =E= 93;

e13..    x14 + x22 + 77*x23 + 76*x24 + 42*x25 =E= 94;

e14..    x15 + x22 + 67*x23 + 76*x24 + 50*x25 =E= 75;

e15..    x16 + x22 + 82*x23 + 70*x24 + 48*x25 =E= 84;

e16..    x17 + x22 + 76*x23 + 76*x24 + 41*x25 =E= 91;

e17..    x18 + x22 + 74*x23 + 78*x24 + 31*x25 =E= 100;

e18..    x19 + x22 + 71*x23 + 80*x24 + 29*x25 =E= 98;

e19..    x20 + x22 + 70*x23 + 83*x24 + 39*x25 =E= 101;

e20..    x21 + x22 + 64*x23 + 79*x24 + 38*x25 =E= 80;

e21.. -(POWER(abs(0.0101010101010101*x2),3) + POWER(abs(0.010752688172043*x3),3
      ) + POWER(abs(0.0101010101010101*x4),3) + POWER(abs(0.0103092783505155*x5
      ),3) + POWER(abs(0.0111111111111111*x6),3) + POWER(abs(0.0104166666666667
      *x7),3) + POWER(abs(0.010752688172043*x8),3) + POWER(abs(
      0.00769230769230769*x9),3) + POWER(abs(0.00847457627118644*x10),3) + 
      POWER(abs(0.0113636363636364*x11),3) + POWER(abs(0.0112359550561798*x12),
      3) + POWER(abs(0.010752688172043*x13),3) + POWER(abs(0.0106382978723404*
      x14),3) + POWER(abs(0.0133333333333333*x15),3) + POWER(abs(
      0.0119047619047619*x16),3) + POWER(abs(0.010989010989011*x17),3) + POWER(
      abs(0.01*x18),3) + POWER(abs(0.0102040816326531*x19),3) + POWER(abs(
      0.0099009900990099*x20),3) + POWER(abs(0.0125*x21),3)) + x1 =E= 0;

* set non-default bounds
x2.lo = -100; x2.up = 100;
x3.lo = -100; x3.up = 100;
x4.lo = -100; x4.up = 100;
x5.lo = -100; x5.up = 100;
x6.lo = -100; x6.up = 100;
x7.lo = -100; x7.up = 100;
x8.lo = -100; x8.up = 100;
x9.lo = -100; x9.up = 100;
x10.lo = -100; x10.up = 100;
x11.lo = -100; x11.up = 100;
x12.lo = -100; x12.up = 100;
x13.lo = -100; x13.up = 100;
x14.lo = -100; x14.up = 100;
x15.lo = -100; x15.up = 100;
x16.lo = -100; x16.up = 100;
x17.lo = -100; x17.up = 100;
x18.lo = -100; x18.up = 100;
x19.lo = -100; x19.up = 100;
x20.lo = -100; x20.up = 100;
x21.lo = -100; x21.up = 100;

* set non-default levels
x1.l = 0.074943962065297;
x2.l = -1.02381947242853;
x3.l = -6.05329345864239;
x4.l = 7.23007776827267;
x5.l = 8.23564448625883;
x6.l = -1.80033036241163;
x7.l = 9.33150145182802;
x8.l = 7.33756941056047;
x9.l = 10.9114379444987;
x10.l = 2.02600002701089;
x11.l = -3.61788157830573;
x12.l = -5.81340042434707;
x13.l = -0.825103438087781;
x14.l = 0.0734045413351992;
x15.l = -1.06063724695418;
x16.l = -8.81390166509325;
x17.l = -2.89618732798059;
x18.l = -1.73700789731236;
x19.l = -2.76648188352623;
x20.l = 10.8516470462157;
x21.l = -4.89488861680761;
x22.l = 53.7754635743162;
x23.l = 1.00606795873256;
x24.l = 0.0481791031574926;
x25.l = -0.975659828048153;

* set non-default marginals
e1.m = -0.000208921430961846;
e2.m = -0.00139976724676665;
e3.m = 0.00147537552663456;
e4.m = 0.00175058868875734;
e5.m = -0.000444526015410277;
e6.m = 0.00202506541923352;
e7.m = 0.00169674399596727;
e8.m = 0.00129129443130162;
e9.m = 0.000291008334819146;
e10.m = -0.00093437024233103;
e11.m = -0.00146784507621439;
e12.m = -0.000190797418912656;
e13.m = 1.66148803384334E-5;
e14.m = -0.000377115465583706;
e15.m = -0.00249827144702189;
e16.m = -0.000699477678536552;
e17.m = -0.000347401579462472;
e18.m = -0.000576110346423626;
e19.m = 0.00212756534579271;
e20.m = -0.00152965269275238;

Model m / all /;

m.limrow=0; m.limcol=0;

option bratio = 0;
Solve m using DNLP minimizing x1;
