GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:22:34 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  option NLP=convert;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:22:34 Page 2
Elastic-plastic torsion COPS 2.0 #15 (TORSION,SEQ=243)
C o m p i l a t i o n


   3   
       
      Determine the stress potential in an infinitely long cylinder when
      torsion is applied.
       
      This model is from the COPS benchmarking suite.
      See http://www-unix.mcs.anl.gov/~more/cops/.
       
      The number of internal grid points can be specified using the command
      line parameters --nx and --ny. COPS performance tests have been
      reported for nx-1 = 50, ny-1 = 25, 50, 75, 100
       
       
      Dolan, E D, and More, J J, Benchmarking Optimization
      Software with COPS. Tech. rep., Mathematics and Computer
      Science Division, 2000.
       
      Glowinski, R, Numerical Methods for Nonlinear Variational
      Problems. Springer Verlag, 1984.
       
      Averick, B M, Carter, R G, More, J J, and Xue, G L, The
      MINPACK-2 Test Problem Collection. Tech. rep., Mathematics
      and Computer Science Division, Argonne National Laboratory,
      1992.
       
  30   
  31   
  34   
  35  sets nx grid points in 1st direction / x0*x51 /
  36       ny grid points in 2st direction / y0*y26 /
  37   
  38  alias(nx,i),(ny,j);
  39   
  40  parameters D(nx,ny) Distance to the boundary
  41             hx       grid spacing for x
  42             hy       grid spacing for y
  43             area     area of triangle
  44             c        some constant  /  5.0 /;
  45   
  46  hx   := 1/(card(nx)-1);
  47  hy   := 1/(card(ny)-1);
  48  area := 0.5*hx*hy;
  49   
  50  D(i,j) :=  min(min(ord(i)-1,card(nx)-ord(i))*hx,
  51                 min(ord(j)-1,card(ny)-ord(j))*hy);
  52   
  53  variables v(nx,ny)  defines the finite element approximation
  54            stress, linLower, linUpper, quadLower, quadUpper;
  55   
  56  Equations defLL, defLU, defQL, defQU, defstress;
  57   
  58  defLL.. linLower =e= sum((nx(i+1),ny(j+1)), v[i+1,j] + v[i,j] + v[i,j+1]);
  59   
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:22:34 Page 3
Elastic-plastic torsion COPS 2.0 #15 (TORSION,SEQ=243)
C o m p i l a t i o n


  60  defLU.. linUpper =e= sum((nx(i-1),ny(j-1)), v[i,j] + v[i-1,j] + v[i,j-1]);
  61   
  62   
  63  defQL.. quadLower =e= sum((nx(i+1),ny(j+1)), sqr((v[i+1,j]-v[i,j])/hx)
  64                                             + sqr((v[i,j+1]-v[i,j])/hy));
  65   
  66  defQU.. quadUpper =e= sum((nx(i-1),ny(j-1)), sqr((v[i,j]-v[i-1,j])/hx)
  67                                             + sqr((v[i,j]-v[i,j-1])/hy));
  68   
  69  defstress.. stress =e= area*(   (quadLower + quadUpper)/2
  70                              - c*(linLower  + linUpper )/3);
  71   
  72   
  73  model torsion / all /;
  74   
  75  v.lo(i,j) = -d(i,j);
  76  v.up(i,j) =  d(i,j);
  77  v.l (i,j) =  d(i,j);
  78   
  79  display d,hx,hy,area;
  80   
  82   
  83  solve torsion minimizing stress using nlp;
  84   
EXIT /home/renigijus/gams/opt-mod-lib/gamslib/torsion/torsion.gms
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:22:34 Page 4
Elastic-plastic torsion COPS 2.0 #15 (TORSION,SEQ=243)
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  /home/renigijus/gams/opt-mod-lib/gamslib/torsion/torsion.gms
     2       85 EXIT           1      85  /home/renigijus/gams/opt-mod-lib/gamslib/torsion/torsion.gms


COMPILATION TIME     =        0.001 SECONDS      3 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:22:34 Page 5
Elastic-plastic torsion COPS 2.0 #15 (TORSION,SEQ=243)
E x e c u t i o n


----     79 PARAMETER D  Distance to the boundary

             y1          y2          y3          y4          y5          y6          y7          y8          y9         y10         y11         y12         y13         y14         y15         y16         y17         y18         y19         y20         y21

x1        0.020       0.020       0.020       0.020       0.020       0.020       0.020       0.020       0.020       0.020       0.020       0.020       0.020       0.020       0.020       0.020       0.020       0.020       0.020       0.020       0.020
x2        0.038       0.039       0.039       0.039       0.039       0.039       0.039       0.039       0.039       0.039       0.039       0.039       0.039       0.039       0.039       0.039       0.039       0.039       0.039       0.039       0.039
x3        0.038       0.059       0.059       0.059       0.059       0.059       0.059       0.059       0.059       0.059       0.059       0.059       0.059       0.059       0.059       0.059       0.059       0.059       0.059       0.059       0.059
x4        0.038       0.077       0.078       0.078       0.078       0.078       0.078       0.078       0.078       0.078       0.078       0.078       0.078       0.078       0.078       0.078       0.078       0.078       0.078       0.078       0.078
x5        0.038       0.077       0.098       0.098       0.098       0.098       0.098       0.098       0.098       0.098       0.098       0.098       0.098       0.098       0.098       0.098       0.098       0.098       0.098       0.098       0.098
x6        0.038       0.077       0.115       0.118       0.118       0.118       0.118       0.118       0.118       0.118       0.118       0.118       0.118       0.118       0.118       0.118       0.118       0.118       0.118       0.118       0.118
x7        0.038       0.077       0.115       0.137       0.137       0.137       0.137       0.137       0.137       0.137       0.137       0.137       0.137       0.137       0.137       0.137       0.137       0.137       0.137       0.137       0.137
x8        0.038       0.077       0.115       0.154       0.157       0.157       0.157       0.157       0.157       0.157       0.157       0.157       0.157       0.157       0.157       0.157       0.157       0.157       0.157       0.157       0.157
x9        0.038       0.077       0.115       0.154       0.176       0.176       0.176       0.176       0.176       0.176       0.176       0.176       0.176       0.176       0.176       0.176       0.176       0.176       0.176       0.176       0.176
x10       0.038       0.077       0.115       0.154       0.192       0.196       0.196       0.196       0.196       0.196       0.196       0.196       0.196       0.196       0.196       0.196       0.196       0.196       0.196       0.196       0.192
x11       0.038       0.077       0.115       0.154       0.192       0.216       0.216       0.216       0.216       0.216       0.216       0.216       0.216       0.216       0.216       0.216       0.216       0.216       0.216       0.216       0.192
x12       0.038       0.077       0.115       0.154       0.192       0.231       0.235       0.235       0.235       0.235       0.235       0.235       0.235       0.235       0.235       0.235       0.235       0.235       0.235       0.231       0.192
x13       0.038       0.077       0.115       0.154       0.192       0.231       0.255       0.255       0.255       0.255       0.255       0.255       0.255       0.255       0.255       0.255       0.255       0.255       0.255       0.231       0.192
x14       0.038       0.077       0.115       0.154       0.192       0.231       0.269       0.275       0.275       0.275       0.275       0.275       0.275       0.275       0.275       0.275       0.275       0.275       0.269       0.231       0.192
x15       0.038       0.077       0.115       0.154       0.192       0.231       0.269       0.294       0.294       0.294       0.294       0.294       0.294       0.294       0.294       0.294       0.294       0.294       0.269       0.231       0.192
x16       0.038       0.077       0.115       0.154       0.192       0.231       0.269       0.308       0.314       0.314       0.314       0.314       0.314       0.314       0.314       0.314       0.314       0.308       0.269       0.231       0.192
x17       0.038       0.077       0.115       0.154       0.192       0.231       0.269       0.308       0.333       0.333       0.333       0.333       0.333       0.333       0.333       0.333       0.333       0.308       0.269       0.231       0.192
x18       0.038       0.077       0.115       0.154       0.192       0.231       0.269       0.308       0.346       0.353       0.353       0.353       0.353       0.353       0.353       0.353       0.346       0.308       0.269       0.231       0.192
x19       0.038       0.077       0.115       0.154       0.192       0.231       0.269       0.308       0.346       0.373       0.373       0.373       0.373       0.373       0.373       0.373       0.346       0.308       0.269       0.231       0.192
x20       0.038       0.077       0.115       0.154       0.192       0.231       0.269       0.308       0.346       0.385       0.392       0.392       0.392       0.392       0.392       0.385       0.346       0.308       0.269       0.231       0.192
x21       0.038       0.077       0.115       0.154       0.192       0.231       0.269       0.308       0.346       0.385       0.412       0.412       0.412       0.412       0.412       0.385       0.346       0.308       0.269       0.231       0.192
x22       0.038       0.077       0.115       0.154       0.192       0.231       0.269       0.308       0.346       0.385       0.423       0.431       0.431       0.431       0.423       0.385       0.346       0.308       0.269       0.231       0.192
x23       0.038       0.077       0.115       0.154       0.192       0.231       0.269       0.308       0.346       0.385       0.423       0.451       0.451       0.451       0.423       0.385       0.346       0.308       0.269       0.231       0.192
x24       0.038       0.077       0.115       0.154       0.192       0.231       0.269       0.308       0.346       0.385       0.423       0.462       0.471       0.462       0.423       0.385       0.346       0.308       0.269       0.231       0.192
x25       0.038       0.077       0.115       0.154       0.192       0.231       0.269       0.308       0.346       0.385       0.423       0.462       0.490       0.462       0.423       0.385       0.346       0.308       0.269       0.231       0.192
x26       0.038       0.077       0.115       0.154       0.192       0.231       0.269       0.308       0.346       0.385       0.423       0.462       0.490       0.462       0.423       0.385       0.346       0.308       0.269       0.231       0.192
x27       0.038       0.077       0.115       0.154       0.192       0.231       0.269       0.308       0.346       0.385       0.423       0.462       0.471       0.462       0.423       0.385       0.346       0.308       0.269       0.231       0.192
x28       0.038       0.077       0.115       0.154       0.192       0.231       0.269       0.308       0.346       0.385       0.423       0.451       0.451       0.451       0.423       0.385       0.346       0.308       0.269       0.231       0.192
x29       0.038       0.077       0.115       0.154       0.192       0.231       0.269       0.308       0.346       0.385       0.423       0.431       0.431       0.431       0.423       0.385       0.346       0.308       0.269       0.231       0.192
x30       0.038       0.077       0.115       0.154       0.192       0.231       0.269       0.308       0.346       0.385       0.412       0.412       0.412       0.412       0.412       0.385       0.346       0.308       0.269       0.231       0.192
x31       0.038       0.077       0.115       0.154       0.192       0.231       0.269       0.308       0.346       0.385       0.392       0.392       0.392       0.392       0.392       0.385       0.346       0.308       0.269       0.231       0.192
x32       0.038       0.077       0.115       0.154       0.192       0.231       0.269       0.308       0.346       0.373       0.373       0.373       0.373       0.373       0.373       0.373       0.346       0.308       0.269       0.231       0.192
x33       0.038       0.077       0.115       0.154       0.192       0.231       0.269       0.308       0.346       0.353       0.353       0.353       0.353       0.353       0.353       0.353       0.346       0.308       0.269       0.231       0.192
x34       0.038       0.077       0.115       0.154       0.192       0.231       0.269       0.308       0.333       0.333       0.333       0.333       0.333       0.333       0.333       0.333       0.333       0.308       0.269       0.231       0.192
x35       0.038       0.077       0.115       0.154       0.192       0.231       0.269       0.308       0.314       0.314       0.314       0.314       0.314       0.314       0.314       0.314       0.314       0.308       0.269       0.231       0.192
x36       0.038       0.077       0.115       0.154       0.192       0.231       0.269       0.294       0.294       0.294       0.294       0.294       0.294       0.294       0.294       0.294       0.294       0.294       0.269       0.231       0.192
x37       0.038       0.077       0.115       0.154       0.192       0.231       0.269       0.275       0.275       0.275       0.275       0.275       0.275       0.275       0.275       0.275       0.275       0.275       0.269       0.231       0.192
x38       0.038       0.077       0.115       0.154       0.192       0.231       0.255       0.255       0.255       0.255       0.255       0.255       0.255       0.255       0.255       0.255       0.255       0.255       0.255       0.231       0.192
x39       0.038       0.077       0.115       0.154       0.192       0.231       0.235       0.235       0.235       0.235       0.235       0.235       0.235       0.235       0.235       0.235       0.235       0.235       0.235       0.231       0.192
x40       0.038       0.077       0.115       0.154       0.192       0.216       0.216       0.216       0.216       0.216       0.216       0.216       0.216       0.216       0.216       0.216       0.216       0.216       0.216       0.216       0.192
x41       0.038       0.077       0.115       0.154       0.192       0.196       0.196       0.196       0.196       0.196       0.196       0.196       0.196       0.196       0.196       0.196       0.196       0.196       0.196       0.196       0.192
x42       0.038       0.077       0.115       0.154       0.176       0.176       0.176       0.176       0.176       0.176       0.176       0.176       0.176       0.176       0.176       0.176       0.176       0.176       0.176       0.176       0.176
x43       0.038       0.077       0.115       0.154       0.157       0.157       0.157       0.157       0.157       0.157       0.157       0.157       0.157       0.157       0.157       0.157       0.157       0.157       0.157       0.157       0.157
x44       0.038       0.077       0.115       0.137       0.137       0.137       0.137       0.137       0.137       0.137       0.137       0.137       0.137       0.137       0.137       0.137       0.137       0.137       0.137       0.137       0.137
x45       0.038       0.077       0.115       0.118       0.118       0.118       0.118       0.118       0.118       0.118       0.118       0.118       0.118       0.118       0.118       0.118       0.118       0.118       0.118       0.118       0.118
x46       0.038       0.077       0.098       0.098       0.098       0.098       0.098       0.098       0.098       0.098       0.098       0.098       0.098       0.098       0.098       0.098       0.098       0.098       0.098       0.098       0.098
x47       0.038       0.077       0.078       0.078       0.078       0.078       0.078       0.078       0.078       0.078       0.078       0.078       0.078       0.078       0.078       0.078       0.078       0.078       0.078       0.078       0.078
x48       0.038       0.059       0.059       0.059       0.059       0.059       0.059       0.059       0.059       0.059       0.059       0.059       0.059       0.059       0.059       0.059       0.059       0.059       0.059       0.059       0.059
x49       0.038       0.039       0.039       0.039       0.039       0.039       0.039       0.039       0.039       0.039       0.039       0.039       0.039       0.039       0.039       0.039       0.039       0.039       0.039       0.039       0.039
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:22:34 Page 6
Elastic-plastic torsion COPS 2.0 #15 (TORSION,SEQ=243)
E x e c u t i o n


         79 PARAMETER D  Distance to the boundary

             y1          y2          y3          y4          y5          y6          y7          y8          y9         y10         y11         y12         y13         y14         y15         y16         y17         y18         y19         y20         y21

x50       0.020       0.020       0.020       0.020       0.020       0.020       0.020       0.020       0.020       0.020       0.020       0.020       0.020       0.020       0.020       0.020       0.020       0.020       0.020       0.020       0.020

  +         y22         y23         y24         y25

x1        0.020       0.020       0.020       0.020
x2        0.039       0.039       0.039       0.038
x3        0.059       0.059       0.059       0.038
x4        0.078       0.078       0.077       0.038
x5        0.098       0.098       0.077       0.038
x6        0.118       0.115       0.077       0.038
x7        0.137       0.115       0.077       0.038
x8        0.154       0.115       0.077       0.038
x9        0.154       0.115       0.077       0.038
x10       0.154       0.115       0.077       0.038
x11       0.154       0.115       0.077       0.038
x12       0.154       0.115       0.077       0.038
x13       0.154       0.115       0.077       0.038
x14       0.154       0.115       0.077       0.038
x15       0.154       0.115       0.077       0.038
x16       0.154       0.115       0.077       0.038
x17       0.154       0.115       0.077       0.038
x18       0.154       0.115       0.077       0.038
x19       0.154       0.115       0.077       0.038
x20       0.154       0.115       0.077       0.038
x21       0.154       0.115       0.077       0.038
x22       0.154       0.115       0.077       0.038
x23       0.154       0.115       0.077       0.038
x24       0.154       0.115       0.077       0.038
x25       0.154       0.115       0.077       0.038
x26       0.154       0.115       0.077       0.038
x27       0.154       0.115       0.077       0.038
x28       0.154       0.115       0.077       0.038
x29       0.154       0.115       0.077       0.038
x30       0.154       0.115       0.077       0.038
x31       0.154       0.115       0.077       0.038
x32       0.154       0.115       0.077       0.038
x33       0.154       0.115       0.077       0.038
x34       0.154       0.115       0.077       0.038
x35       0.154       0.115       0.077       0.038
x36       0.154       0.115       0.077       0.038
x37       0.154       0.115       0.077       0.038
x38       0.154       0.115       0.077       0.038
x39       0.154       0.115       0.077       0.038
x40       0.154       0.115       0.077       0.038
x41       0.154       0.115       0.077       0.038
x42       0.154       0.115       0.077       0.038
x43       0.154       0.115       0.077       0.038
x44       0.137       0.115       0.077       0.038
x45       0.118       0.115       0.077       0.038
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:22:34 Page 7
Elastic-plastic torsion COPS 2.0 #15 (TORSION,SEQ=243)
E x e c u t i o n


         79 PARAMETER D  Distance to the boundary

  +         y22         y23         y24         y25

x46       0.098       0.098       0.077       0.038
x47       0.078       0.078       0.077       0.038
x48       0.059       0.059       0.059       0.038
x49       0.039       0.039       0.039       0.038
x50       0.020       0.020       0.020       0.020


----     79 PARAMETER hx                   =        0.020  grid spacing for x
            PARAMETER hy                   =        0.038  grid spacing for y
            PARAMETER area                 =  3.770739E-4  area of triangle
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:22:34 Page 8
Elastic-plastic torsion COPS 2.0 #15 (TORSION,SEQ=243)
Equation Listing    SOLVE torsion Using NLP From line 83


---- defLL  =E=  

defLL..  - v(x0,y0) - 2*v(x0,y1) - 2*v(x0,y2) - 2*v(x0,y3) - 2*v(x0,y4) - 2*v(x0,y5) - 2*v(x0,y6) - 2*v(x0,y7) - 2*v(x0,y8) - 2*v(x0,y9) - 2*v(x0,y10) - 2*v(x0,y11) - 2*v(x0,y12) - 2*v(x0,y13) - 2*v(x0,y14) - 2*v(x0,y15) - 2*v(x0,y16) - 2*v(x0,y17)
     
      - 2*v(x0,y18) - 2*v(x0,y19) - 2*v(x0,y20) - 2*v(x0,y21) - 2*v(x0,y22) - 2*v(x0,y23) - 2*v(x0,y24) - 2*v(x0,y25) - v(x0,y26) - 2*v(x1,y0) - 3*v(x1,y1) - 3*v(x1,y2) - 3*v(x1,y3) - 3*v(x1,y4) - 3*v(x1,y5) - 3*v(x1,y6) - 3*v(x1,y7) - 3*v(x1,y8)
     
      - 3*v(x1,y9) - 3*v(x1,y10) - 3*v(x1,y11) - 3*v(x1,y12) - 3*v(x1,y13) - 3*v(x1,y14) - 3*v(x1,y15) - 3*v(x1,y16) - 3*v(x1,y17) - 3*v(x1,y18) - 3*v(x1,y19) - 3*v(x1,y20) - 3*v(x1,y21) - 3*v(x1,y22) - 3*v(x1,y23) - 3*v(x1,y24) - 3*v(x1,y25) - v(x1,y26)
     
      - 2*v(x2,y0) - 3*v(x2,y1) - 3*v(x2,y2) - 3*v(x2,y3) - 3*v(x2,y4) - 3*v(x2,y5) - 3*v(x2,y6) - 3*v(x2,y7) - 3*v(x2,y8) - 3*v(x2,y9) - 3*v(x2,y10) - 3*v(x2,y11) - 3*v(x2,y12) - 3*v(x2,y13) - 3*v(x2,y14) - 3*v(x2,y15) - 3*v(x2,y16) - 3*v(x2,y17)
     
      - 3*v(x2,y18) - 3*v(x2,y19) - 3*v(x2,y20) - 3*v(x2,y21) - 3*v(x2,y22) - 3*v(x2,y23) - 3*v(x2,y24) - 3*v(x2,y25) - v(x2,y26) - 2*v(x3,y0) - 3*v(x3,y1) - 3*v(x3,y2) - 3*v(x3,y3) - 3*v(x3,y4) - 3*v(x3,y5) - 3*v(x3,y6) - 3*v(x3,y7) - 3*v(x3,y8)
     
      - 3*v(x3,y9) - 3*v(x3,y10) - 3*v(x3,y11) - 3*v(x3,y12) - 3*v(x3,y13) - 3*v(x3,y14) - 3*v(x3,y15) - 3*v(x3,y16) - 3*v(x3,y17) - 3*v(x3,y18) - 3*v(x3,y19) - 3*v(x3,y20) - 3*v(x3,y21) - 3*v(x3,y22) - 3*v(x3,y23) - 3*v(x3,y24) - 3*v(x3,y25) - v(x3,y26)
     
      - 2*v(x4,y0) - 3*v(x4,y1) - 3*v(x4,y2) - 3*v(x4,y3) - 3*v(x4,y4) - 3*v(x4,y5) - 3*v(x4,y6) - 3*v(x4,y7) - 3*v(x4,y8) - 3*v(x4,y9) - 3*v(x4,y10) - 3*v(x4,y11) - 3*v(x4,y12) - 3*v(x4,y13) - 3*v(x4,y14) - 3*v(x4,y15) - 3*v(x4,y16) - 3*v(x4,y17)
     
      - 3*v(x4,y18) - 3*v(x4,y19) - 3*v(x4,y20) - 3*v(x4,y21) - 3*v(x4,y22) - 3*v(x4,y23) - 3*v(x4,y24) - 3*v(x4,y25) - v(x4,y26) - 2*v(x5,y0) - 3*v(x5,y1) - 3*v(x5,y2) - 3*v(x5,y3) - 3*v(x5,y4) - 3*v(x5,y5) - 3*v(x5,y6) - 3*v(x5,y7) - 3*v(x5,y8)
     
      - 3*v(x5,y9) - 3*v(x5,y10) - 3*v(x5,y11) - 3*v(x5,y12) - 3*v(x5,y13) - 3*v(x5,y14) - 3*v(x5,y15) - 3*v(x5,y16) - 3*v(x5,y17) - 3*v(x5,y18) - 3*v(x5,y19) - 3*v(x5,y20) - 3*v(x5,y21) - 3*v(x5,y22) - 3*v(x5,y23) - 3*v(x5,y24) - 3*v(x5,y25) - v(x5,y26)
     
      - 2*v(x6,y0) - 3*v(x6,y1) - 3*v(x6,y2) - 3*v(x6,y3) - 3*v(x6,y4) - 3*v(x6,y5) - 3*v(x6,y6) - 3*v(x6,y7) - 3*v(x6,y8) - 3*v(x6,y9) - 3*v(x6,y10) - 3*v(x6,y11) - 3*v(x6,y12) - 3*v(x6,y13) - 3*v(x6,y14) - 3*v(x6,y15) - 3*v(x6,y16) - 3*v(x6,y17)
     
      - 3*v(x6,y18) - 3*v(x6,y19) - 3*v(x6,y20) - 3*v(x6,y21) - 3*v(x6,y22) - 3*v(x6,y23) - 3*v(x6,y24) - 3*v(x6,y25) - v(x6,y26) - 2*v(x7,y0) - 3*v(x7,y1) - 3*v(x7,y2) - 3*v(x7,y3) - 3*v(x7,y4) - 3*v(x7,y5) - 3*v(x7,y6) - 3*v(x7,y7) - 3*v(x7,y8)
     
      - 3*v(x7,y9) - 3*v(x7,y10) - 3*v(x7,y11) - 3*v(x7,y12) - 3*v(x7,y13) - 3*v(x7,y14) - 3*v(x7,y15) - 3*v(x7,y16) - 3*v(x7,y17) - 3*v(x7,y18) - 3*v(x7,y19) - 3*v(x7,y20) - 3*v(x7,y21) - 3*v(x7,y22) - 3*v(x7,y23) - 3*v(x7,y24) - 3*v(x7,y25) - v(x7,y26)
     
      - 2*v(x8,y0) - 3*v(x8,y1) - 3*v(x8,y2) - 3*v(x8,y3) - 3*v(x8,y4) - 3*v(x8,y5) - 3*v(x8,y6) - 3*v(x8,y7) - 3*v(x8,y8) - 3*v(x8,y9) - 3*v(x8,y10) - 3*v(x8,y11) - 3*v(x8,y12) - 3*v(x8,y13) - 3*v(x8,y14) - 3*v(x8,y15) - 3*v(x8,y16) - 3*v(x8,y17)
     
      - 3*v(x8,y18) - 3*v(x8,y19) - 3*v(x8,y20) - 3*v(x8,y21) - 3*v(x8,y22) - 3*v(x8,y23) - 3*v(x8,y24) - 3*v(x8,y25) - v(x8,y26) - 2*v(x9,y0) - 3*v(x9,y1) - 3*v(x9,y2) - 3*v(x9,y3) - 3*v(x9,y4) - 3*v(x9,y5) - 3*v(x9,y6) - 3*v(x9,y7) - 3*v(x9,y8)
     
      - 3*v(x9,y9) - 3*v(x9,y10) - 3*v(x9,y11) - 3*v(x9,y12) - 3*v(x9,y13) - 3*v(x9,y14) - 3*v(x9,y15) - 3*v(x9,y16) - 3*v(x9,y17) - 3*v(x9,y18) - 3*v(x9,y19) - 3*v(x9,y20) - 3*v(x9,y21) - 3*v(x9,y22) - 3*v(x9,y23) - 3*v(x9,y24) - 3*v(x9,y25) - v(x9,y26)
     
      - 2*v(x10,y0) - 3*v(x10,y1) - 3*v(x10,y2) - 3*v(x10,y3) - 3*v(x10,y4) - 3*v(x10,y5) - 3*v(x10,y6) - 3*v(x10,y7) - 3*v(x10,y8) - 3*v(x10,y9) - 3*v(x10,y10) - 3*v(x10,y11) - 3*v(x10,y12) - 3*v(x10,y13) - 3*v(x10,y14) - 3*v(x10,y15) - 3*v(x10,y16)
     
      - 3*v(x10,y17) - 3*v(x10,y18) - 3*v(x10,y19) - 3*v(x10,y20) - 3*v(x10,y21) - 3*v(x10,y22) - 3*v(x10,y23) - 3*v(x10,y24) - 3*v(x10,y25) - v(x10,y26) - 2*v(x11,y0) - 3*v(x11,y1) - 3*v(x11,y2) - 3*v(x11,y3) - 3*v(x11,y4) - 3*v(x11,y5) - 3*v(x11,y6)
     
      - 3*v(x11,y7) - 3*v(x11,y8) - 3*v(x11,y9) - 3*v(x11,y10) - 3*v(x11,y11) - 3*v(x11,y12) - 3*v(x11,y13) - 3*v(x11,y14) - 3*v(x11,y15) - 3*v(x11,y16) - 3*v(x11,y17) - 3*v(x11,y18) - 3*v(x11,y19) - 3*v(x11,y20) - 3*v(x11,y21) - 3*v(x11,y22)
     
      - 3*v(x11,y23) - 3*v(x11,y24) - 3*v(x11,y25) - v(x11,y26) - 2*v(x12,y0) - 3*v(x12,y1) - 3*v(x12,y2) - 3*v(x12,y3) - 3*v(x12,y4) - 3*v(x12,y5) - 3*v(x12,y6) - 3*v(x12,y7) - 3*v(x12,y8) - 3*v(x12,y9) - 3*v(x12,y10) - 3*v(x12,y11) - 3*v(x12,y12)
     
      - 3*v(x12,y13) - 3*v(x12,y14) - 3*v(x12,y15) - 3*v(x12,y16) - 3*v(x12,y17) - 3*v(x12,y18) - 3*v(x12,y19) - 3*v(x12,y20) - 3*v(x12,y21) - 3*v(x12,y22) - 3*v(x12,y23) - 3*v(x12,y24) - 3*v(x12,y25) - v(x12,y26) - 2*v(x13,y0) - 3*v(x13,y1) - 3*v(x13,y2)
     
      - 3*v(x13,y3) - 3*v(x13,y4) - 3*v(x13,y5) - 3*v(x13,y6) - 3*v(x13,y7) - 3*v(x13,y8) - 3*v(x13,y9) - 3*v(x13,y10) - 3*v(x13,y11) - 3*v(x13,y12) - 3*v(x13,y13) - 3*v(x13,y14) - 3*v(x13,y15) - 3*v(x13,y16) - 3*v(x13,y17) - 3*v(x13,y18) - 3*v(x13,y19)
     
      - 3*v(x13,y20) - 3*v(x13,y21) - 3*v(x13,y22) - 3*v(x13,y23) - 3*v(x13,y24) - 3*v(x13,y25) - v(x13,y26) - 2*v(x14,y0) - 3*v(x14,y1) - 3*v(x14,y2) - 3*v(x14,y3) - 3*v(x14,y4) - 3*v(x14,y5) - 3*v(x14,y6) - 3*v(x14,y7) - 3*v(x14,y8) - 3*v(x14,y9)
     
      - 3*v(x14,y10) - 3*v(x14,y11) - 3*v(x14,y12) - 3*v(x14,y13) - 3*v(x14,y14) - 3*v(x14,y15) - 3*v(x14,y16) - 3*v(x14,y17) - 3*v(x14,y18) - 3*v(x14,y19) - 3*v(x14,y20) - 3*v(x14,y21) - 3*v(x14,y22) - 3*v(x14,y23) - 3*v(x14,y24) - 3*v(x14,y25)
     
      - v(x14,y26) - 2*v(x15,y0) - 3*v(x15,y1) - 3*v(x15,y2) - 3*v(x15,y3) - 3*v(x15,y4) - 3*v(x15,y5) - 3*v(x15,y6) - 3*v(x15,y7) - 3*v(x15,y8) - 3*v(x15,y9) - 3*v(x15,y10) - 3*v(x15,y11) - 3*v(x15,y12) - 3*v(x15,y13) - 3*v(x15,y14) - 3*v(x15,y15)
     
      - 3*v(x15,y16) - 3*v(x15,y17) - 3*v(x15,y18) - 3*v(x15,y19) - 3*v(x15,y20) - 3*v(x15,y21) - 3*v(x15,y22) - 3*v(x15,y23) - 3*v(x15,y24) - 3*v(x15,y25) - v(x15,y26) - 2*v(x16,y0) - 3*v(x16,y1) - 3*v(x16,y2) - 3*v(x16,y3) - 3*v(x16,y4) - 3*v(x16,y5)
     
      - 3*v(x16,y6) - 3*v(x16,y7) - 3*v(x16,y8) - 3*v(x16,y9) - 3*v(x16,y10) - 3*v(x16,y11) - 3*v(x16,y12) - 3*v(x16,y13) - 3*v(x16,y14) - 3*v(x16,y15) - 3*v(x16,y16) - 3*v(x16,y17) - 3*v(x16,y18) - 3*v(x16,y19) - 3*v(x16,y20) - 3*v(x16,y21)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:22:34 Page 9
Elastic-plastic torsion COPS 2.0 #15 (TORSION,SEQ=243)
Equation Listing    SOLVE torsion Using NLP From line 83


     defLL  =E=       
     
      - 3*v(x16,y22) - 3*v(x16,y23) - 3*v(x16,y24) - 3*v(x16,y25) - v(x16,y26) - 2*v(x17,y0) - 3*v(x17,y1) - 3*v(x17,y2) - 3*v(x17,y3) - 3*v(x17,y4) - 3*v(x17,y5) - 3*v(x17,y6) - 3*v(x17,y7) - 3*v(x17,y8) - 3*v(x17,y9) - 3*v(x17,y10) - 3*v(x17,y11)
     
      - 3*v(x17,y12) - 3*v(x17,y13) - 3*v(x17,y14) - 3*v(x17,y15) - 3*v(x17,y16) - 3*v(x17,y17) - 3*v(x17,y18) - 3*v(x17,y19) - 3*v(x17,y20) - 3*v(x17,y21) - 3*v(x17,y22) - 3*v(x17,y23) - 3*v(x17,y24) - 3*v(x17,y25) - v(x17,y26) - 2*v(x18,y0)
     
      - 3*v(x18,y1) - 3*v(x18,y2) - 3*v(x18,y3) - 3*v(x18,y4) - 3*v(x18,y5) - 3*v(x18,y6) - 3*v(x18,y7) - 3*v(x18,y8) - 3*v(x18,y9) - 3*v(x18,y10) - 3*v(x18,y11) - 3*v(x18,y12) - 3*v(x18,y13) - 3*v(x18,y14) - 3*v(x18,y15) - 3*v(x18,y16) - 3*v(x18,y17)
     
      - 3*v(x18,y18) - 3*v(x18,y19) - 3*v(x18,y20) - 3*v(x18,y21) - 3*v(x18,y22) - 3*v(x18,y23) - 3*v(x18,y24) - 3*v(x18,y25) - v(x18,y26) - 2*v(x19,y0) - 3*v(x19,y1) - 3*v(x19,y2) - 3*v(x19,y3) - 3*v(x19,y4) - 3*v(x19,y5) - 3*v(x19,y6) - 3*v(x19,y7)
     
      - 3*v(x19,y8) - 3*v(x19,y9) - 3*v(x19,y10) - 3*v(x19,y11) - 3*v(x19,y12) - 3*v(x19,y13) - 3*v(x19,y14) - 3*v(x19,y15) - 3*v(x19,y16) - 3*v(x19,y17) - 3*v(x19,y18) - 3*v(x19,y19) - 3*v(x19,y20) - 3*v(x19,y21) - 3*v(x19,y22) - 3*v(x19,y23)
     
      - 3*v(x19,y24) - 3*v(x19,y25) - v(x19,y26) - 2*v(x20,y0) - 3*v(x20,y1) - 3*v(x20,y2) - 3*v(x20,y3) - 3*v(x20,y4) - 3*v(x20,y5) - 3*v(x20,y6) - 3*v(x20,y7) - 3*v(x20,y8) - 3*v(x20,y9) - 3*v(x20,y10) - 3*v(x20,y11) - 3*v(x20,y12) - 3*v(x20,y13)
     
      - 3*v(x20,y14) - 3*v(x20,y15) - 3*v(x20,y16) - 3*v(x20,y17) - 3*v(x20,y18) - 3*v(x20,y19) - 3*v(x20,y20) - 3*v(x20,y21) - 3*v(x20,y22) - 3*v(x20,y23) - 3*v(x20,y24) - 3*v(x20,y25) - v(x20,y26) - 2*v(x21,y0) - 3*v(x21,y1) - 3*v(x21,y2) - 3*v(x21,y3)
     
      - 3*v(x21,y4) - 3*v(x21,y5) - 3*v(x21,y6) - 3*v(x21,y7) - 3*v(x21,y8) - 3*v(x21,y9) - 3*v(x21,y10) - 3*v(x21,y11) - 3*v(x21,y12) - 3*v(x21,y13) - 3*v(x21,y14) - 3*v(x21,y15) - 3*v(x21,y16) - 3*v(x21,y17) - 3*v(x21,y18) - 3*v(x21,y19) - 3*v(x21,y20)
     
      - 3*v(x21,y21) - 3*v(x21,y22) - 3*v(x21,y23) - 3*v(x21,y24) - 3*v(x21,y25) - v(x21,y26) - 2*v(x22,y0) - 3*v(x22,y1) - 3*v(x22,y2) - 3*v(x22,y3) - 3*v(x22,y4) - 3*v(x22,y5) - 3*v(x22,y6) - 3*v(x22,y7) - 3*v(x22,y8) - 3*v(x22,y9) - 3*v(x22,y10)
     
      - 3*v(x22,y11) - 3*v(x22,y12) - 3*v(x22,y13) - 3*v(x22,y14) - 3*v(x22,y15) - 3*v(x22,y16) - 3*v(x22,y17) - 3*v(x22,y18) - 3*v(x22,y19) - 3*v(x22,y20) - 3*v(x22,y21) - 3*v(x22,y22) - 3*v(x22,y23) - 3*v(x22,y24) - 3*v(x22,y25) - v(x22,y26)
     
      - 2*v(x23,y0) - 3*v(x23,y1) - 3*v(x23,y2) - 3*v(x23,y3) - 3*v(x23,y4) - 3*v(x23,y5) - 3*v(x23,y6) - 3*v(x23,y7) - 3*v(x23,y8) - 3*v(x23,y9) - 3*v(x23,y10) - 3*v(x23,y11) - 3*v(x23,y12) - 3*v(x23,y13) - 3*v(x23,y14) - 3*v(x23,y15) - 3*v(x23,y16)
     
      - 3*v(x23,y17) - 3*v(x23,y18) - 3*v(x23,y19) - 3*v(x23,y20) - 3*v(x23,y21) - 3*v(x23,y22) - 3*v(x23,y23) - 3*v(x23,y24) - 3*v(x23,y25) - v(x23,y26) - 2*v(x24,y0) - 3*v(x24,y1) - 3*v(x24,y2) - 3*v(x24,y3) - 3*v(x24,y4) - 3*v(x24,y5) - 3*v(x24,y6)
     
      - 3*v(x24,y7) - 3*v(x24,y8) - 3*v(x24,y9) - 3*v(x24,y10) - 3*v(x24,y11) - 3*v(x24,y12) - 3*v(x24,y13) - 3*v(x24,y14) - 3*v(x24,y15) - 3*v(x24,y16) - 3*v(x24,y17) - 3*v(x24,y18) - 3*v(x24,y19) - 3*v(x24,y20) - 3*v(x24,y21) - 3*v(x24,y22)
     
      - 3*v(x24,y23) - 3*v(x24,y24) - 3*v(x24,y25) - v(x24,y26) - 2*v(x25,y0) - 3*v(x25,y1) - 3*v(x25,y2) - 3*v(x25,y3) - 3*v(x25,y4) - 3*v(x25,y5) - 3*v(x25,y6) - 3*v(x25,y7) - 3*v(x25,y8) - 3*v(x25,y9) - 3*v(x25,y10) - 3*v(x25,y11) - 3*v(x25,y12)
     
      - 3*v(x25,y13) - 3*v(x25,y14) - 3*v(x25,y15) - 3*v(x25,y16) - 3*v(x25,y17) - 3*v(x25,y18) - 3*v(x25,y19) - 3*v(x25,y20) - 3*v(x25,y21) - 3*v(x25,y22) - 3*v(x25,y23) - 3*v(x25,y24) - 3*v(x25,y25) - v(x25,y26) - 2*v(x26,y0) - 3*v(x26,y1) - 3*v(x26,y2)
     
      - 3*v(x26,y3) - 3*v(x26,y4) - 3*v(x26,y5) - 3*v(x26,y6) - 3*v(x26,y7) - 3*v(x26,y8) - 3*v(x26,y9) - 3*v(x26,y10) - 3*v(x26,y11) - 3*v(x26,y12) - 3*v(x26,y13) - 3*v(x26,y14) - 3*v(x26,y15) - 3*v(x26,y16) - 3*v(x26,y17) - 3*v(x26,y18) - 3*v(x26,y19)
     
      - 3*v(x26,y20) - 3*v(x26,y21) - 3*v(x26,y22) - 3*v(x26,y23) - 3*v(x26,y24) - 3*v(x26,y25) - v(x26,y26) - 2*v(x27,y0) - 3*v(x27,y1) - 3*v(x27,y2) - 3*v(x27,y3) - 3*v(x27,y4) - 3*v(x27,y5) - 3*v(x27,y6) - 3*v(x27,y7) - 3*v(x27,y8) - 3*v(x27,y9)
     
      - 3*v(x27,y10) - 3*v(x27,y11) - 3*v(x27,y12) - 3*v(x27,y13) - 3*v(x27,y14) - 3*v(x27,y15) - 3*v(x27,y16) - 3*v(x27,y17) - 3*v(x27,y18) - 3*v(x27,y19) - 3*v(x27,y20) - 3*v(x27,y21) - 3*v(x27,y22) - 3*v(x27,y23) - 3*v(x27,y24) - 3*v(x27,y25)
     
      - v(x27,y26) - 2*v(x28,y0) - 3*v(x28,y1) - 3*v(x28,y2) - 3*v(x28,y3) - 3*v(x28,y4) - 3*v(x28,y5) - 3*v(x28,y6) - 3*v(x28,y7) - 3*v(x28,y8) - 3*v(x28,y9) - 3*v(x28,y10) - 3*v(x28,y11) - 3*v(x28,y12) - 3*v(x28,y13) - 3*v(x28,y14) - 3*v(x28,y15)
     
      - 3*v(x28,y16) - 3*v(x28,y17) - 3*v(x28,y18) - 3*v(x28,y19) - 3*v(x28,y20) - 3*v(x28,y21) - 3*v(x28,y22) - 3*v(x28,y23) - 3*v(x28,y24) - 3*v(x28,y25) - v(x28,y26) - 2*v(x29,y0) - 3*v(x29,y1) - 3*v(x29,y2) - 3*v(x29,y3) - 3*v(x29,y4) - 3*v(x29,y5)
     
      - 3*v(x29,y6) - 3*v(x29,y7) - 3*v(x29,y8) - 3*v(x29,y9) - 3*v(x29,y10) - 3*v(x29,y11) - 3*v(x29,y12) - 3*v(x29,y13) - 3*v(x29,y14) - 3*v(x29,y15) - 3*v(x29,y16) - 3*v(x29,y17) - 3*v(x29,y18) - 3*v(x29,y19) - 3*v(x29,y20) - 3*v(x29,y21)
     
      - 3*v(x29,y22) - 3*v(x29,y23) - 3*v(x29,y24) - 3*v(x29,y25) - v(x29,y26) - 2*v(x30,y0) - 3*v(x30,y1) - 3*v(x30,y2) - 3*v(x30,y3) - 3*v(x30,y4) - 3*v(x30,y5) - 3*v(x30,y6) - 3*v(x30,y7) - 3*v(x30,y8) - 3*v(x30,y9) - 3*v(x30,y10) - 3*v(x30,y11)
     
      - 3*v(x30,y12) - 3*v(x30,y13) - 3*v(x30,y14) - 3*v(x30,y15) - 3*v(x30,y16) - 3*v(x30,y17) - 3*v(x30,y18) - 3*v(x30,y19) - 3*v(x30,y20) - 3*v(x30,y21) - 3*v(x30,y22) - 3*v(x30,y23) - 3*v(x30,y24) - 3*v(x30,y25) - v(x30,y26) - 2*v(x31,y0)
     
      - 3*v(x31,y1) - 3*v(x31,y2) - 3*v(x31,y3) - 3*v(x31,y4) - 3*v(x31,y5) - 3*v(x31,y6) - 3*v(x31,y7) - 3*v(x31,y8) - 3*v(x31,y9) - 3*v(x31,y10) - 3*v(x31,y11) - 3*v(x31,y12) - 3*v(x31,y13) - 3*v(x31,y14) - 3*v(x31,y15) - 3*v(x31,y16) - 3*v(x31,y17)
     
      - 3*v(x31,y18) - 3*v(x31,y19) - 3*v(x31,y20) - 3*v(x31,y21) - 3*v(x31,y22) - 3*v(x31,y23) - 3*v(x31,y24) - 3*v(x31,y25) - v(x31,y26) - 2*v(x32,y0) - 3*v(x32,y1) - 3*v(x32,y2) - 3*v(x32,y3) - 3*v(x32,y4) - 3*v(x32,y5) - 3*v(x32,y6) - 3*v(x32,y7)
     
      - 3*v(x32,y8) - 3*v(x32,y9) - 3*v(x32,y10) - 3*v(x32,y11) - 3*v(x32,y12) - 3*v(x32,y13) - 3*v(x32,y14) - 3*v(x32,y15) - 3*v(x32,y16) - 3*v(x32,y17) - 3*v(x32,y18) - 3*v(x32,y19) - 3*v(x32,y20) - 3*v(x32,y21) - 3*v(x32,y22) - 3*v(x32,y23)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:34 Page 10
Elastic-plastic torsion COPS 2.0 #15 (TORSION,SEQ=243)
Equation Listing    SOLVE torsion Using NLP From line 83


     defLL  =E=       
     
      - 3*v(x32,y24) - 3*v(x32,y25) - v(x32,y26) - 2*v(x33,y0) - 3*v(x33,y1) - 3*v(x33,y2) - 3*v(x33,y3) - 3*v(x33,y4) - 3*v(x33,y5) - 3*v(x33,y6) - 3*v(x33,y7) - 3*v(x33,y8) - 3*v(x33,y9) - 3*v(x33,y10) - 3*v(x33,y11) - 3*v(x33,y12) - 3*v(x33,y13)
     
      - 3*v(x33,y14) - 3*v(x33,y15) - 3*v(x33,y16) - 3*v(x33,y17) - 3*v(x33,y18) - 3*v(x33,y19) - 3*v(x33,y20) - 3*v(x33,y21) - 3*v(x33,y22) - 3*v(x33,y23) - 3*v(x33,y24) - 3*v(x33,y25) - v(x33,y26) - 2*v(x34,y0) - 3*v(x34,y1) - 3*v(x34,y2) - 3*v(x34,y3)
     
      - 3*v(x34,y4) - 3*v(x34,y5) - 3*v(x34,y6) - 3*v(x34,y7) - 3*v(x34,y8) - 3*v(x34,y9) - 3*v(x34,y10) - 3*v(x34,y11) - 3*v(x34,y12) - 3*v(x34,y13) - 3*v(x34,y14) - 3*v(x34,y15) - 3*v(x34,y16) - 3*v(x34,y17) - 3*v(x34,y18) - 3*v(x34,y19) - 3*v(x34,y20)
     
      - 3*v(x34,y21) - 3*v(x34,y22) - 3*v(x34,y23) - 3*v(x34,y24) - 3*v(x34,y25) - v(x34,y26) - 2*v(x35,y0) - 3*v(x35,y1) - 3*v(x35,y2) - 3*v(x35,y3) - 3*v(x35,y4) - 3*v(x35,y5) - 3*v(x35,y6) - 3*v(x35,y7) - 3*v(x35,y8) - 3*v(x35,y9) - 3*v(x35,y10)
     
      - 3*v(x35,y11) - 3*v(x35,y12) - 3*v(x35,y13) - 3*v(x35,y14) - 3*v(x35,y15) - 3*v(x35,y16) - 3*v(x35,y17) - 3*v(x35,y18) - 3*v(x35,y19) - 3*v(x35,y20) - 3*v(x35,y21) - 3*v(x35,y22) - 3*v(x35,y23) - 3*v(x35,y24) - 3*v(x35,y25) - v(x35,y26)
     
      - 2*v(x36,y0) - 3*v(x36,y1) - 3*v(x36,y2) - 3*v(x36,y3) - 3*v(x36,y4) - 3*v(x36,y5) - 3*v(x36,y6) - 3*v(x36,y7) - 3*v(x36,y8) - 3*v(x36,y9) - 3*v(x36,y10) - 3*v(x36,y11) - 3*v(x36,y12) - 3*v(x36,y13) - 3*v(x36,y14) - 3*v(x36,y15) - 3*v(x36,y16)
     
      - 3*v(x36,y17) - 3*v(x36,y18) - 3*v(x36,y19) - 3*v(x36,y20) - 3*v(x36,y21) - 3*v(x36,y22) - 3*v(x36,y23) - 3*v(x36,y24) - 3*v(x36,y25) - v(x36,y26) - 2*v(x37,y0) - 3*v(x37,y1) - 3*v(x37,y2) - 3*v(x37,y3) - 3*v(x37,y4) - 3*v(x37,y5) - 3*v(x37,y6)
     
      - 3*v(x37,y7) - 3*v(x37,y8) - 3*v(x37,y9) - 3*v(x37,y10) - 3*v(x37,y11) - 3*v(x37,y12) - 3*v(x37,y13) - 3*v(x37,y14) - 3*v(x37,y15) - 3*v(x37,y16) - 3*v(x37,y17) - 3*v(x37,y18) - 3*v(x37,y19) - 3*v(x37,y20) - 3*v(x37,y21) - 3*v(x37,y22)
     
      - 3*v(x37,y23) - 3*v(x37,y24) - 3*v(x37,y25) - v(x37,y26) - 2*v(x38,y0) - 3*v(x38,y1) - 3*v(x38,y2) - 3*v(x38,y3) - 3*v(x38,y4) - 3*v(x38,y5) - 3*v(x38,y6) - 3*v(x38,y7) - 3*v(x38,y8) - 3*v(x38,y9) - 3*v(x38,y10) - 3*v(x38,y11) - 3*v(x38,y12)
     
      - 3*v(x38,y13) - 3*v(x38,y14) - 3*v(x38,y15) - 3*v(x38,y16) - 3*v(x38,y17) - 3*v(x38,y18) - 3*v(x38,y19) - 3*v(x38,y20) - 3*v(x38,y21) - 3*v(x38,y22) - 3*v(x38,y23) - 3*v(x38,y24) - 3*v(x38,y25) - v(x38,y26) - 2*v(x39,y0) - 3*v(x39,y1) - 3*v(x39,y2)
     
      - 3*v(x39,y3) - 3*v(x39,y4) - 3*v(x39,y5) - 3*v(x39,y6) - 3*v(x39,y7) - 3*v(x39,y8) - 3*v(x39,y9) - 3*v(x39,y10) - 3*v(x39,y11) - 3*v(x39,y12) - 3*v(x39,y13) - 3*v(x39,y14) - 3*v(x39,y15) - 3*v(x39,y16) - 3*v(x39,y17) - 3*v(x39,y18) - 3*v(x39,y19)
     
      - 3*v(x39,y20) - 3*v(x39,y21) - 3*v(x39,y22) - 3*v(x39,y23) - 3*v(x39,y24) - 3*v(x39,y25) - v(x39,y26) - 2*v(x40,y0) - 3*v(x40,y1) - 3*v(x40,y2) - 3*v(x40,y3) - 3*v(x40,y4) - 3*v(x40,y5) - 3*v(x40,y6) - 3*v(x40,y7) - 3*v(x40,y8) - 3*v(x40,y9)
     
      - 3*v(x40,y10) - 3*v(x40,y11) - 3*v(x40,y12) - 3*v(x40,y13) - 3*v(x40,y14) - 3*v(x40,y15) - 3*v(x40,y16) - 3*v(x40,y17) - 3*v(x40,y18) - 3*v(x40,y19) - 3*v(x40,y20) - 3*v(x40,y21) - 3*v(x40,y22) - 3*v(x40,y23) - 3*v(x40,y24) - 3*v(x40,y25)
     
      - v(x40,y26) - 2*v(x41,y0) - 3*v(x41,y1) - 3*v(x41,y2) - 3*v(x41,y3) - 3*v(x41,y4) - 3*v(x41,y5) - 3*v(x41,y6) - 3*v(x41,y7) - 3*v(x41,y8) - 3*v(x41,y9) - 3*v(x41,y10) - 3*v(x41,y11) - 3*v(x41,y12) - 3*v(x41,y13) - 3*v(x41,y14) - 3*v(x41,y15)
     
      - 3*v(x41,y16) - 3*v(x41,y17) - 3*v(x41,y18) - 3*v(x41,y19) - 3*v(x41,y20) - 3*v(x41,y21) - 3*v(x41,y22) - 3*v(x41,y23) - 3*v(x41,y24) - 3*v(x41,y25) - v(x41,y26) - 2*v(x42,y0) - 3*v(x42,y1) - 3*v(x42,y2) - 3*v(x42,y3) - 3*v(x42,y4) - 3*v(x42,y5)
     
      - 3*v(x42,y6) - 3*v(x42,y7) - 3*v(x42,y8) - 3*v(x42,y9) - 3*v(x42,y10) - 3*v(x42,y11) - 3*v(x42,y12) - 3*v(x42,y13) - 3*v(x42,y14) - 3*v(x42,y15) - 3*v(x42,y16) - 3*v(x42,y17) - 3*v(x42,y18) - 3*v(x42,y19) - 3*v(x42,y20) - 3*v(x42,y21)
     
      - 3*v(x42,y22) - 3*v(x42,y23) - 3*v(x42,y24) - 3*v(x42,y25) - v(x42,y26) - 2*v(x43,y0) - 3*v(x43,y1) - 3*v(x43,y2) - 3*v(x43,y3) - 3*v(x43,y4) - 3*v(x43,y5) - 3*v(x43,y6) - 3*v(x43,y7) - 3*v(x43,y8) - 3*v(x43,y9) - 3*v(x43,y10) - 3*v(x43,y11)
     
      - 3*v(x43,y12) - 3*v(x43,y13) - 3*v(x43,y14) - 3*v(x43,y15) - 3*v(x43,y16) - 3*v(x43,y17) - 3*v(x43,y18) - 3*v(x43,y19) - 3*v(x43,y20) - 3*v(x43,y21) - 3*v(x43,y22) - 3*v(x43,y23) - 3*v(x43,y24) - 3*v(x43,y25) - v(x43,y26) - 2*v(x44,y0)
     
      - 3*v(x44,y1) - 3*v(x44,y2) - 3*v(x44,y3) - 3*v(x44,y4) - 3*v(x44,y5) - 3*v(x44,y6) - 3*v(x44,y7) - 3*v(x44,y8) - 3*v(x44,y9) - 3*v(x44,y10) - 3*v(x44,y11) - 3*v(x44,y12) - 3*v(x44,y13) - 3*v(x44,y14) - 3*v(x44,y15) - 3*v(x44,y16) - 3*v(x44,y17)
     
      - 3*v(x44,y18) - 3*v(x44,y19) - 3*v(x44,y20) - 3*v(x44,y21) - 3*v(x44,y22) - 3*v(x44,y23) - 3*v(x44,y24) - 3*v(x44,y25) - v(x44,y26) - 2*v(x45,y0) - 3*v(x45,y1) - 3*v(x45,y2) - 3*v(x45,y3) - 3*v(x45,y4) - 3*v(x45,y5) - 3*v(x45,y6) - 3*v(x45,y7)
     
      - 3*v(x45,y8) - 3*v(x45,y9) - 3*v(x45,y10) - 3*v(x45,y11) - 3*v(x45,y12) - 3*v(x45,y13) - 3*v(x45,y14) - 3*v(x45,y15) - 3*v(x45,y16) - 3*v(x45,y17) - 3*v(x45,y18) - 3*v(x45,y19) - 3*v(x45,y20) - 3*v(x45,y21) - 3*v(x45,y22) - 3*v(x45,y23)
     
      - 3*v(x45,y24) - 3*v(x45,y25) - v(x45,y26) - 2*v(x46,y0) - 3*v(x46,y1) - 3*v(x46,y2) - 3*v(x46,y3) - 3*v(x46,y4) - 3*v(x46,y5) - 3*v(x46,y6) - 3*v(x46,y7) - 3*v(x46,y8) - 3*v(x46,y9) - 3*v(x46,y10) - 3*v(x46,y11) - 3*v(x46,y12) - 3*v(x46,y13)
     
      - 3*v(x46,y14) - 3*v(x46,y15) - 3*v(x46,y16) - 3*v(x46,y17) - 3*v(x46,y18) - 3*v(x46,y19) - 3*v(x46,y20) - 3*v(x46,y21) - 3*v(x46,y22) - 3*v(x46,y23) - 3*v(x46,y24) - 3*v(x46,y25) - v(x46,y26) - 2*v(x47,y0) - 3*v(x47,y1) - 3*v(x47,y2) - 3*v(x47,y3)
     
      - 3*v(x47,y4) - 3*v(x47,y5) - 3*v(x47,y6) - 3*v(x47,y7) - 3*v(x47,y8) - 3*v(x47,y9) - 3*v(x47,y10) - 3*v(x47,y11) - 3*v(x47,y12) - 3*v(x47,y13) - 3*v(x47,y14) - 3*v(x47,y15) - 3*v(x47,y16) - 3*v(x47,y17) - 3*v(x47,y18) - 3*v(x47,y19) - 3*v(x47,y20)
     
      - 3*v(x47,y21) - 3*v(x47,y22) - 3*v(x47,y23) - 3*v(x47,y24) - 3*v(x47,y25) - v(x47,y26) - 2*v(x48,y0) - 3*v(x48,y1) - 3*v(x48,y2) - 3*v(x48,y3) - 3*v(x48,y4) - 3*v(x48,y5) - 3*v(x48,y6) - 3*v(x48,y7) - 3*v(x48,y8) - 3*v(x48,y9) - 3*v(x48,y10)
     
      - 3*v(x48,y11) - 3*v(x48,y12) - 3*v(x48,y13) - 3*v(x48,y14) - 3*v(x48,y15) - 3*v(x48,y16) - 3*v(x48,y17) - 3*v(x48,y18) - 3*v(x48,y19) - 3*v(x48,y20) - 3*v(x48,y21) - 3*v(x48,y22) - 3*v(x48,y23) - 3*v(x48,y24) - 3*v(x48,y25) - v(x48,y26)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:34 Page 11
Elastic-plastic torsion COPS 2.0 #15 (TORSION,SEQ=243)
Equation Listing    SOLVE torsion Using NLP From line 83


     defLL  =E=       
     
      - 2*v(x49,y0) - 3*v(x49,y1) - 3*v(x49,y2) - 3*v(x49,y3) - 3*v(x49,y4) - 3*v(x49,y5) - 3*v(x49,y6) - 3*v(x49,y7) - 3*v(x49,y8) - 3*v(x49,y9) - 3*v(x49,y10) - 3*v(x49,y11) - 3*v(x49,y12) - 3*v(x49,y13) - 3*v(x49,y14) - 3*v(x49,y15) - 3*v(x49,y16)
     
      - 3*v(x49,y17) - 3*v(x49,y18) - 3*v(x49,y19) - 3*v(x49,y20) - 3*v(x49,y21) - 3*v(x49,y22) - 3*v(x49,y23) - 3*v(x49,y24) - 3*v(x49,y25) - v(x49,y26) - 2*v(x50,y0) - 3*v(x50,y1) - 3*v(x50,y2) - 3*v(x50,y3) - 3*v(x50,y4) - 3*v(x50,y5) - 3*v(x50,y6)
     
      - 3*v(x50,y7) - 3*v(x50,y8) - 3*v(x50,y9) - 3*v(x50,y10) - 3*v(x50,y11) - 3*v(x50,y12) - 3*v(x50,y13) - 3*v(x50,y14) - 3*v(x50,y15) - 3*v(x50,y16) - 3*v(x50,y17) - 3*v(x50,y18) - 3*v(x50,y19) - 3*v(x50,y20) - 3*v(x50,y21) - 3*v(x50,y22)
     
      - 3*v(x50,y23) - 3*v(x50,y24) - 3*v(x50,y25) - v(x50,y26) - v(x51,y0) - v(x51,y1) - v(x51,y2) - v(x51,y3) - v(x51,y4) - v(x51,y5) - v(x51,y6) - v(x51,y7) - v(x51,y8) - v(x51,y9) - v(x51,y10) - v(x51,y11) - v(x51,y12) - v(x51,y13) - v(x51,y14)
     
      - v(x51,y15) - v(x51,y16) - v(x51,y17) - v(x51,y18) - v(x51,y19) - v(x51,y20) - v(x51,y21) - v(x51,y22) - v(x51,y23) - v(x51,y24) - v(x51,y25) + linLower =E= 0 ; (LHS = -661.764705882353, INFES = 661.764705882353 ****)
     

---- defLU  =E=  

defLU..  - v(x0,y1) - v(x0,y2) - v(x0,y3) - v(x0,y4) - v(x0,y5) - v(x0,y6) - v(x0,y7) - v(x0,y8) - v(x0,y9) - v(x0,y10) - v(x0,y11) - v(x0,y12) - v(x0,y13) - v(x0,y14) - v(x0,y15) - v(x0,y16) - v(x0,y17) - v(x0,y18) - v(x0,y19) - v(x0,y20) - v(x0,y21)
     
      - v(x0,y22) - v(x0,y23) - v(x0,y24) - v(x0,y25) - v(x0,y26) - v(x1,y0) - 3*v(x1,y1) - 3*v(x1,y2) - 3*v(x1,y3) - 3*v(x1,y4) - 3*v(x1,y5) - 3*v(x1,y6) - 3*v(x1,y7) - 3*v(x1,y8) - 3*v(x1,y9) - 3*v(x1,y10) - 3*v(x1,y11) - 3*v(x1,y12) - 3*v(x1,y13)
     
      - 3*v(x1,y14) - 3*v(x1,y15) - 3*v(x1,y16) - 3*v(x1,y17) - 3*v(x1,y18) - 3*v(x1,y19) - 3*v(x1,y20) - 3*v(x1,y21) - 3*v(x1,y22) - 3*v(x1,y23) - 3*v(x1,y24) - 3*v(x1,y25) - 2*v(x1,y26) - v(x2,y0) - 3*v(x2,y1) - 3*v(x2,y2) - 3*v(x2,y3) - 3*v(x2,y4)
     
      - 3*v(x2,y5) - 3*v(x2,y6) - 3*v(x2,y7) - 3*v(x2,y8) - 3*v(x2,y9) - 3*v(x2,y10) - 3*v(x2,y11) - 3*v(x2,y12) - 3*v(x2,y13) - 3*v(x2,y14) - 3*v(x2,y15) - 3*v(x2,y16) - 3*v(x2,y17) - 3*v(x2,y18) - 3*v(x2,y19) - 3*v(x2,y20) - 3*v(x2,y21) - 3*v(x2,y22)
     
      - 3*v(x2,y23) - 3*v(x2,y24) - 3*v(x2,y25) - 2*v(x2,y26) - v(x3,y0) - 3*v(x3,y1) - 3*v(x3,y2) - 3*v(x3,y3) - 3*v(x3,y4) - 3*v(x3,y5) - 3*v(x3,y6) - 3*v(x3,y7) - 3*v(x3,y8) - 3*v(x3,y9) - 3*v(x3,y10) - 3*v(x3,y11) - 3*v(x3,y12) - 3*v(x3,y13)
     
      - 3*v(x3,y14) - 3*v(x3,y15) - 3*v(x3,y16) - 3*v(x3,y17) - 3*v(x3,y18) - 3*v(x3,y19) - 3*v(x3,y20) - 3*v(x3,y21) - 3*v(x3,y22) - 3*v(x3,y23) - 3*v(x3,y24) - 3*v(x3,y25) - 2*v(x3,y26) - v(x4,y0) - 3*v(x4,y1) - 3*v(x4,y2) - 3*v(x4,y3) - 3*v(x4,y4)
     
      - 3*v(x4,y5) - 3*v(x4,y6) - 3*v(x4,y7) - 3*v(x4,y8) - 3*v(x4,y9) - 3*v(x4,y10) - 3*v(x4,y11) - 3*v(x4,y12) - 3*v(x4,y13) - 3*v(x4,y14) - 3*v(x4,y15) - 3*v(x4,y16) - 3*v(x4,y17) - 3*v(x4,y18) - 3*v(x4,y19) - 3*v(x4,y20) - 3*v(x4,y21) - 3*v(x4,y22)
     
      - 3*v(x4,y23) - 3*v(x4,y24) - 3*v(x4,y25) - 2*v(x4,y26) - v(x5,y0) - 3*v(x5,y1) - 3*v(x5,y2) - 3*v(x5,y3) - 3*v(x5,y4) - 3*v(x5,y5) - 3*v(x5,y6) - 3*v(x5,y7) - 3*v(x5,y8) - 3*v(x5,y9) - 3*v(x5,y10) - 3*v(x5,y11) - 3*v(x5,y12) - 3*v(x5,y13)
     
      - 3*v(x5,y14) - 3*v(x5,y15) - 3*v(x5,y16) - 3*v(x5,y17) - 3*v(x5,y18) - 3*v(x5,y19) - 3*v(x5,y20) - 3*v(x5,y21) - 3*v(x5,y22) - 3*v(x5,y23) - 3*v(x5,y24) - 3*v(x5,y25) - 2*v(x5,y26) - v(x6,y0) - 3*v(x6,y1) - 3*v(x6,y2) - 3*v(x6,y3) - 3*v(x6,y4)
     
      - 3*v(x6,y5) - 3*v(x6,y6) - 3*v(x6,y7) - 3*v(x6,y8) - 3*v(x6,y9) - 3*v(x6,y10) - 3*v(x6,y11) - 3*v(x6,y12) - 3*v(x6,y13) - 3*v(x6,y14) - 3*v(x6,y15) - 3*v(x6,y16) - 3*v(x6,y17) - 3*v(x6,y18) - 3*v(x6,y19) - 3*v(x6,y20) - 3*v(x6,y21) - 3*v(x6,y22)
     
      - 3*v(x6,y23) - 3*v(x6,y24) - 3*v(x6,y25) - 2*v(x6,y26) - v(x7,y0) - 3*v(x7,y1) - 3*v(x7,y2) - 3*v(x7,y3) - 3*v(x7,y4) - 3*v(x7,y5) - 3*v(x7,y6) - 3*v(x7,y7) - 3*v(x7,y8) - 3*v(x7,y9) - 3*v(x7,y10) - 3*v(x7,y11) - 3*v(x7,y12) - 3*v(x7,y13)
     
      - 3*v(x7,y14) - 3*v(x7,y15) - 3*v(x7,y16) - 3*v(x7,y17) - 3*v(x7,y18) - 3*v(x7,y19) - 3*v(x7,y20) - 3*v(x7,y21) - 3*v(x7,y22) - 3*v(x7,y23) - 3*v(x7,y24) - 3*v(x7,y25) - 2*v(x7,y26) - v(x8,y0) - 3*v(x8,y1) - 3*v(x8,y2) - 3*v(x8,y3) - 3*v(x8,y4)
     
      - 3*v(x8,y5) - 3*v(x8,y6) - 3*v(x8,y7) - 3*v(x8,y8) - 3*v(x8,y9) - 3*v(x8,y10) - 3*v(x8,y11) - 3*v(x8,y12) - 3*v(x8,y13) - 3*v(x8,y14) - 3*v(x8,y15) - 3*v(x8,y16) - 3*v(x8,y17) - 3*v(x8,y18) - 3*v(x8,y19) - 3*v(x8,y20) - 3*v(x8,y21) - 3*v(x8,y22)
     
      - 3*v(x8,y23) - 3*v(x8,y24) - 3*v(x8,y25) - 2*v(x8,y26) - v(x9,y0) - 3*v(x9,y1) - 3*v(x9,y2) - 3*v(x9,y3) - 3*v(x9,y4) - 3*v(x9,y5) - 3*v(x9,y6) - 3*v(x9,y7) - 3*v(x9,y8) - 3*v(x9,y9) - 3*v(x9,y10) - 3*v(x9,y11) - 3*v(x9,y12) - 3*v(x9,y13)
     
      - 3*v(x9,y14) - 3*v(x9,y15) - 3*v(x9,y16) - 3*v(x9,y17) - 3*v(x9,y18) - 3*v(x9,y19) - 3*v(x9,y20) - 3*v(x9,y21) - 3*v(x9,y22) - 3*v(x9,y23) - 3*v(x9,y24) - 3*v(x9,y25) - 2*v(x9,y26) - v(x10,y0) - 3*v(x10,y1) - 3*v(x10,y2) - 3*v(x10,y3) - 3*v(x10,y4)
     
      - 3*v(x10,y5) - 3*v(x10,y6) - 3*v(x10,y7) - 3*v(x10,y8) - 3*v(x10,y9) - 3*v(x10,y10) - 3*v(x10,y11) - 3*v(x10,y12) - 3*v(x10,y13) - 3*v(x10,y14) - 3*v(x10,y15) - 3*v(x10,y16) - 3*v(x10,y17) - 3*v(x10,y18) - 3*v(x10,y19) - 3*v(x10,y20) - 3*v(x10,y21)
     
      - 3*v(x10,y22) - 3*v(x10,y23) - 3*v(x10,y24) - 3*v(x10,y25) - 2*v(x10,y26) - v(x11,y0) - 3*v(x11,y1) - 3*v(x11,y2) - 3*v(x11,y3) - 3*v(x11,y4) - 3*v(x11,y5) - 3*v(x11,y6) - 3*v(x11,y7) - 3*v(x11,y8) - 3*v(x11,y9) - 3*v(x11,y10) - 3*v(x11,y11)
     
      - 3*v(x11,y12) - 3*v(x11,y13) - 3*v(x11,y14) - 3*v(x11,y15) - 3*v(x11,y16) - 3*v(x11,y17) - 3*v(x11,y18) - 3*v(x11,y19) - 3*v(x11,y20) - 3*v(x11,y21) - 3*v(x11,y22) - 3*v(x11,y23) - 3*v(x11,y24) - 3*v(x11,y25) - 2*v(x11,y26) - v(x12,y0)
     
      - 3*v(x12,y1) - 3*v(x12,y2) - 3*v(x12,y3) - 3*v(x12,y4) - 3*v(x12,y5) - 3*v(x12,y6) - 3*v(x12,y7) - 3*v(x12,y8) - 3*v(x12,y9) - 3*v(x12,y10) - 3*v(x12,y11) - 3*v(x12,y12) - 3*v(x12,y13) - 3*v(x12,y14) - 3*v(x12,y15) - 3*v(x12,y16) - 3*v(x12,y17)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:34 Page 12
Elastic-plastic torsion COPS 2.0 #15 (TORSION,SEQ=243)
Equation Listing    SOLVE torsion Using NLP From line 83


     defLU  =E=       
     
      - 3*v(x12,y18) - 3*v(x12,y19) - 3*v(x12,y20) - 3*v(x12,y21) - 3*v(x12,y22) - 3*v(x12,y23) - 3*v(x12,y24) - 3*v(x12,y25) - 2*v(x12,y26) - v(x13,y0) - 3*v(x13,y1) - 3*v(x13,y2) - 3*v(x13,y3) - 3*v(x13,y4) - 3*v(x13,y5) - 3*v(x13,y6) - 3*v(x13,y7)
     
      - 3*v(x13,y8) - 3*v(x13,y9) - 3*v(x13,y10) - 3*v(x13,y11) - 3*v(x13,y12) - 3*v(x13,y13) - 3*v(x13,y14) - 3*v(x13,y15) - 3*v(x13,y16) - 3*v(x13,y17) - 3*v(x13,y18) - 3*v(x13,y19) - 3*v(x13,y20) - 3*v(x13,y21) - 3*v(x13,y22) - 3*v(x13,y23)
     
      - 3*v(x13,y24) - 3*v(x13,y25) - 2*v(x13,y26) - v(x14,y0) - 3*v(x14,y1) - 3*v(x14,y2) - 3*v(x14,y3) - 3*v(x14,y4) - 3*v(x14,y5) - 3*v(x14,y6) - 3*v(x14,y7) - 3*v(x14,y8) - 3*v(x14,y9) - 3*v(x14,y10) - 3*v(x14,y11) - 3*v(x14,y12) - 3*v(x14,y13)
     
      - 3*v(x14,y14) - 3*v(x14,y15) - 3*v(x14,y16) - 3*v(x14,y17) - 3*v(x14,y18) - 3*v(x14,y19) - 3*v(x14,y20) - 3*v(x14,y21) - 3*v(x14,y22) - 3*v(x14,y23) - 3*v(x14,y24) - 3*v(x14,y25) - 2*v(x14,y26) - v(x15,y0) - 3*v(x15,y1) - 3*v(x15,y2) - 3*v(x15,y3)
     
      - 3*v(x15,y4) - 3*v(x15,y5) - 3*v(x15,y6) - 3*v(x15,y7) - 3*v(x15,y8) - 3*v(x15,y9) - 3*v(x15,y10) - 3*v(x15,y11) - 3*v(x15,y12) - 3*v(x15,y13) - 3*v(x15,y14) - 3*v(x15,y15) - 3*v(x15,y16) - 3*v(x15,y17) - 3*v(x15,y18) - 3*v(x15,y19) - 3*v(x15,y20)
     
      - 3*v(x15,y21) - 3*v(x15,y22) - 3*v(x15,y23) - 3*v(x15,y24) - 3*v(x15,y25) - 2*v(x15,y26) - v(x16,y0) - 3*v(x16,y1) - 3*v(x16,y2) - 3*v(x16,y3) - 3*v(x16,y4) - 3*v(x16,y5) - 3*v(x16,y6) - 3*v(x16,y7) - 3*v(x16,y8) - 3*v(x16,y9) - 3*v(x16,y10)
     
      - 3*v(x16,y11) - 3*v(x16,y12) - 3*v(x16,y13) - 3*v(x16,y14) - 3*v(x16,y15) - 3*v(x16,y16) - 3*v(x16,y17) - 3*v(x16,y18) - 3*v(x16,y19) - 3*v(x16,y20) - 3*v(x16,y21) - 3*v(x16,y22) - 3*v(x16,y23) - 3*v(x16,y24) - 3*v(x16,y25) - 2*v(x16,y26)
     
      - v(x17,y0) - 3*v(x17,y1) - 3*v(x17,y2) - 3*v(x17,y3) - 3*v(x17,y4) - 3*v(x17,y5) - 3*v(x17,y6) - 3*v(x17,y7) - 3*v(x17,y8) - 3*v(x17,y9) - 3*v(x17,y10) - 3*v(x17,y11) - 3*v(x17,y12) - 3*v(x17,y13) - 3*v(x17,y14) - 3*v(x17,y15) - 3*v(x17,y16)
     
      - 3*v(x17,y17) - 3*v(x17,y18) - 3*v(x17,y19) - 3*v(x17,y20) - 3*v(x17,y21) - 3*v(x17,y22) - 3*v(x17,y23) - 3*v(x17,y24) - 3*v(x17,y25) - 2*v(x17,y26) - v(x18,y0) - 3*v(x18,y1) - 3*v(x18,y2) - 3*v(x18,y3) - 3*v(x18,y4) - 3*v(x18,y5) - 3*v(x18,y6)
     
      - 3*v(x18,y7) - 3*v(x18,y8) - 3*v(x18,y9) - 3*v(x18,y10) - 3*v(x18,y11) - 3*v(x18,y12) - 3*v(x18,y13) - 3*v(x18,y14) - 3*v(x18,y15) - 3*v(x18,y16) - 3*v(x18,y17) - 3*v(x18,y18) - 3*v(x18,y19) - 3*v(x18,y20) - 3*v(x18,y21) - 3*v(x18,y22)
     
      - 3*v(x18,y23) - 3*v(x18,y24) - 3*v(x18,y25) - 2*v(x18,y26) - v(x19,y0) - 3*v(x19,y1) - 3*v(x19,y2) - 3*v(x19,y3) - 3*v(x19,y4) - 3*v(x19,y5) - 3*v(x19,y6) - 3*v(x19,y7) - 3*v(x19,y8) - 3*v(x19,y9) - 3*v(x19,y10) - 3*v(x19,y11) - 3*v(x19,y12)
     
      - 3*v(x19,y13) - 3*v(x19,y14) - 3*v(x19,y15) - 3*v(x19,y16) - 3*v(x19,y17) - 3*v(x19,y18) - 3*v(x19,y19) - 3*v(x19,y20) - 3*v(x19,y21) - 3*v(x19,y22) - 3*v(x19,y23) - 3*v(x19,y24) - 3*v(x19,y25) - 2*v(x19,y26) - v(x20,y0) - 3*v(x20,y1) - 3*v(x20,y2)
     
      - 3*v(x20,y3) - 3*v(x20,y4) - 3*v(x20,y5) - 3*v(x20,y6) - 3*v(x20,y7) - 3*v(x20,y8) - 3*v(x20,y9) - 3*v(x20,y10) - 3*v(x20,y11) - 3*v(x20,y12) - 3*v(x20,y13) - 3*v(x20,y14) - 3*v(x20,y15) - 3*v(x20,y16) - 3*v(x20,y17) - 3*v(x20,y18) - 3*v(x20,y19)
     
      - 3*v(x20,y20) - 3*v(x20,y21) - 3*v(x20,y22) - 3*v(x20,y23) - 3*v(x20,y24) - 3*v(x20,y25) - 2*v(x20,y26) - v(x21,y0) - 3*v(x21,y1) - 3*v(x21,y2) - 3*v(x21,y3) - 3*v(x21,y4) - 3*v(x21,y5) - 3*v(x21,y6) - 3*v(x21,y7) - 3*v(x21,y8) - 3*v(x21,y9)
     
      - 3*v(x21,y10) - 3*v(x21,y11) - 3*v(x21,y12) - 3*v(x21,y13) - 3*v(x21,y14) - 3*v(x21,y15) - 3*v(x21,y16) - 3*v(x21,y17) - 3*v(x21,y18) - 3*v(x21,y19) - 3*v(x21,y20) - 3*v(x21,y21) - 3*v(x21,y22) - 3*v(x21,y23) - 3*v(x21,y24) - 3*v(x21,y25)
     
      - 2*v(x21,y26) - v(x22,y0) - 3*v(x22,y1) - 3*v(x22,y2) - 3*v(x22,y3) - 3*v(x22,y4) - 3*v(x22,y5) - 3*v(x22,y6) - 3*v(x22,y7) - 3*v(x22,y8) - 3*v(x22,y9) - 3*v(x22,y10) - 3*v(x22,y11) - 3*v(x22,y12) - 3*v(x22,y13) - 3*v(x22,y14) - 3*v(x22,y15)
     
      - 3*v(x22,y16) - 3*v(x22,y17) - 3*v(x22,y18) - 3*v(x22,y19) - 3*v(x22,y20) - 3*v(x22,y21) - 3*v(x22,y22) - 3*v(x22,y23) - 3*v(x22,y24) - 3*v(x22,y25) - 2*v(x22,y26) - v(x23,y0) - 3*v(x23,y1) - 3*v(x23,y2) - 3*v(x23,y3) - 3*v(x23,y4) - 3*v(x23,y5)
     
      - 3*v(x23,y6) - 3*v(x23,y7) - 3*v(x23,y8) - 3*v(x23,y9) - 3*v(x23,y10) - 3*v(x23,y11) - 3*v(x23,y12) - 3*v(x23,y13) - 3*v(x23,y14) - 3*v(x23,y15) - 3*v(x23,y16) - 3*v(x23,y17) - 3*v(x23,y18) - 3*v(x23,y19) - 3*v(x23,y20) - 3*v(x23,y21)
     
      - 3*v(x23,y22) - 3*v(x23,y23) - 3*v(x23,y24) - 3*v(x23,y25) - 2*v(x23,y26) - v(x24,y0) - 3*v(x24,y1) - 3*v(x24,y2) - 3*v(x24,y3) - 3*v(x24,y4) - 3*v(x24,y5) - 3*v(x24,y6) - 3*v(x24,y7) - 3*v(x24,y8) - 3*v(x24,y9) - 3*v(x24,y10) - 3*v(x24,y11)
     
      - 3*v(x24,y12) - 3*v(x24,y13) - 3*v(x24,y14) - 3*v(x24,y15) - 3*v(x24,y16) - 3*v(x24,y17) - 3*v(x24,y18) - 3*v(x24,y19) - 3*v(x24,y20) - 3*v(x24,y21) - 3*v(x24,y22) - 3*v(x24,y23) - 3*v(x24,y24) - 3*v(x24,y25) - 2*v(x24,y26) - v(x25,y0)
     
      - 3*v(x25,y1) - 3*v(x25,y2) - 3*v(x25,y3) - 3*v(x25,y4) - 3*v(x25,y5) - 3*v(x25,y6) - 3*v(x25,y7) - 3*v(x25,y8) - 3*v(x25,y9) - 3*v(x25,y10) - 3*v(x25,y11) - 3*v(x25,y12) - 3*v(x25,y13) - 3*v(x25,y14) - 3*v(x25,y15) - 3*v(x25,y16) - 3*v(x25,y17)
     
      - 3*v(x25,y18) - 3*v(x25,y19) - 3*v(x25,y20) - 3*v(x25,y21) - 3*v(x25,y22) - 3*v(x25,y23) - 3*v(x25,y24) - 3*v(x25,y25) - 2*v(x25,y26) - v(x26,y0) - 3*v(x26,y1) - 3*v(x26,y2) - 3*v(x26,y3) - 3*v(x26,y4) - 3*v(x26,y5) - 3*v(x26,y6) - 3*v(x26,y7)
     
      - 3*v(x26,y8) - 3*v(x26,y9) - 3*v(x26,y10) - 3*v(x26,y11) - 3*v(x26,y12) - 3*v(x26,y13) - 3*v(x26,y14) - 3*v(x26,y15) - 3*v(x26,y16) - 3*v(x26,y17) - 3*v(x26,y18) - 3*v(x26,y19) - 3*v(x26,y20) - 3*v(x26,y21) - 3*v(x26,y22) - 3*v(x26,y23)
     
      - 3*v(x26,y24) - 3*v(x26,y25) - 2*v(x26,y26) - v(x27,y0) - 3*v(x27,y1) - 3*v(x27,y2) - 3*v(x27,y3) - 3*v(x27,y4) - 3*v(x27,y5) - 3*v(x27,y6) - 3*v(x27,y7) - 3*v(x27,y8) - 3*v(x27,y9) - 3*v(x27,y10) - 3*v(x27,y11) - 3*v(x27,y12) - 3*v(x27,y13)
     
      - 3*v(x27,y14) - 3*v(x27,y15) - 3*v(x27,y16) - 3*v(x27,y17) - 3*v(x27,y18) - 3*v(x27,y19) - 3*v(x27,y20) - 3*v(x27,y21) - 3*v(x27,y22) - 3*v(x27,y23) - 3*v(x27,y24) - 3*v(x27,y25) - 2*v(x27,y26) - v(x28,y0) - 3*v(x28,y1) - 3*v(x28,y2) - 3*v(x28,y3)
     
      - 3*v(x28,y4) - 3*v(x28,y5) - 3*v(x28,y6) - 3*v(x28,y7) - 3*v(x28,y8) - 3*v(x28,y9) - 3*v(x28,y10) - 3*v(x28,y11) - 3*v(x28,y12) - 3*v(x28,y13) - 3*v(x28,y14) - 3*v(x28,y15) - 3*v(x28,y16) - 3*v(x28,y17) - 3*v(x28,y18) - 3*v(x28,y19) - 3*v(x28,y20)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:34 Page 13
Elastic-plastic torsion COPS 2.0 #15 (TORSION,SEQ=243)
Equation Listing    SOLVE torsion Using NLP From line 83


     defLU  =E=       
     
      - 3*v(x28,y21) - 3*v(x28,y22) - 3*v(x28,y23) - 3*v(x28,y24) - 3*v(x28,y25) - 2*v(x28,y26) - v(x29,y0) - 3*v(x29,y1) - 3*v(x29,y2) - 3*v(x29,y3) - 3*v(x29,y4) - 3*v(x29,y5) - 3*v(x29,y6) - 3*v(x29,y7) - 3*v(x29,y8) - 3*v(x29,y9) - 3*v(x29,y10)
     
      - 3*v(x29,y11) - 3*v(x29,y12) - 3*v(x29,y13) - 3*v(x29,y14) - 3*v(x29,y15) - 3*v(x29,y16) - 3*v(x29,y17) - 3*v(x29,y18) - 3*v(x29,y19) - 3*v(x29,y20) - 3*v(x29,y21) - 3*v(x29,y22) - 3*v(x29,y23) - 3*v(x29,y24) - 3*v(x29,y25) - 2*v(x29,y26)
     
      - v(x30,y0) - 3*v(x30,y1) - 3*v(x30,y2) - 3*v(x30,y3) - 3*v(x30,y4) - 3*v(x30,y5) - 3*v(x30,y6) - 3*v(x30,y7) - 3*v(x30,y8) - 3*v(x30,y9) - 3*v(x30,y10) - 3*v(x30,y11) - 3*v(x30,y12) - 3*v(x30,y13) - 3*v(x30,y14) - 3*v(x30,y15) - 3*v(x30,y16)
     
      - 3*v(x30,y17) - 3*v(x30,y18) - 3*v(x30,y19) - 3*v(x30,y20) - 3*v(x30,y21) - 3*v(x30,y22) - 3*v(x30,y23) - 3*v(x30,y24) - 3*v(x30,y25) - 2*v(x30,y26) - v(x31,y0) - 3*v(x31,y1) - 3*v(x31,y2) - 3*v(x31,y3) - 3*v(x31,y4) - 3*v(x31,y5) - 3*v(x31,y6)
     
      - 3*v(x31,y7) - 3*v(x31,y8) - 3*v(x31,y9) - 3*v(x31,y10) - 3*v(x31,y11) - 3*v(x31,y12) - 3*v(x31,y13) - 3*v(x31,y14) - 3*v(x31,y15) - 3*v(x31,y16) - 3*v(x31,y17) - 3*v(x31,y18) - 3*v(x31,y19) - 3*v(x31,y20) - 3*v(x31,y21) - 3*v(x31,y22)
     
      - 3*v(x31,y23) - 3*v(x31,y24) - 3*v(x31,y25) - 2*v(x31,y26) - v(x32,y0) - 3*v(x32,y1) - 3*v(x32,y2) - 3*v(x32,y3) - 3*v(x32,y4) - 3*v(x32,y5) - 3*v(x32,y6) - 3*v(x32,y7) - 3*v(x32,y8) - 3*v(x32,y9) - 3*v(x32,y10) - 3*v(x32,y11) - 3*v(x32,y12)
     
      - 3*v(x32,y13) - 3*v(x32,y14) - 3*v(x32,y15) - 3*v(x32,y16) - 3*v(x32,y17) - 3*v(x32,y18) - 3*v(x32,y19) - 3*v(x32,y20) - 3*v(x32,y21) - 3*v(x32,y22) - 3*v(x32,y23) - 3*v(x32,y24) - 3*v(x32,y25) - 2*v(x32,y26) - v(x33,y0) - 3*v(x33,y1) - 3*v(x33,y2)
     
      - 3*v(x33,y3) - 3*v(x33,y4) - 3*v(x33,y5) - 3*v(x33,y6) - 3*v(x33,y7) - 3*v(x33,y8) - 3*v(x33,y9) - 3*v(x33,y10) - 3*v(x33,y11) - 3*v(x33,y12) - 3*v(x33,y13) - 3*v(x33,y14) - 3*v(x33,y15) - 3*v(x33,y16) - 3*v(x33,y17) - 3*v(x33,y18) - 3*v(x33,y19)
     
      - 3*v(x33,y20) - 3*v(x33,y21) - 3*v(x33,y22) - 3*v(x33,y23) - 3*v(x33,y24) - 3*v(x33,y25) - 2*v(x33,y26) - v(x34,y0) - 3*v(x34,y1) - 3*v(x34,y2) - 3*v(x34,y3) - 3*v(x34,y4) - 3*v(x34,y5) - 3*v(x34,y6) - 3*v(x34,y7) - 3*v(x34,y8) - 3*v(x34,y9)
     
      - 3*v(x34,y10) - 3*v(x34,y11) - 3*v(x34,y12) - 3*v(x34,y13) - 3*v(x34,y14) - 3*v(x34,y15) - 3*v(x34,y16) - 3*v(x34,y17) - 3*v(x34,y18) - 3*v(x34,y19) - 3*v(x34,y20) - 3*v(x34,y21) - 3*v(x34,y22) - 3*v(x34,y23) - 3*v(x34,y24) - 3*v(x34,y25)
     
      - 2*v(x34,y26) - v(x35,y0) - 3*v(x35,y1) - 3*v(x35,y2) - 3*v(x35,y3) - 3*v(x35,y4) - 3*v(x35,y5) - 3*v(x35,y6) - 3*v(x35,y7) - 3*v(x35,y8) - 3*v(x35,y9) - 3*v(x35,y10) - 3*v(x35,y11) - 3*v(x35,y12) - 3*v(x35,y13) - 3*v(x35,y14) - 3*v(x35,y15)
     
      - 3*v(x35,y16) - 3*v(x35,y17) - 3*v(x35,y18) - 3*v(x35,y19) - 3*v(x35,y20) - 3*v(x35,y21) - 3*v(x35,y22) - 3*v(x35,y23) - 3*v(x35,y24) - 3*v(x35,y25) - 2*v(x35,y26) - v(x36,y0) - 3*v(x36,y1) - 3*v(x36,y2) - 3*v(x36,y3) - 3*v(x36,y4) - 3*v(x36,y5)
     
      - 3*v(x36,y6) - 3*v(x36,y7) - 3*v(x36,y8) - 3*v(x36,y9) - 3*v(x36,y10) - 3*v(x36,y11) - 3*v(x36,y12) - 3*v(x36,y13) - 3*v(x36,y14) - 3*v(x36,y15) - 3*v(x36,y16) - 3*v(x36,y17) - 3*v(x36,y18) - 3*v(x36,y19) - 3*v(x36,y20) - 3*v(x36,y21)
     
      - 3*v(x36,y22) - 3*v(x36,y23) - 3*v(x36,y24) - 3*v(x36,y25) - 2*v(x36,y26) - v(x37,y0) - 3*v(x37,y1) - 3*v(x37,y2) - 3*v(x37,y3) - 3*v(x37,y4) - 3*v(x37,y5) - 3*v(x37,y6) - 3*v(x37,y7) - 3*v(x37,y8) - 3*v(x37,y9) - 3*v(x37,y10) - 3*v(x37,y11)
     
      - 3*v(x37,y12) - 3*v(x37,y13) - 3*v(x37,y14) - 3*v(x37,y15) - 3*v(x37,y16) - 3*v(x37,y17) - 3*v(x37,y18) - 3*v(x37,y19) - 3*v(x37,y20) - 3*v(x37,y21) - 3*v(x37,y22) - 3*v(x37,y23) - 3*v(x37,y24) - 3*v(x37,y25) - 2*v(x37,y26) - v(x38,y0)
     
      - 3*v(x38,y1) - 3*v(x38,y2) - 3*v(x38,y3) - 3*v(x38,y4) - 3*v(x38,y5) - 3*v(x38,y6) - 3*v(x38,y7) - 3*v(x38,y8) - 3*v(x38,y9) - 3*v(x38,y10) - 3*v(x38,y11) - 3*v(x38,y12) - 3*v(x38,y13) - 3*v(x38,y14) - 3*v(x38,y15) - 3*v(x38,y16) - 3*v(x38,y17)
     
      - 3*v(x38,y18) - 3*v(x38,y19) - 3*v(x38,y20) - 3*v(x38,y21) - 3*v(x38,y22) - 3*v(x38,y23) - 3*v(x38,y24) - 3*v(x38,y25) - 2*v(x38,y26) - v(x39,y0) - 3*v(x39,y1) - 3*v(x39,y2) - 3*v(x39,y3) - 3*v(x39,y4) - 3*v(x39,y5) - 3*v(x39,y6) - 3*v(x39,y7)
     
      - 3*v(x39,y8) - 3*v(x39,y9) - 3*v(x39,y10) - 3*v(x39,y11) - 3*v(x39,y12) - 3*v(x39,y13) - 3*v(x39,y14) - 3*v(x39,y15) - 3*v(x39,y16) - 3*v(x39,y17) - 3*v(x39,y18) - 3*v(x39,y19) - 3*v(x39,y20) - 3*v(x39,y21) - 3*v(x39,y22) - 3*v(x39,y23)
     
      - 3*v(x39,y24) - 3*v(x39,y25) - 2*v(x39,y26) - v(x40,y0) - 3*v(x40,y1) - 3*v(x40,y2) - 3*v(x40,y3) - 3*v(x40,y4) - 3*v(x40,y5) - 3*v(x40,y6) - 3*v(x40,y7) - 3*v(x40,y8) - 3*v(x40,y9) - 3*v(x40,y10) - 3*v(x40,y11) - 3*v(x40,y12) - 3*v(x40,y13)
     
      - 3*v(x40,y14) - 3*v(x40,y15) - 3*v(x40,y16) - 3*v(x40,y17) - 3*v(x40,y18) - 3*v(x40,y19) - 3*v(x40,y20) - 3*v(x40,y21) - 3*v(x40,y22) - 3*v(x40,y23) - 3*v(x40,y24) - 3*v(x40,y25) - 2*v(x40,y26) - v(x41,y0) - 3*v(x41,y1) - 3*v(x41,y2) - 3*v(x41,y3)
     
      - 3*v(x41,y4) - 3*v(x41,y5) - 3*v(x41,y6) - 3*v(x41,y7) - 3*v(x41,y8) - 3*v(x41,y9) - 3*v(x41,y10) - 3*v(x41,y11) - 3*v(x41,y12) - 3*v(x41,y13) - 3*v(x41,y14) - 3*v(x41,y15) - 3*v(x41,y16) - 3*v(x41,y17) - 3*v(x41,y18) - 3*v(x41,y19) - 3*v(x41,y20)
     
      - 3*v(x41,y21) - 3*v(x41,y22) - 3*v(x41,y23) - 3*v(x41,y24) - 3*v(x41,y25) - 2*v(x41,y26) - v(x42,y0) - 3*v(x42,y1) - 3*v(x42,y2) - 3*v(x42,y3) - 3*v(x42,y4) - 3*v(x42,y5) - 3*v(x42,y6) - 3*v(x42,y7) - 3*v(x42,y8) - 3*v(x42,y9) - 3*v(x42,y10)
     
      - 3*v(x42,y11) - 3*v(x42,y12) - 3*v(x42,y13) - 3*v(x42,y14) - 3*v(x42,y15) - 3*v(x42,y16) - 3*v(x42,y17) - 3*v(x42,y18) - 3*v(x42,y19) - 3*v(x42,y20) - 3*v(x42,y21) - 3*v(x42,y22) - 3*v(x42,y23) - 3*v(x42,y24) - 3*v(x42,y25) - 2*v(x42,y26)
     
      - v(x43,y0) - 3*v(x43,y1) - 3*v(x43,y2) - 3*v(x43,y3) - 3*v(x43,y4) - 3*v(x43,y5) - 3*v(x43,y6) - 3*v(x43,y7) - 3*v(x43,y8) - 3*v(x43,y9) - 3*v(x43,y10) - 3*v(x43,y11) - 3*v(x43,y12) - 3*v(x43,y13) - 3*v(x43,y14) - 3*v(x43,y15) - 3*v(x43,y16)
     
      - 3*v(x43,y17) - 3*v(x43,y18) - 3*v(x43,y19) - 3*v(x43,y20) - 3*v(x43,y21) - 3*v(x43,y22) - 3*v(x43,y23) - 3*v(x43,y24) - 3*v(x43,y25) - 2*v(x43,y26) - v(x44,y0) - 3*v(x44,y1) - 3*v(x44,y2) - 3*v(x44,y3) - 3*v(x44,y4) - 3*v(x44,y5) - 3*v(x44,y6)
     
      - 3*v(x44,y7) - 3*v(x44,y8) - 3*v(x44,y9) - 3*v(x44,y10) - 3*v(x44,y11) - 3*v(x44,y12) - 3*v(x44,y13) - 3*v(x44,y14) - 3*v(x44,y15) - 3*v(x44,y16) - 3*v(x44,y17) - 3*v(x44,y18) - 3*v(x44,y19) - 3*v(x44,y20) - 3*v(x44,y21) - 3*v(x44,y22)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:34 Page 14
Elastic-plastic torsion COPS 2.0 #15 (TORSION,SEQ=243)
Equation Listing    SOLVE torsion Using NLP From line 83


     defLU  =E=       
     
      - 3*v(x44,y23) - 3*v(x44,y24) - 3*v(x44,y25) - 2*v(x44,y26) - v(x45,y0) - 3*v(x45,y1) - 3*v(x45,y2) - 3*v(x45,y3) - 3*v(x45,y4) - 3*v(x45,y5) - 3*v(x45,y6) - 3*v(x45,y7) - 3*v(x45,y8) - 3*v(x45,y9) - 3*v(x45,y10) - 3*v(x45,y11) - 3*v(x45,y12)
     
      - 3*v(x45,y13) - 3*v(x45,y14) - 3*v(x45,y15) - 3*v(x45,y16) - 3*v(x45,y17) - 3*v(x45,y18) - 3*v(x45,y19) - 3*v(x45,y20) - 3*v(x45,y21) - 3*v(x45,y22) - 3*v(x45,y23) - 3*v(x45,y24) - 3*v(x45,y25) - 2*v(x45,y26) - v(x46,y0) - 3*v(x46,y1) - 3*v(x46,y2)
     
      - 3*v(x46,y3) - 3*v(x46,y4) - 3*v(x46,y5) - 3*v(x46,y6) - 3*v(x46,y7) - 3*v(x46,y8) - 3*v(x46,y9) - 3*v(x46,y10) - 3*v(x46,y11) - 3*v(x46,y12) - 3*v(x46,y13) - 3*v(x46,y14) - 3*v(x46,y15) - 3*v(x46,y16) - 3*v(x46,y17) - 3*v(x46,y18) - 3*v(x46,y19)
     
      - 3*v(x46,y20) - 3*v(x46,y21) - 3*v(x46,y22) - 3*v(x46,y23) - 3*v(x46,y24) - 3*v(x46,y25) - 2*v(x46,y26) - v(x47,y0) - 3*v(x47,y1) - 3*v(x47,y2) - 3*v(x47,y3) - 3*v(x47,y4) - 3*v(x47,y5) - 3*v(x47,y6) - 3*v(x47,y7) - 3*v(x47,y8) - 3*v(x47,y9)
     
      - 3*v(x47,y10) - 3*v(x47,y11) - 3*v(x47,y12) - 3*v(x47,y13) - 3*v(x47,y14) - 3*v(x47,y15) - 3*v(x47,y16) - 3*v(x47,y17) - 3*v(x47,y18) - 3*v(x47,y19) - 3*v(x47,y20) - 3*v(x47,y21) - 3*v(x47,y22) - 3*v(x47,y23) - 3*v(x47,y24) - 3*v(x47,y25)
     
      - 2*v(x47,y26) - v(x48,y0) - 3*v(x48,y1) - 3*v(x48,y2) - 3*v(x48,y3) - 3*v(x48,y4) - 3*v(x48,y5) - 3*v(x48,y6) - 3*v(x48,y7) - 3*v(x48,y8) - 3*v(x48,y9) - 3*v(x48,y10) - 3*v(x48,y11) - 3*v(x48,y12) - 3*v(x48,y13) - 3*v(x48,y14) - 3*v(x48,y15)
     
      - 3*v(x48,y16) - 3*v(x48,y17) - 3*v(x48,y18) - 3*v(x48,y19) - 3*v(x48,y20) - 3*v(x48,y21) - 3*v(x48,y22) - 3*v(x48,y23) - 3*v(x48,y24) - 3*v(x48,y25) - 2*v(x48,y26) - v(x49,y0) - 3*v(x49,y1) - 3*v(x49,y2) - 3*v(x49,y3) - 3*v(x49,y4) - 3*v(x49,y5)
     
      - 3*v(x49,y6) - 3*v(x49,y7) - 3*v(x49,y8) - 3*v(x49,y9) - 3*v(x49,y10) - 3*v(x49,y11) - 3*v(x49,y12) - 3*v(x49,y13) - 3*v(x49,y14) - 3*v(x49,y15) - 3*v(x49,y16) - 3*v(x49,y17) - 3*v(x49,y18) - 3*v(x49,y19) - 3*v(x49,y20) - 3*v(x49,y21)
     
      - 3*v(x49,y22) - 3*v(x49,y23) - 3*v(x49,y24) - 3*v(x49,y25) - 2*v(x49,y26) - v(x50,y0) - 3*v(x50,y1) - 3*v(x50,y2) - 3*v(x50,y3) - 3*v(x50,y4) - 3*v(x50,y5) - 3*v(x50,y6) - 3*v(x50,y7) - 3*v(x50,y8) - 3*v(x50,y9) - 3*v(x50,y10) - 3*v(x50,y11)
     
      - 3*v(x50,y12) - 3*v(x50,y13) - 3*v(x50,y14) - 3*v(x50,y15) - 3*v(x50,y16) - 3*v(x50,y17) - 3*v(x50,y18) - 3*v(x50,y19) - 3*v(x50,y20) - 3*v(x50,y21) - 3*v(x50,y22) - 3*v(x50,y23) - 3*v(x50,y24) - 3*v(x50,y25) - 2*v(x50,y26) - v(x51,y0)
     
      - 2*v(x51,y1) - 2*v(x51,y2) - 2*v(x51,y3) - 2*v(x51,y4) - 2*v(x51,y5) - 2*v(x51,y6) - 2*v(x51,y7) - 2*v(x51,y8) - 2*v(x51,y9) - 2*v(x51,y10) - 2*v(x51,y11) - 2*v(x51,y12) - 2*v(x51,y13) - 2*v(x51,y14) - 2*v(x51,y15) - 2*v(x51,y16) - 2*v(x51,y17)
     
      - 2*v(x51,y18) - 2*v(x51,y19) - 2*v(x51,y20) - 2*v(x51,y21) - 2*v(x51,y22) - 2*v(x51,y23) - 2*v(x51,y24) - 2*v(x51,y25) - v(x51,y26) + linUpper =E= 0 ; (LHS = -661.764705882353, INFES = 661.764705882353 ****)
     

---- defQL  =E=  

defQL..  (0)*v(x0,y0) + (102)*v(x0,y1) + (102)*v(x0,y2) + (102)*v(x0,y3) + (102)*v(x0,y4) + (102)*v(x0,y5) + (102)*v(x0,y6) + (102)*v(x0,y7) + (102)*v(x0,y8) + (102)*v(x0,y9) + (102)*v(x0,y10) + (102)*v(x0,y11) + (102)*v(x0,y12) + (102)*v(x0,y13)
     
      + (102)*v(x0,y14) + (102)*v(x0,y15) + (102)*v(x0,y16) + (102)*v(x0,y17) + (102)*v(x0,y18) + (102)*v(x0,y19) + (102)*v(x0,y20) + (102)*v(x0,y21) + (102)*v(x0,y22) + (102)*v(x0,y23) + (102)*v(x0,y24) + (102)*v(x0,y25) + (0)*v(x0,y26)
     
      + (26.5098039215686)*v(x1,y0) - (30.4328808446455)*v(x1,y1) + (0)*v(x1,y2) + (0)*v(x1,y3) + (0)*v(x1,y4) + (0)*v(x1,y5) + (0)*v(x1,y6) + (0)*v(x1,y7) + (0)*v(x1,y8) + (0)*v(x1,y9) + (0)*v(x1,y10) + (0)*v(x1,y11) + (0)*v(x1,y12) + (0)*v(x1,y13)
     
      + (0)*v(x1,y14) + (0)*v(x1,y15) + (0)*v(x1,y16) + (0)*v(x1,y17) + (0)*v(x1,y18) + (0)*v(x1,y19) + (0)*v(x1,y20) + (0)*v(x1,y21) + (0)*v(x1,y22) + (0)*v(x1,y23) + (0)*v(x1,y24) - (30.4328808446455)*v(x1,y25) + (26.5098039215686)*v(x1,y26)
     
      + (52)*v(x2,y0) - (149.057315233786)*v(x2,y1) - (1.01960784313725)*v(x2,y2) + (0)*v(x2,y3) + (0)*v(x2,y4) + (0)*v(x2,y5) + (0)*v(x2,y6) + (0)*v(x2,y7) + (0)*v(x2,y8) + (0)*v(x2,y9) + (0)*v(x2,y10) + (0)*v(x2,y11) + (0)*v(x2,y12) + (0)*v(x2,y13)
     
      + (0)*v(x2,y14) + (0)*v(x2,y15) + (0)*v(x2,y16) + (0)*v(x2,y17) + (0)*v(x2,y18) + (0)*v(x2,y19) + (0)*v(x2,y20) + (0)*v(x2,y21) + (0)*v(x2,y22) + (0)*v(x2,y23) - (1.01960784313725)*v(x2,y24) - (149.057315233786)*v(x2,y25) + (52)*v(x2,y26)
     
      + (52)*v(x3,y0) - (24.4705882352941)*v(x3,y1) - (35.3755656108597)*v(x3,y2) + (0)*v(x3,y3) + (0)*v(x3,y4) + (0)*v(x3,y5) + (0)*v(x3,y6) + (0)*v(x3,y7) + (0)*v(x3,y8) + (0)*v(x3,y9) + (0)*v(x3,y10) + (0)*v(x3,y11) + (0)*v(x3,y12) + (0)*v(x3,y13)
     
      + (0)*v(x3,y14) + (0)*v(x3,y15) + (0)*v(x3,y16) + (0)*v(x3,y17) + (0)*v(x3,y18) + (0)*v(x3,y19) + (0)*v(x3,y20) + (0)*v(x3,y21) + (0)*v(x3,y22) + (0)*v(x3,y23) - (35.3755656108597)*v(x3,y24) - (24.4705882352941)*v(x3,y25) + (52)*v(x3,y26)
     
      + (52)*v(x4,y0) + (0)*v(x4,y1) - (144.114630467572)*v(x4,y2) - (2.0392156862745)*v(x4,y3) + (0)*v(x4,y4) + (0)*v(x4,y5) + (0)*v(x4,y6) + (0)*v(x4,y7) + (0)*v(x4,y8) + (0)*v(x4,y9) + (0)*v(x4,y10) + (0)*v(x4,y11) + (0)*v(x4,y12) + (0)*v(x4,y13)
     
      + (0)*v(x4,y14) + (0)*v(x4,y15) + (0)*v(x4,y16) + (0)*v(x4,y17) + (0)*v(x4,y18) + (0)*v(x4,y19) + (0)*v(x4,y20) + (0)*v(x4,y21) + (0)*v(x4,y22) - (2.0392156862745)*v(x4,y23) - (144.114630467572)*v(x4,y24) + (0)*v(x4,y25) + (52)*v(x4,y26)
     
      + (52)*v(x5,y0) + (0)*v(x5,y1) - (23.4509803921569)*v(x5,y2) - (40.3182503770739)*v(x5,y3) + (0)*v(x5,y4) + (0)*v(x5,y5) + (0)*v(x5,y6) + (0)*v(x5,y7) + (0)*v(x5,y8) + (0)*v(x5,y9) + (0)*v(x5,y10) + (0)*v(x5,y11) + (0)*v(x5,y12) + (0)*v(x5,y13)
     
      + (0)*v(x5,y14) + (0)*v(x5,y15) + (0)*v(x5,y16) + (0)*v(x5,y17) + (0)*v(x5,y18) + (0)*v(x5,y19) + (0)*v(x5,y20) + (0)*v(x5,y21) + (0)*v(x5,y22) - (40.3182503770739)*v(x5,y23) - (23.4509803921569)*v(x5,y24) + (0)*v(x5,y25) + (52)*v(x5,y26)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:34 Page 15
Elastic-plastic torsion COPS 2.0 #15 (TORSION,SEQ=243)
Equation Listing    SOLVE torsion Using NLP From line 83


     defQL  =E=       
     
      + (52)*v(x6,y0) + (0)*v(x6,y1) + (0)*v(x6,y2) - (139.171945701358)*v(x6,y3) - (3.05882352941168)*v(x6,y4) + (7.105427357601E-14)*v(x6,y5) + (7.105427357601E-14)*v(x6,y6) + (7.105427357601E-14)*v(x6,y7) + (7.105427357601E-14)*v(x6,y8)
     
      + (7.105427357601E-14)*v(x6,y9) + (7.105427357601E-14)*v(x6,y10) + (7.105427357601E-14)*v(x6,y11) + (7.105427357601E-14)*v(x6,y12) + (7.105427357601E-14)*v(x6,y13) + (7.105427357601E-14)*v(x6,y14) + (7.105427357601E-14)*v(x6,y15)
     
      + (7.105427357601E-14)*v(x6,y16) + (7.105427357601E-14)*v(x6,y17) + (7.105427357601E-14)*v(x6,y18) + (7.105427357601E-14)*v(x6,y19) + (7.105427357601E-14)*v(x6,y20) + (7.105427357601E-14)*v(x6,y21) - (3.05882352941168)*v(x6,y22)
     
      - (139.171945701358)*v(x6,y23) + (0)*v(x6,y24) + (0)*v(x6,y25) + (52)*v(x6,y26) + (52)*v(x7,y0) + (0)*v(x7,y1) + (0)*v(x7,y2) - (22.4313725490196)*v(x7,y3) - (45.2609351432882)*v(x7,y4) - (1.4210854715202E-13)*v(x7,y5)
     
      - (1.4210854715202E-13)*v(x7,y6) - (1.4210854715202E-13)*v(x7,y7) - (1.4210854715202E-13)*v(x7,y8) - (1.4210854715202E-13)*v(x7,y9) - (1.4210854715202E-13)*v(x7,y10) - (1.4210854715202E-13)*v(x7,y11) - (1.4210854715202E-13)*v(x7,y12)
     
      - (1.4210854715202E-13)*v(x7,y13) - (1.4210854715202E-13)*v(x7,y14) - (1.4210854715202E-13)*v(x7,y15) - (1.4210854715202E-13)*v(x7,y16) - (1.4210854715202E-13)*v(x7,y17) - (1.4210854715202E-13)*v(x7,y18) - (1.4210854715202E-13)*v(x7,y19)
     
      - (1.4210854715202E-13)*v(x7,y20) - (1.4210854715202E-13)*v(x7,y21) - (45.2609351432882)*v(x7,y22) - (22.4313725490196)*v(x7,y23) + (0)*v(x7,y24) + (0)*v(x7,y25) + (52)*v(x7,y26) + (52)*v(x8,y0) + (0)*v(x8,y1) + (0)*v(x8,y2) + (0)*v(x8,y3)
     
      - (134.229260935143)*v(x8,y4) - (4.07843137254901)*v(x8,y5) + (0)*v(x8,y6) + (0)*v(x8,y7) + (0)*v(x8,y8) + (0)*v(x8,y9) + (0)*v(x8,y10) + (0)*v(x8,y11) + (0)*v(x8,y12) + (0)*v(x8,y13) + (0)*v(x8,y14) + (0)*v(x8,y15) + (0)*v(x8,y16) + (0)*v(x8,y17)
     
      + (0)*v(x8,y18) + (0)*v(x8,y19) + (0)*v(x8,y20) - (4.07843137254901)*v(x8,y21) - (134.229260935143)*v(x8,y22) + (0)*v(x8,y23) + (0)*v(x8,y24) + (0)*v(x8,y25) + (52)*v(x8,y26) + (52)*v(x9,y0) + (0)*v(x9,y1) + (0)*v(x9,y2) + (0)*v(x9,y3)
     
      - (21.4117647058824)*v(x9,y4) - (50.203619909502)*v(x9,y5) + (1.4210854715202E-13)*v(x9,y6) + (1.4210854715202E-13)*v(x9,y7) + (1.4210854715202E-13)*v(x9,y8) + (1.4210854715202E-13)*v(x9,y9) + (1.4210854715202E-13)*v(x9,y10)
     
      + (1.4210854715202E-13)*v(x9,y11) + (1.4210854715202E-13)*v(x9,y12) + (1.4210854715202E-13)*v(x9,y13) + (1.4210854715202E-13)*v(x9,y14) + (1.4210854715202E-13)*v(x9,y15) + (1.4210854715202E-13)*v(x9,y16) + (1.4210854715202E-13)*v(x9,y17)
     
      + (1.4210854715202E-13)*v(x9,y18) + (1.4210854715202E-13)*v(x9,y19) + (1.4210854715202E-13)*v(x9,y20) - (50.203619909502)*v(x9,y21) - (21.4117647058824)*v(x9,y22) + (0)*v(x9,y23) + (0)*v(x9,y24) + (0)*v(x9,y25) + (52)*v(x9,y26) + (52)*v(x10,y0)
     
      + (0)*v(x10,y1) + (0)*v(x10,y2) + (0)*v(x10,y3) + (0)*v(x10,y4) - (129.286576168929)*v(x10,y5) - (5.09803921568626)*v(x10,y6) + (0)*v(x10,y7) + (0)*v(x10,y8) + (0)*v(x10,y9) + (0)*v(x10,y10) + (0)*v(x10,y11) + (0)*v(x10,y12) + (0)*v(x10,y13)
     
      + (0)*v(x10,y14) + (0)*v(x10,y15) + (0)*v(x10,y16) + (0)*v(x10,y17) + (0)*v(x10,y18) + (0)*v(x10,y19) - (5.09803921568626)*v(x10,y20) - (129.286576168929)*v(x10,y21) + (0)*v(x10,y22) + (0)*v(x10,y23) + (0)*v(x10,y24) + (0)*v(x10,y25)
     
      + (52)*v(x10,y26) + (52)*v(x11,y0) + (0)*v(x11,y1) + (0)*v(x11,y2) + (0)*v(x11,y3) + (0)*v(x11,y4) - (20.3921568627451)*v(x11,y5) - (55.1463046757165)*v(x11,y6) - (1.4210854715202E-13)*v(x11,y7) - (1.4210854715202E-13)*v(x11,y8)
     
      - (1.4210854715202E-13)*v(x11,y9) - (1.4210854715202E-13)*v(x11,y10) - (1.4210854715202E-13)*v(x11,y11) - (1.4210854715202E-13)*v(x11,y12) - (1.4210854715202E-13)*v(x11,y13) - (1.4210854715202E-13)*v(x11,y14) - (1.4210854715202E-13)*v(x11,y15)
     
      - (1.4210854715202E-13)*v(x11,y16) - (1.4210854715202E-13)*v(x11,y17) - (1.4210854715202E-13)*v(x11,y18) - (1.4210854715202E-13)*v(x11,y19) - (55.1463046757165)*v(x11,y20) - (20.3921568627451)*v(x11,y21) + (0)*v(x11,y22) + (0)*v(x11,y23)
     
      + (0)*v(x11,y24) + (0)*v(x11,y25) + (52)*v(x11,y26) + (52)*v(x12,y0) + (0)*v(x12,y1) + (0)*v(x12,y2) + (0)*v(x12,y3) + (0)*v(x12,y4) + (0)*v(x12,y5) - (124.343891402715)*v(x12,y6) - (6.11764705882351)*v(x12,y7) + (0)*v(x12,y8) + (0)*v(x12,y9)
     
      + (0)*v(x12,y10) + (0)*v(x12,y11) + (0)*v(x12,y12) + (0)*v(x12,y13) + (0)*v(x12,y14) + (0)*v(x12,y15) + (0)*v(x12,y16) + (0)*v(x12,y17) + (0)*v(x12,y18) - (6.11764705882351)*v(x12,y19) - (124.343891402715)*v(x12,y20) + (0)*v(x12,y21)
     
      + (0)*v(x12,y22) + (0)*v(x12,y23) + (0)*v(x12,y24) + (0)*v(x12,y25) + (52)*v(x12,y26) + (52)*v(x13,y0) + (0)*v(x13,y1) + (0)*v(x13,y2) + (0)*v(x13,y3) + (0)*v(x13,y4) + (0)*v(x13,y5) - (19.3725490196079)*v(x13,y6) - (60.0889894419302)*v(x13,y7)
     
      + (2.98427949019242E-13)*v(x13,y8) + (2.98427949019242E-13)*v(x13,y9) + (2.98427949019242E-13)*v(x13,y10) + (2.98427949019242E-13)*v(x13,y11) + (2.98427949019242E-13)*v(x13,y12) + (2.98427949019242E-13)*v(x13,y13) + (2.98427949019242E-13)*v(x13,y14)
     
      + (2.98427949019242E-13)*v(x13,y15) + (2.98427949019242E-13)*v(x13,y16) + (2.98427949019242E-13)*v(x13,y17) + (2.98427949019242E-13)*v(x13,y18) - (60.0889894419302)*v(x13,y19) - (19.3725490196079)*v(x13,y20) + (0)*v(x13,y21) + (0)*v(x13,y22)
     
      + (0)*v(x13,y23) + (0)*v(x13,y24) + (0)*v(x13,y25) + (52)*v(x13,y26) + (52)*v(x14,y0) + (0)*v(x14,y1) + (0)*v(x14,y2) + (0)*v(x14,y3) + (0)*v(x14,y4) + (0)*v(x14,y5) + (4.2632564145606E-14)*v(x14,y6) - (119.401206636501)*v(x14,y7)
     
      - (7.13725490196106)*v(x14,y8) - (2.98427949019242E-13)*v(x14,y9) - (2.98427949019242E-13)*v(x14,y10) - (2.98427949019242E-13)*v(x14,y11) - (2.98427949019242E-13)*v(x14,y12) - (2.98427949019242E-13)*v(x14,y13) - (2.98427949019242E-13)*v(x14,y14)
     
      - (2.98427949019242E-13)*v(x14,y15) - (2.98427949019242E-13)*v(x14,y16) - (2.98427949019242E-13)*v(x14,y17) - (7.13725490196106)*v(x14,y18) - (119.401206636501)*v(x14,y19) + (4.2632564145606E-14)*v(x14,y20) + (0)*v(x14,y21) + (0)*v(x14,y22)
     
      + (0)*v(x14,y23) + (0)*v(x14,y24) + (0)*v(x14,y25) + (52)*v(x14,y26) + (52)*v(x15,y0) + (0)*v(x15,y1) + (0)*v(x15,y2) + (0)*v(x15,y3) + (0)*v(x15,y4) + (0)*v(x15,y5) + (4.2632564145606E-14)*v(x15,y6) - (18.3529411764707)*v(x15,y7)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:34 Page 16
Elastic-plastic torsion COPS 2.0 #15 (TORSION,SEQ=243)
Equation Listing    SOLVE torsion Using NLP From line 83


     defQL  =E=       
     
      - (65.0316742081447)*v(x15,y8) + (0)*v(x15,y9) + (0)*v(x15,y10) + (0)*v(x15,y11) + (0)*v(x15,y12) + (0)*v(x15,y13) + (0)*v(x15,y14) + (0)*v(x15,y15) + (0)*v(x15,y16) + (0)*v(x15,y17) - (65.0316742081446)*v(x15,y18) - (18.3529411764707)*v(x15,y19)
     
      + (4.2632564145606E-14)*v(x15,y20) + (0)*v(x15,y21) + (0)*v(x15,y22) + (0)*v(x15,y23) + (0)*v(x15,y24) + (0)*v(x15,y25) + (52)*v(x15,y26) + (52)*v(x16,y0) + (0)*v(x16,y1) + (0)*v(x16,y2) + (0)*v(x16,y3) + (0)*v(x16,y4) + (0)*v(x16,y5)
     
      + (4.2632564145606E-14)*v(x16,y6) - (7.8159700933611E-14)*v(x16,y7) - (114.458521870287)*v(x16,y8) - (8.15686274509801)*v(x16,y9) + (0)*v(x16,y10) + (0)*v(x16,y11) + (0)*v(x16,y12) + (0)*v(x16,y13) + (0)*v(x16,y14) + (0)*v(x16,y15) + (0)*v(x16,y16)
     
      - (8.15686274509801)*v(x16,y17) - (114.458521870287)*v(x16,y18) - (7.8159700933611E-14)*v(x16,y19) + (4.2632564145606E-14)*v(x16,y20) + (0)*v(x16,y21) + (0)*v(x16,y22) + (0)*v(x16,y23) + (0)*v(x16,y24) + (0)*v(x16,y25) + (52)*v(x16,y26)
     
      + (52)*v(x17,y0) + (0)*v(x17,y1) + (0)*v(x17,y2) + (0)*v(x17,y3) + (0)*v(x17,y4) + (0)*v(x17,y5) + (4.2632564145606E-14)*v(x17,y6) - (7.8159700933611E-14)*v(x17,y7) - (17.3333333333333)*v(x17,y8) - (69.9743589743588)*v(x17,y9) + (0)*v(x17,y10)
     
      + (0)*v(x17,y11) + (0)*v(x17,y12) + (0)*v(x17,y13) + (0)*v(x17,y14) + (0)*v(x17,y15) + (0)*v(x17,y16) - (69.9743589743588)*v(x17,y17) - (17.3333333333333)*v(x17,y18) - (7.8159700933611E-14)*v(x17,y19) + (4.2632564145606E-14)*v(x17,y20)
     
      + (0)*v(x17,y21) + (0)*v(x17,y22) + (0)*v(x17,y23) + (0)*v(x17,y24) + (0)*v(x17,y25) + (52)*v(x17,y26) + (52)*v(x18,y0) + (0)*v(x18,y1) + (0)*v(x18,y2) + (0)*v(x18,y3) + (0)*v(x18,y4) + (0)*v(x18,y5) + (4.2632564145606E-14)*v(x18,y6)
     
      - (7.8159700933611E-14)*v(x18,y7) + (0)*v(x18,y8) - (109.515837104072)*v(x18,y9) - (9.17647058823496)*v(x18,y10) + (2.98427949019242E-13)*v(x18,y11) + (2.98427949019242E-13)*v(x18,y12) + (2.98427949019242E-13)*v(x18,y13)
     
      + (2.98427949019242E-13)*v(x18,y14) + (2.98427949019242E-13)*v(x18,y15) - (9.17647058823496)*v(x18,y16) - (109.515837104072)*v(x18,y17) + (0)*v(x18,y18) - (7.8159700933611E-14)*v(x18,y19) + (4.2632564145606E-14)*v(x18,y20) + (0)*v(x18,y21)
     
      + (0)*v(x18,y22) + (0)*v(x18,y23) + (0)*v(x18,y24) + (0)*v(x18,y25) + (52)*v(x18,y26) + (52)*v(x19,y0) + (0)*v(x19,y1) + (0)*v(x19,y2) + (0)*v(x19,y3) + (0)*v(x19,y4) + (0)*v(x19,y5) + (4.2632564145606E-14)*v(x19,y6)
     
      - (7.8159700933611E-14)*v(x19,y7) + (0)*v(x19,y8) - (16.313725490196)*v(x19,y9) - (74.9170437405733)*v(x19,y10) - (2.98427949019242E-13)*v(x19,y11) - (2.98427949019242E-13)*v(x19,y12) - (2.98427949019242E-13)*v(x19,y13)
     
      - (2.98427949019242E-13)*v(x19,y14) - (2.98427949019242E-13)*v(x19,y15) - (74.9170437405733)*v(x19,y16) - (16.313725490196)*v(x19,y17) + (0)*v(x19,y18) - (7.8159700933611E-14)*v(x19,y19) + (4.2632564145606E-14)*v(x19,y20) + (0)*v(x19,y21)
     
      + (0)*v(x19,y22) + (0)*v(x19,y23) + (0)*v(x19,y24) + (0)*v(x19,y25) + (52)*v(x19,y26) + (52)*v(x20,y0) + (0)*v(x20,y1) + (0)*v(x20,y2) + (0)*v(x20,y3) + (0)*v(x20,y4) + (0)*v(x20,y5) + (4.2632564145606E-14)*v(x20,y6)
     
      - (7.8159700933611E-14)*v(x20,y7) + (0)*v(x20,y8) + (7.8159700933611E-14)*v(x20,y9) - (104.573152337858)*v(x20,y10) - (10.1960784313725)*v(x20,y11) + (0)*v(x20,y12) + (0)*v(x20,y13) + (0)*v(x20,y14) - (10.1960784313725)*v(x20,y15)
     
      - (104.573152337858)*v(x20,y16) + (7.8159700933611E-14)*v(x20,y17) + (0)*v(x20,y18) - (7.8159700933611E-14)*v(x20,y19) + (4.2632564145606E-14)*v(x20,y20) + (0)*v(x20,y21) + (0)*v(x20,y22) + (0)*v(x20,y23) + (0)*v(x20,y24) + (0)*v(x20,y25)
     
      + (52)*v(x20,y26) + (52)*v(x21,y0) + (0)*v(x21,y1) + (0)*v(x21,y2) + (0)*v(x21,y3) + (0)*v(x21,y4) + (0)*v(x21,y5) + (4.2632564145606E-14)*v(x21,y6) - (7.8159700933611E-14)*v(x21,y7) + (0)*v(x21,y8) + (7.8159700933611E-14)*v(x21,y9)
     
      - (15.2941176470589)*v(x21,y10) - (79.8597285067868)*v(x21,y11) + (2.98427949019242E-13)*v(x21,y12) + (2.98427949019242E-13)*v(x21,y13) + (2.98427949019242E-13)*v(x21,y14) - (79.8597285067868)*v(x21,y15) - (15.2941176470589)*v(x21,y16)
     
      + (7.8159700933611E-14)*v(x21,y17) + (0)*v(x21,y18) - (7.8159700933611E-14)*v(x21,y19) + (4.2632564145606E-14)*v(x21,y20) + (0)*v(x21,y21) + (0)*v(x21,y22) + (0)*v(x21,y23) + (0)*v(x21,y24) + (0)*v(x21,y25) + (52)*v(x21,y26) + (52)*v(x22,y0)
     
      + (0)*v(x22,y1) + (0)*v(x22,y2) + (0)*v(x22,y3) + (0)*v(x22,y4) + (0)*v(x22,y5) + (4.2632564145606E-14)*v(x22,y6) - (7.8159700933611E-14)*v(x22,y7) + (0)*v(x22,y8) + (7.8159700933611E-14)*v(x22,y9) + (0)*v(x22,y10) - (99.6304675716445)*v(x22,y11)
     
      - (11.2156862745101)*v(x22,y12) - (2.98427949019242E-13)*v(x22,y13) - (11.2156862745101)*v(x22,y14) - (99.6304675716445)*v(x22,y15) + (0)*v(x22,y16) + (7.8159700933611E-14)*v(x22,y17) + (0)*v(x22,y18) - (7.8159700933611E-14)*v(x22,y19)
     
      + (4.2632564145606E-14)*v(x22,y20) + (0)*v(x22,y21) + (0)*v(x22,y22) + (0)*v(x22,y23) + (0)*v(x22,y24) + (0)*v(x22,y25) + (52)*v(x22,y26) + (52)*v(x23,y0) + (0)*v(x23,y1) + (0)*v(x23,y2) + (0)*v(x23,y3) + (0)*v(x23,y4) + (0)*v(x23,y5)
     
      + (4.2632564145606E-14)*v(x23,y6) - (7.8159700933611E-14)*v(x23,y7) + (0)*v(x23,y8) + (7.8159700933611E-14)*v(x23,y9) + (0)*v(x23,y10) - (14.2745098039217)*v(x23,y11) - (84.8024132730013)*v(x23,y12) + (0)*v(x23,y13) - (84.8024132730013)*v(x23,y14)
     
      - (14.2745098039217)*v(x23,y15) + (0)*v(x23,y16) + (7.8159700933611E-14)*v(x23,y17) + (0)*v(x23,y18) - (7.8159700933611E-14)*v(x23,y19) + (4.2632564145606E-14)*v(x23,y20) + (0)*v(x23,y21) + (0)*v(x23,y22) + (0)*v(x23,y23) + (0)*v(x23,y24)
     
      + (0)*v(x23,y25) + (52)*v(x23,y26) + (52)*v(x24,y0) + (0)*v(x24,y1) + (0)*v(x24,y2) + (0)*v(x24,y3) + (0)*v(x24,y4) + (0)*v(x24,y5) + (4.2632564145606E-14)*v(x24,y6) - (7.8159700933611E-14)*v(x24,y7) + (0)*v(x24,y8) + (7.8159700933611E-14)*v(x24,y9)
     
      + (0)*v(x24,y10) - (7.8159700933611E-14)*v(x24,y11) - (94.68778280543)*v(x24,y12) - (24.470588235294)*v(x24,y13) - (94.68778280543)*v(x24,y14) - (7.8159700933611E-14)*v(x24,y15) + (0)*v(x24,y16) + (7.8159700933611E-14)*v(x24,y17) + (0)*v(x24,y18)
     
      - (7.8159700933611E-14)*v(x24,y19) + (4.2632564145606E-14)*v(x24,y20) + (0)*v(x24,y21) + (0)*v(x24,y22) + (0)*v(x24,y23) + (0)*v(x24,y24) + (0)*v(x24,y25) + (52)*v(x24,y26) + (52)*v(x25,y0) + (0)*v(x25,y1) + (0)*v(x25,y2) + (0)*v(x25,y3)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:34 Page 17
Elastic-plastic torsion COPS 2.0 #15 (TORSION,SEQ=243)
Equation Listing    SOLVE torsion Using NLP From line 83


     defQL  =E=       
     
      + (0)*v(x25,y4) + (0)*v(x25,y5) + (4.2632564145606E-14)*v(x25,y6) - (7.8159700933611E-14)*v(x25,y7) + (0)*v(x25,y8) + (7.8159700933611E-14)*v(x25,y9) + (0)*v(x25,y10) - (7.8159700933611E-14)*v(x25,y11) - (13.2549019607843)*v(x25,y12)
     
      - (179.490196078431)*v(x25,y13) - (13.2549019607843)*v(x25,y14) - (7.8159700933611E-14)*v(x25,y15) + (0)*v(x25,y16) + (7.8159700933611E-14)*v(x25,y17) + (0)*v(x25,y18) - (7.8159700933611E-14)*v(x25,y19) + (4.2632564145606E-14)*v(x25,y20)
     
      + (0)*v(x25,y21) + (0)*v(x25,y22) + (0)*v(x25,y23) + (0)*v(x25,y24) + (0)*v(x25,y25) + (52)*v(x25,y26) + (52)*v(x26,y0) + (0)*v(x26,y1) + (0)*v(x26,y2) + (0)*v(x26,y3) + (0)*v(x26,y4) + (0)*v(x26,y5) + (4.2632564145606E-14)*v(x26,y6)
     
      - (7.8159700933611E-14)*v(x26,y7) + (0)*v(x26,y8) + (7.8159700933611E-14)*v(x26,y9) + (0)*v(x26,y10) - (7.8159700933611E-14)*v(x26,y11) - (13.2549019607843)*v(x26,y12) - (179.490196078431)*v(x26,y13) - (13.2549019607843)*v(x26,y14)
     
      - (7.8159700933611E-14)*v(x26,y15) + (0)*v(x26,y16) + (7.8159700933611E-14)*v(x26,y17) + (0)*v(x26,y18) - (7.8159700933611E-14)*v(x26,y19) + (4.2632564145606E-14)*v(x26,y20) + (0)*v(x26,y21) + (0)*v(x26,y22) + (0)*v(x26,y23) + (0)*v(x26,y24)
     
      + (0)*v(x26,y25) + (52)*v(x26,y26) + (52)*v(x27,y0) + (0)*v(x27,y1) + (0)*v(x27,y2) + (0)*v(x27,y3) + (0)*v(x27,y4) + (0)*v(x27,y5) + (4.2632564145606E-14)*v(x27,y6) - (7.8159700933611E-14)*v(x27,y7) + (0)*v(x27,y8) + (7.8159700933611E-14)*v(x27,y9)
     
      + (0)*v(x27,y10) - (7.8159700933611E-14)*v(x27,y11) - (94.68778280543)*v(x27,y12) - (24.470588235294)*v(x27,y13) - (94.68778280543)*v(x27,y14) - (7.8159700933611E-14)*v(x27,y15) + (0)*v(x27,y16) + (7.8159700933611E-14)*v(x27,y17) + (0)*v(x27,y18)
     
      - (7.8159700933611E-14)*v(x27,y19) + (4.2632564145606E-14)*v(x27,y20) + (0)*v(x27,y21) + (0)*v(x27,y22) + (0)*v(x27,y23) + (0)*v(x27,y24) + (0)*v(x27,y25) + (52)*v(x27,y26) + (52)*v(x28,y0) + (0)*v(x28,y1) + (0)*v(x28,y2) + (0)*v(x28,y3)
     
      + (0)*v(x28,y4) + (0)*v(x28,y5) + (4.2632564145606E-14)*v(x28,y6) - (7.8159700933611E-14)*v(x28,y7) + (0)*v(x28,y8) + (7.8159700933611E-14)*v(x28,y9) + (0)*v(x28,y10) - (14.2745098039217)*v(x28,y11) - (84.8024132730013)*v(x28,y12) + (0)*v(x28,y13)
     
      - (84.8024132730013)*v(x28,y14) - (14.2745098039217)*v(x28,y15) + (0)*v(x28,y16) + (7.8159700933611E-14)*v(x28,y17) + (0)*v(x28,y18) - (7.8159700933611E-14)*v(x28,y19) + (4.2632564145606E-14)*v(x28,y20) + (0)*v(x28,y21) + (0)*v(x28,y22)
     
      + (0)*v(x28,y23) + (0)*v(x28,y24) + (0)*v(x28,y25) + (52)*v(x28,y26) + (52)*v(x29,y0) + (0)*v(x29,y1) + (0)*v(x29,y2) + (0)*v(x29,y3) + (0)*v(x29,y4) + (0)*v(x29,y5) + (4.2632564145606E-14)*v(x29,y6) - (7.8159700933611E-14)*v(x29,y7) + (0)*v(x29,y8)
     
      + (7.8159700933611E-14)*v(x29,y9) + (0)*v(x29,y10) - (99.6304675716445)*v(x29,y11) - (11.2156862745101)*v(x29,y12) - (2.98427949019242E-13)*v(x29,y13) - (11.2156862745101)*v(x29,y14) - (99.6304675716445)*v(x29,y15) + (0)*v(x29,y16)
     
      + (7.8159700933611E-14)*v(x29,y17) + (0)*v(x29,y18) - (7.8159700933611E-14)*v(x29,y19) + (4.2632564145606E-14)*v(x29,y20) + (0)*v(x29,y21) + (0)*v(x29,y22) + (0)*v(x29,y23) + (0)*v(x29,y24) + (0)*v(x29,y25) + (52)*v(x29,y26) + (52)*v(x30,y0)
     
      + (0)*v(x30,y1) + (0)*v(x30,y2) + (0)*v(x30,y3) + (0)*v(x30,y4) + (0)*v(x30,y5) + (4.2632564145606E-14)*v(x30,y6) - (7.8159700933611E-14)*v(x30,y7) + (0)*v(x30,y8) + (7.8159700933611E-14)*v(x30,y9) - (15.2941176470589)*v(x30,y10)
     
      - (79.8597285067868)*v(x30,y11) + (2.98427949019242E-13)*v(x30,y12) + (2.98427949019242E-13)*v(x30,y13) + (2.98427949019242E-13)*v(x30,y14) - (79.8597285067868)*v(x30,y15) - (15.2941176470589)*v(x30,y16) + (7.8159700933611E-14)*v(x30,y17)
     
      + (0)*v(x30,y18) - (7.8159700933611E-14)*v(x30,y19) + (4.2632564145606E-14)*v(x30,y20) + (0)*v(x30,y21) + (0)*v(x30,y22) + (0)*v(x30,y23) + (0)*v(x30,y24) + (0)*v(x30,y25) + (52)*v(x30,y26) + (52)*v(x31,y0) + (0)*v(x31,y1) + (0)*v(x31,y2)
     
      + (0)*v(x31,y3) + (0)*v(x31,y4) + (0)*v(x31,y5) + (4.2632564145606E-14)*v(x31,y6) - (7.8159700933611E-14)*v(x31,y7) + (0)*v(x31,y8) + (7.8159700933611E-14)*v(x31,y9) - (104.573152337858)*v(x31,y10) - (10.1960784313725)*v(x31,y11) + (0)*v(x31,y12)
     
      + (0)*v(x31,y13) + (0)*v(x31,y14) - (10.1960784313725)*v(x31,y15) - (104.573152337858)*v(x31,y16) + (7.8159700933611E-14)*v(x31,y17) + (0)*v(x31,y18) - (7.8159700933611E-14)*v(x31,y19) + (4.2632564145606E-14)*v(x31,y20) + (0)*v(x31,y21)
     
      + (0)*v(x31,y22) + (0)*v(x31,y23) + (0)*v(x31,y24) + (0)*v(x31,y25) + (52)*v(x31,y26) + (52)*v(x32,y0) + (0)*v(x32,y1) + (0)*v(x32,y2) + (0)*v(x32,y3) + (0)*v(x32,y4) + (0)*v(x32,y5) + (4.2632564145606E-14)*v(x32,y6)
     
      - (7.8159700933611E-14)*v(x32,y7) + (0)*v(x32,y8) - (16.313725490196)*v(x32,y9) - (74.9170437405733)*v(x32,y10) - (2.98427949019242E-13)*v(x32,y11) - (2.98427949019242E-13)*v(x32,y12) - (2.98427949019242E-13)*v(x32,y13)
     
      - (2.98427949019242E-13)*v(x32,y14) - (2.98427949019242E-13)*v(x32,y15) - (74.9170437405733)*v(x32,y16) - (16.313725490196)*v(x32,y17) + (0)*v(x32,y18) - (7.8159700933611E-14)*v(x32,y19) + (4.2632564145606E-14)*v(x32,y20) + (0)*v(x32,y21)
     
      + (0)*v(x32,y22) + (0)*v(x32,y23) + (0)*v(x32,y24) + (0)*v(x32,y25) + (52)*v(x32,y26) + (52)*v(x33,y0) + (0)*v(x33,y1) + (0)*v(x33,y2) + (0)*v(x33,y3) + (0)*v(x33,y4) + (0)*v(x33,y5) + (4.2632564145606E-14)*v(x33,y6)
     
      - (7.8159700933611E-14)*v(x33,y7) + (0)*v(x33,y8) - (109.515837104072)*v(x33,y9) - (9.17647058823496)*v(x33,y10) + (2.98427949019242E-13)*v(x33,y11) + (2.98427949019242E-13)*v(x33,y12) + (2.98427949019242E-13)*v(x33,y13)
     
      + (2.98427949019242E-13)*v(x33,y14) + (2.98427949019242E-13)*v(x33,y15) - (9.17647058823496)*v(x33,y16) - (109.515837104072)*v(x33,y17) + (0)*v(x33,y18) - (7.8159700933611E-14)*v(x33,y19) + (4.2632564145606E-14)*v(x33,y20) + (0)*v(x33,y21)
     
      + (0)*v(x33,y22) + (0)*v(x33,y23) + (0)*v(x33,y24) + (0)*v(x33,y25) + (52)*v(x33,y26) + (52)*v(x34,y0) + (0)*v(x34,y1) + (0)*v(x34,y2) + (0)*v(x34,y3) + (0)*v(x34,y4) + (0)*v(x34,y5) + (4.2632564145606E-14)*v(x34,y6)
     
      - (7.8159700933611E-14)*v(x34,y7) - (17.3333333333333)*v(x34,y8) - (69.9743589743588)*v(x34,y9) + (0)*v(x34,y10) + (0)*v(x34,y11) + (0)*v(x34,y12) + (0)*v(x34,y13) + (0)*v(x34,y14) + (0)*v(x34,y15) + (0)*v(x34,y16) - (69.9743589743588)*v(x34,y17)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:34 Page 18
Elastic-plastic torsion COPS 2.0 #15 (TORSION,SEQ=243)
Equation Listing    SOLVE torsion Using NLP From line 83


     defQL  =E=       
     
      - (17.3333333333333)*v(x34,y18) - (7.8159700933611E-14)*v(x34,y19) + (4.2632564145606E-14)*v(x34,y20) + (0)*v(x34,y21) + (0)*v(x34,y22) + (0)*v(x34,y23) + (0)*v(x34,y24) + (0)*v(x34,y25) + (52)*v(x34,y26) + (52)*v(x35,y0) + (0)*v(x35,y1)
     
      + (0)*v(x35,y2) + (0)*v(x35,y3) + (0)*v(x35,y4) + (0)*v(x35,y5) + (4.2632564145606E-14)*v(x35,y6) - (7.8159700933611E-14)*v(x35,y7) - (114.458521870287)*v(x35,y8) - (8.15686274509801)*v(x35,y9) + (0)*v(x35,y10) + (0)*v(x35,y11) + (0)*v(x35,y12)
     
      + (0)*v(x35,y13) + (0)*v(x35,y14) + (0)*v(x35,y15) + (0)*v(x35,y16) - (8.15686274509801)*v(x35,y17) - (114.458521870287)*v(x35,y18) - (7.8159700933611E-14)*v(x35,y19) + (4.2632564145606E-14)*v(x35,y20) + (0)*v(x35,y21) + (0)*v(x35,y22)
     
      + (0)*v(x35,y23) + (0)*v(x35,y24) + (0)*v(x35,y25) + (52)*v(x35,y26) + (52)*v(x36,y0) + (0)*v(x36,y1) + (0)*v(x36,y2) + (0)*v(x36,y3) + (0)*v(x36,y4) + (0)*v(x36,y5) + (4.2632564145606E-14)*v(x36,y6) - (18.3529411764707)*v(x36,y7)
     
      - (65.0316742081446)*v(x36,y8) + (0)*v(x36,y9) + (0)*v(x36,y10) + (0)*v(x36,y11) + (0)*v(x36,y12) + (0)*v(x36,y13) + (0)*v(x36,y14) + (0)*v(x36,y15) + (0)*v(x36,y16) + (0)*v(x36,y17) - (65.0316742081447)*v(x36,y18) - (18.3529411764707)*v(x36,y19)
     
      + (4.2632564145606E-14)*v(x36,y20) + (0)*v(x36,y21) + (0)*v(x36,y22) + (0)*v(x36,y23) + (0)*v(x36,y24) + (0)*v(x36,y25) + (52)*v(x36,y26) + (52)*v(x37,y0) + (0)*v(x37,y1) + (0)*v(x37,y2) + (0)*v(x37,y3) + (0)*v(x37,y4) + (0)*v(x37,y5)
     
      + (4.2632564145606E-14)*v(x37,y6) - (119.401206636501)*v(x37,y7) - (7.13725490196106)*v(x37,y8) - (2.98427949019242E-13)*v(x37,y9) - (2.98427949019242E-13)*v(x37,y10) - (2.98427949019242E-13)*v(x37,y11) - (2.98427949019242E-13)*v(x37,y12)
     
      - (2.98427949019242E-13)*v(x37,y13) - (2.98427949019242E-13)*v(x37,y14) - (2.98427949019242E-13)*v(x37,y15) - (2.98427949019242E-13)*v(x37,y16) - (2.98427949019242E-13)*v(x37,y17) - (7.13725490196106)*v(x37,y18) - (119.401206636501)*v(x37,y19)
     
      + (4.2632564145606E-14)*v(x37,y20) + (0)*v(x37,y21) + (0)*v(x37,y22) + (0)*v(x37,y23) + (0)*v(x37,y24) + (0)*v(x37,y25) + (52)*v(x37,y26) + (52)*v(x38,y0) + (0)*v(x38,y1) + (0)*v(x38,y2) + (0)*v(x38,y3) + (0)*v(x38,y4) + (0)*v(x38,y5)
     
      - (19.3725490196079)*v(x38,y6) - (60.0889894419302)*v(x38,y7) + (2.98427949019242E-13)*v(x38,y8) + (2.98427949019242E-13)*v(x38,y9) + (2.98427949019242E-13)*v(x38,y10) + (2.98427949019242E-13)*v(x38,y11) + (2.98427949019242E-13)*v(x38,y12)
     
      + (2.98427949019242E-13)*v(x38,y13) + (2.98427949019242E-13)*v(x38,y14) + (2.98427949019242E-13)*v(x38,y15) + (2.98427949019242E-13)*v(x38,y16) + (2.98427949019242E-13)*v(x38,y17) + (2.98427949019242E-13)*v(x38,y18) - (60.0889894419302)*v(x38,y19)
     
      - (19.3725490196079)*v(x38,y20) + (0)*v(x38,y21) + (0)*v(x38,y22) + (0)*v(x38,y23) + (0)*v(x38,y24) + (0)*v(x38,y25) + (52)*v(x38,y26) + (52)*v(x39,y0) + (0)*v(x39,y1) + (0)*v(x39,y2) + (0)*v(x39,y3) + (0)*v(x39,y4) + (0)*v(x39,y5)
     
      - (124.343891402715)*v(x39,y6) - (6.11764705882351)*v(x39,y7) + (0)*v(x39,y8) + (0)*v(x39,y9) + (0)*v(x39,y10) + (0)*v(x39,y11) + (0)*v(x39,y12) + (0)*v(x39,y13) + (0)*v(x39,y14) + (0)*v(x39,y15) + (0)*v(x39,y16) + (0)*v(x39,y17) + (0)*v(x39,y18)
     
      - (6.11764705882351)*v(x39,y19) - (124.343891402715)*v(x39,y20) + (0)*v(x39,y21) + (0)*v(x39,y22) + (0)*v(x39,y23) + (0)*v(x39,y24) + (0)*v(x39,y25) + (52)*v(x39,y26) + (52)*v(x40,y0) + (0)*v(x40,y1) + (0)*v(x40,y2) + (0)*v(x40,y3) + (0)*v(x40,y4)
     
      - (20.3921568627451)*v(x40,y5) - (55.1463046757165)*v(x40,y6) - (1.4210854715202E-13)*v(x40,y7) - (1.4210854715202E-13)*v(x40,y8) - (1.4210854715202E-13)*v(x40,y9) - (1.4210854715202E-13)*v(x40,y10) - (1.4210854715202E-13)*v(x40,y11)
     
      - (1.4210854715202E-13)*v(x40,y12) - (1.4210854715202E-13)*v(x40,y13) - (1.4210854715202E-13)*v(x40,y14) - (1.4210854715202E-13)*v(x40,y15) - (1.4210854715202E-13)*v(x40,y16) - (1.4210854715202E-13)*v(x40,y17) - (1.4210854715202E-13)*v(x40,y18)
     
      - (1.4210854715202E-13)*v(x40,y19) - (55.1463046757165)*v(x40,y20) - (20.3921568627451)*v(x40,y21) + (0)*v(x40,y22) + (0)*v(x40,y23) + (0)*v(x40,y24) + (0)*v(x40,y25) + (52)*v(x40,y26) + (52)*v(x41,y0) + (0)*v(x41,y1) + (0)*v(x41,y2) + (0)*v(x41,y3)
     
      + (0)*v(x41,y4) - (129.286576168929)*v(x41,y5) - (5.09803921568626)*v(x41,y6) + (0)*v(x41,y7) + (0)*v(x41,y8) + (0)*v(x41,y9) + (0)*v(x41,y10) + (0)*v(x41,y11) + (0)*v(x41,y12) + (0)*v(x41,y13) + (0)*v(x41,y14) + (0)*v(x41,y15) + (0)*v(x41,y16)
     
      + (0)*v(x41,y17) + (0)*v(x41,y18) + (0)*v(x41,y19) - (5.09803921568626)*v(x41,y20) - (129.286576168929)*v(x41,y21) + (0)*v(x41,y22) + (0)*v(x41,y23) + (0)*v(x41,y24) + (0)*v(x41,y25) + (52)*v(x41,y26) + (52)*v(x42,y0) + (0)*v(x42,y1) + (0)*v(x42,y2)
     
      + (0)*v(x42,y3) - (21.4117647058824)*v(x42,y4) - (50.203619909502)*v(x42,y5) + (1.4210854715202E-13)*v(x42,y6) + (1.4210854715202E-13)*v(x42,y7) + (1.4210854715202E-13)*v(x42,y8) + (1.4210854715202E-13)*v(x42,y9) + (1.4210854715202E-13)*v(x42,y10)
     
      + (1.4210854715202E-13)*v(x42,y11) + (1.4210854715202E-13)*v(x42,y12) + (1.4210854715202E-13)*v(x42,y13) + (1.4210854715202E-13)*v(x42,y14) + (1.4210854715202E-13)*v(x42,y15) + (1.4210854715202E-13)*v(x42,y16) + (1.4210854715202E-13)*v(x42,y17)
     
      + (1.4210854715202E-13)*v(x42,y18) + (1.4210854715202E-13)*v(x42,y19) + (1.4210854715202E-13)*v(x42,y20) - (50.203619909502)*v(x42,y21) - (21.4117647058824)*v(x42,y22) + (0)*v(x42,y23) + (0)*v(x42,y24) + (0)*v(x42,y25) + (52)*v(x42,y26)
     
      + (52)*v(x43,y0) + (0)*v(x43,y1) + (0)*v(x43,y2) + (0)*v(x43,y3) - (134.229260935143)*v(x43,y4) - (4.07843137254901)*v(x43,y5) + (0)*v(x43,y6) + (0)*v(x43,y7) + (0)*v(x43,y8) + (0)*v(x43,y9) + (0)*v(x43,y10) + (0)*v(x43,y11) + (0)*v(x43,y12)
     
      + (0)*v(x43,y13) + (0)*v(x43,y14) + (0)*v(x43,y15) + (0)*v(x43,y16) + (0)*v(x43,y17) + (0)*v(x43,y18) + (0)*v(x43,y19) + (0)*v(x43,y20) - (4.07843137254901)*v(x43,y21) - (134.229260935143)*v(x43,y22) + (0)*v(x43,y23) + (0)*v(x43,y24)
     
      + (0)*v(x43,y25) + (52)*v(x43,y26) + (52)*v(x44,y0) + (0)*v(x44,y1) + (0)*v(x44,y2) - (22.4313725490196)*v(x44,y3) - (45.2609351432882)*v(x44,y4) - (1.4210854715202E-13)*v(x44,y5) - (1.4210854715202E-13)*v(x44,y6) - (1.4210854715202E-13)*v(x44,y7)
     
      - (1.4210854715202E-13)*v(x44,y8) - (1.4210854715202E-13)*v(x44,y9) - (1.4210854715202E-13)*v(x44,y10) - (1.4210854715202E-13)*v(x44,y11) - (1.4210854715202E-13)*v(x44,y12) - (1.4210854715202E-13)*v(x44,y13) - (1.4210854715202E-13)*v(x44,y14)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:34 Page 19
Elastic-plastic torsion COPS 2.0 #15 (TORSION,SEQ=243)
Equation Listing    SOLVE torsion Using NLP From line 83


     defQL  =E=       
     
      - (1.4210854715202E-13)*v(x44,y15) - (1.4210854715202E-13)*v(x44,y16) - (1.4210854715202E-13)*v(x44,y17) - (1.4210854715202E-13)*v(x44,y18) - (1.4210854715202E-13)*v(x44,y19) - (1.4210854715202E-13)*v(x44,y20) - (1.4210854715202E-13)*v(x44,y21)
     
      - (45.2609351432882)*v(x44,y22) - (22.4313725490196)*v(x44,y23) + (0)*v(x44,y24) + (0)*v(x44,y25) + (52)*v(x44,y26) + (52)*v(x45,y0) + (0)*v(x45,y1) + (0)*v(x45,y2) - (139.171945701358)*v(x45,y3) - (3.05882352941168)*v(x45,y4)
     
      + (7.105427357601E-14)*v(x45,y5) + (7.105427357601E-14)*v(x45,y6) + (7.105427357601E-14)*v(x45,y7) + (7.105427357601E-14)*v(x45,y8) + (7.105427357601E-14)*v(x45,y9) + (7.105427357601E-14)*v(x45,y10) + (7.105427357601E-14)*v(x45,y11)
     
      + (7.105427357601E-14)*v(x45,y12) + (7.105427357601E-14)*v(x45,y13) + (7.105427357601E-14)*v(x45,y14) + (7.105427357601E-14)*v(x45,y15) + (7.105427357601E-14)*v(x45,y16) + (7.105427357601E-14)*v(x45,y17) + (7.105427357601E-14)*v(x45,y18)
     
      + (7.105427357601E-14)*v(x45,y19) + (7.105427357601E-14)*v(x45,y20) + (7.105427357601E-14)*v(x45,y21) - (3.05882352941168)*v(x45,y22) - (139.171945701358)*v(x45,y23) + (0)*v(x45,y24) + (0)*v(x45,y25) + (52)*v(x45,y26) + (52)*v(x46,y0)
     
      + (0)*v(x46,y1) - (23.4509803921569)*v(x46,y2) - (40.3182503770739)*v(x46,y3) + (0)*v(x46,y4) + (0)*v(x46,y5) + (0)*v(x46,y6) + (0)*v(x46,y7) + (0)*v(x46,y8) + (0)*v(x46,y9) + (0)*v(x46,y10) + (0)*v(x46,y11) + (0)*v(x46,y12) + (0)*v(x46,y13)
     
      + (0)*v(x46,y14) + (0)*v(x46,y15) + (0)*v(x46,y16) + (0)*v(x46,y17) + (0)*v(x46,y18) + (0)*v(x46,y19) + (0)*v(x46,y20) + (0)*v(x46,y21) + (0)*v(x46,y22) - (40.3182503770739)*v(x46,y23) - (23.4509803921569)*v(x46,y24) + (0)*v(x46,y25)
     
      + (52)*v(x46,y26) + (52)*v(x47,y0) + (0)*v(x47,y1) - (144.114630467572)*v(x47,y2) - (2.0392156862745)*v(x47,y3) + (0)*v(x47,y4) + (0)*v(x47,y5) + (0)*v(x47,y6) + (0)*v(x47,y7) + (0)*v(x47,y8) + (0)*v(x47,y9) + (0)*v(x47,y10) + (0)*v(x47,y11)
     
      + (0)*v(x47,y12) + (0)*v(x47,y13) + (0)*v(x47,y14) + (0)*v(x47,y15) + (0)*v(x47,y16) + (0)*v(x47,y17) + (0)*v(x47,y18) + (0)*v(x47,y19) + (0)*v(x47,y20) + (0)*v(x47,y21) + (0)*v(x47,y22) - (2.0392156862745)*v(x47,y23) - (144.114630467572)*v(x47,y24)
     
      + (0)*v(x47,y25) + (52)*v(x47,y26) + (52)*v(x48,y0) - (24.4705882352941)*v(x48,y1) - (35.3755656108597)*v(x48,y2) + (0)*v(x48,y3) + (0)*v(x48,y4) + (0)*v(x48,y5) + (0)*v(x48,y6) + (0)*v(x48,y7) + (0)*v(x48,y8) + (0)*v(x48,y9) + (0)*v(x48,y10)
     
      + (0)*v(x48,y11) + (0)*v(x48,y12) + (0)*v(x48,y13) + (0)*v(x48,y14) + (0)*v(x48,y15) + (0)*v(x48,y16) + (0)*v(x48,y17) + (0)*v(x48,y18) + (0)*v(x48,y19) + (0)*v(x48,y20) + (0)*v(x48,y21) + (0)*v(x48,y22) + (0)*v(x48,y23)
     
      - (35.3755656108597)*v(x48,y24) - (24.4705882352941)*v(x48,y25) + (52)*v(x48,y26) + (52)*v(x49,y0) - (149.057315233786)*v(x49,y1) - (1.01960784313725)*v(x49,y2) + (0)*v(x49,y3) + (0)*v(x49,y4) + (0)*v(x49,y5) + (0)*v(x49,y6) + (0)*v(x49,y7)
     
      + (0)*v(x49,y8) + (0)*v(x49,y9) + (0)*v(x49,y10) + (0)*v(x49,y11) + (0)*v(x49,y12) + (0)*v(x49,y13) + (0)*v(x49,y14) + (0)*v(x49,y15) + (0)*v(x49,y16) + (0)*v(x49,y17) + (0)*v(x49,y18) + (0)*v(x49,y19) + (0)*v(x49,y20) + (0)*v(x49,y21)
     
      + (0)*v(x49,y22) + (0)*v(x49,y23) - (1.01960784313725)*v(x49,y24) - (149.057315233786)*v(x49,y25) + (52)*v(x49,y26) + (26.5098039215686)*v(x50,y0) - (30.4328808446455)*v(x50,y1) + (0)*v(x50,y2) + (0)*v(x50,y3) + (0)*v(x50,y4) + (0)*v(x50,y5)
     
      + (0)*v(x50,y6) + (0)*v(x50,y7) + (0)*v(x50,y8) + (0)*v(x50,y9) + (0)*v(x50,y10) + (0)*v(x50,y11) + (0)*v(x50,y12) + (0)*v(x50,y13) + (0)*v(x50,y14) + (0)*v(x50,y15) + (0)*v(x50,y16) + (0)*v(x50,y17) + (0)*v(x50,y18) + (0)*v(x50,y19)
     
      + (0)*v(x50,y20) + (0)*v(x50,y21) + (0)*v(x50,y22) + (0)*v(x50,y23) + (0)*v(x50,y24) - (30.4328808446455)*v(x50,y25) + (26.5098039215686)*v(x50,y26) + (0)*v(x51,y0) + (102)*v(x51,y1) + (102)*v(x51,y2) + (102)*v(x51,y3) + (102)*v(x51,y4)
     
      + (102)*v(x51,y5) + (102)*v(x51,y6) + (102)*v(x51,y7) + (102)*v(x51,y8) + (102)*v(x51,y9) + (102)*v(x51,y10) + (102)*v(x51,y11) + (102)*v(x51,y12) + (102)*v(x51,y13) + (102)*v(x51,y14) + (102)*v(x51,y15) + (102)*v(x51,y16) + (102)*v(x51,y17)
     
      + (102)*v(x51,y18) + (102)*v(x51,y19) + (102)*v(x51,y20) + (102)*v(x51,y21) + (102)*v(x51,y22) + (102)*v(x51,y23) + (102)*v(x51,y24) + (102)*v(x51,y25) + quadLower =E= 0 ; (LHS = -1299.59778783308, INFES = 1299.59778783308 ****)
     

---- defQU  =E=  

defQU..  (102)*v(x0,y1) + (102)*v(x0,y2) + (102)*v(x0,y3) + (102)*v(x0,y4) + (102)*v(x0,y5) + (102)*v(x0,y6) + (102)*v(x0,y7) + (102)*v(x0,y8) + (102)*v(x0,y9) + (102)*v(x0,y10) + (102)*v(x0,y11) + (102)*v(x0,y12) + (102)*v(x0,y13) + (102)*v(x0,y14)
     
      + (102)*v(x0,y15) + (102)*v(x0,y16) + (102)*v(x0,y17) + (102)*v(x0,y18) + (102)*v(x0,y19) + (102)*v(x0,y20) + (102)*v(x0,y21) + (102)*v(x0,y22) + (102)*v(x0,y23) + (102)*v(x0,y24) + (102)*v(x0,y25) + (0)*v(x0,y26) + (26.5098039215686)*v(x1,y0)
     
      - (30.4328808446455)*v(x1,y1) + (0)*v(x1,y2) + (0)*v(x1,y3) + (0)*v(x1,y4) + (0)*v(x1,y5) + (0)*v(x1,y6) + (0)*v(x1,y7) + (0)*v(x1,y8) + (0)*v(x1,y9) + (0)*v(x1,y10) + (0)*v(x1,y11) + (0)*v(x1,y12) + (0)*v(x1,y13) + (0)*v(x1,y14) + (0)*v(x1,y15)
     
      + (0)*v(x1,y16) + (0)*v(x1,y17) + (0)*v(x1,y18) + (0)*v(x1,y19) + (0)*v(x1,y20) + (0)*v(x1,y21) + (0)*v(x1,y22) + (0)*v(x1,y23) + (0)*v(x1,y24) - (30.4328808446455)*v(x1,y25) + (26.5098039215686)*v(x1,y26) + (52)*v(x2,y0)
     
      - (149.057315233786)*v(x2,y1) - (1.01960784313725)*v(x2,y2) + (0)*v(x2,y3) + (0)*v(x2,y4) + (0)*v(x2,y5) + (0)*v(x2,y6) + (0)*v(x2,y7) + (0)*v(x2,y8) + (0)*v(x2,y9) + (0)*v(x2,y10) + (0)*v(x2,y11) + (0)*v(x2,y12) + (0)*v(x2,y13) + (0)*v(x2,y14)
     
      + (0)*v(x2,y15) + (0)*v(x2,y16) + (0)*v(x2,y17) + (0)*v(x2,y18) + (0)*v(x2,y19) + (0)*v(x2,y20) + (0)*v(x2,y21) + (0)*v(x2,y22) + (0)*v(x2,y23) - (1.01960784313725)*v(x2,y24) - (149.057315233786)*v(x2,y25) + (52)*v(x2,y26) + (52)*v(x3,y0)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:34 Page 20
Elastic-plastic torsion COPS 2.0 #15 (TORSION,SEQ=243)
Equation Listing    SOLVE torsion Using NLP From line 83


     defQU  =E=       
     
      - (24.4705882352941)*v(x3,y1) - (35.3755656108597)*v(x3,y2) + (0)*v(x3,y3) + (0)*v(x3,y4) + (0)*v(x3,y5) + (0)*v(x3,y6) + (0)*v(x3,y7) + (0)*v(x3,y8) + (0)*v(x3,y9) + (0)*v(x3,y10) + (0)*v(x3,y11) + (0)*v(x3,y12) + (0)*v(x3,y13) + (0)*v(x3,y14)
     
      + (0)*v(x3,y15) + (0)*v(x3,y16) + (0)*v(x3,y17) + (0)*v(x3,y18) + (0)*v(x3,y19) + (0)*v(x3,y20) + (0)*v(x3,y21) + (0)*v(x3,y22) + (0)*v(x3,y23) - (35.3755656108597)*v(x3,y24) - (24.4705882352941)*v(x3,y25) + (52)*v(x3,y26) + (52)*v(x4,y0)
     
      + (0)*v(x4,y1) - (144.114630467572)*v(x4,y2) - (2.0392156862745)*v(x4,y3) + (0)*v(x4,y4) + (0)*v(x4,y5) + (0)*v(x4,y6) + (0)*v(x4,y7) + (0)*v(x4,y8) + (0)*v(x4,y9) + (0)*v(x4,y10) + (0)*v(x4,y11) + (0)*v(x4,y12) + (0)*v(x4,y13) + (0)*v(x4,y14)
     
      + (0)*v(x4,y15) + (0)*v(x4,y16) + (0)*v(x4,y17) + (0)*v(x4,y18) + (0)*v(x4,y19) + (0)*v(x4,y20) + (0)*v(x4,y21) + (0)*v(x4,y22) - (2.0392156862745)*v(x4,y23) - (144.114630467572)*v(x4,y24) + (0)*v(x4,y25) + (52)*v(x4,y26) + (52)*v(x5,y0)
     
      + (0)*v(x5,y1) - (23.4509803921569)*v(x5,y2) - (40.3182503770739)*v(x5,y3) + (0)*v(x5,y4) + (0)*v(x5,y5) + (0)*v(x5,y6) + (0)*v(x5,y7) + (0)*v(x5,y8) + (0)*v(x5,y9) + (0)*v(x5,y10) + (0)*v(x5,y11) + (0)*v(x5,y12) + (0)*v(x5,y13) + (0)*v(x5,y14)
     
      + (0)*v(x5,y15) + (0)*v(x5,y16) + (0)*v(x5,y17) + (0)*v(x5,y18) + (0)*v(x5,y19) + (0)*v(x5,y20) + (0)*v(x5,y21) + (0)*v(x5,y22) - (40.3182503770739)*v(x5,y23) - (23.4509803921569)*v(x5,y24) + (0)*v(x5,y25) + (52)*v(x5,y26) + (52)*v(x6,y0)
     
      + (0)*v(x6,y1) + (0)*v(x6,y2) - (139.171945701358)*v(x6,y3) - (3.05882352941168)*v(x6,y4) + (7.105427357601E-14)*v(x6,y5) + (7.105427357601E-14)*v(x6,y6) + (7.105427357601E-14)*v(x6,y7) + (7.105427357601E-14)*v(x6,y8) + (7.105427357601E-14)*v(x6,y9)
     
      + (7.105427357601E-14)*v(x6,y10) + (7.105427357601E-14)*v(x6,y11) + (7.105427357601E-14)*v(x6,y12) + (7.105427357601E-14)*v(x6,y13) + (7.105427357601E-14)*v(x6,y14) + (7.105427357601E-14)*v(x6,y15) + (7.105427357601E-14)*v(x6,y16)
     
      + (7.105427357601E-14)*v(x6,y17) + (7.105427357601E-14)*v(x6,y18) + (7.105427357601E-14)*v(x6,y19) + (7.105427357601E-14)*v(x6,y20) + (7.105427357601E-14)*v(x6,y21) - (3.05882352941168)*v(x6,y22) - (139.171945701358)*v(x6,y23) + (0)*v(x6,y24)
     
      + (0)*v(x6,y25) + (52)*v(x6,y26) + (52)*v(x7,y0) + (0)*v(x7,y1) + (0)*v(x7,y2) - (22.4313725490196)*v(x7,y3) - (45.2609351432882)*v(x7,y4) - (1.4210854715202E-13)*v(x7,y5) - (1.4210854715202E-13)*v(x7,y6) - (1.4210854715202E-13)*v(x7,y7)
     
      - (1.4210854715202E-13)*v(x7,y8) - (1.4210854715202E-13)*v(x7,y9) - (1.4210854715202E-13)*v(x7,y10) - (1.4210854715202E-13)*v(x7,y11) - (1.4210854715202E-13)*v(x7,y12) - (1.4210854715202E-13)*v(x7,y13) - (1.4210854715202E-13)*v(x7,y14)
     
      - (1.4210854715202E-13)*v(x7,y15) - (1.4210854715202E-13)*v(x7,y16) - (1.4210854715202E-13)*v(x7,y17) - (1.4210854715202E-13)*v(x7,y18) - (1.4210854715202E-13)*v(x7,y19) - (1.4210854715202E-13)*v(x7,y20) - (1.4210854715202E-13)*v(x7,y21)
     
      - (45.2609351432882)*v(x7,y22) - (22.4313725490196)*v(x7,y23) + (0)*v(x7,y24) + (0)*v(x7,y25) + (52)*v(x7,y26) + (52)*v(x8,y0) + (0)*v(x8,y1) + (0)*v(x8,y2) + (0)*v(x8,y3) - (134.229260935143)*v(x8,y4) - (4.07843137254901)*v(x8,y5) + (0)*v(x8,y6)
     
      + (0)*v(x8,y7) + (0)*v(x8,y8) + (0)*v(x8,y9) + (0)*v(x8,y10) + (0)*v(x8,y11) + (0)*v(x8,y12) + (0)*v(x8,y13) + (0)*v(x8,y14) + (0)*v(x8,y15) + (0)*v(x8,y16) + (0)*v(x8,y17) + (0)*v(x8,y18) + (0)*v(x8,y19) + (0)*v(x8,y20)
     
      - (4.07843137254901)*v(x8,y21) - (134.229260935143)*v(x8,y22) + (0)*v(x8,y23) + (0)*v(x8,y24) + (0)*v(x8,y25) + (52)*v(x8,y26) + (52)*v(x9,y0) + (0)*v(x9,y1) + (0)*v(x9,y2) + (0)*v(x9,y3) - (21.4117647058824)*v(x9,y4) - (50.203619909502)*v(x9,y5)
     
      + (1.4210854715202E-13)*v(x9,y6) + (1.4210854715202E-13)*v(x9,y7) + (1.4210854715202E-13)*v(x9,y8) + (1.4210854715202E-13)*v(x9,y9) + (1.4210854715202E-13)*v(x9,y10) + (1.4210854715202E-13)*v(x9,y11) + (1.4210854715202E-13)*v(x9,y12)
     
      + (1.4210854715202E-13)*v(x9,y13) + (1.4210854715202E-13)*v(x9,y14) + (1.4210854715202E-13)*v(x9,y15) + (1.4210854715202E-13)*v(x9,y16) + (1.4210854715202E-13)*v(x9,y17) + (1.4210854715202E-13)*v(x9,y18) + (1.4210854715202E-13)*v(x9,y19)
     
      + (1.4210854715202E-13)*v(x9,y20) - (50.203619909502)*v(x9,y21) - (21.4117647058824)*v(x9,y22) + (0)*v(x9,y23) + (0)*v(x9,y24) + (0)*v(x9,y25) + (52)*v(x9,y26) + (52)*v(x10,y0) + (0)*v(x10,y1) + (0)*v(x10,y2) + (0)*v(x10,y3) + (0)*v(x10,y4)
     
      - (129.286576168929)*v(x10,y5) - (5.09803921568626)*v(x10,y6) + (0)*v(x10,y7) + (0)*v(x10,y8) + (0)*v(x10,y9) + (0)*v(x10,y10) + (0)*v(x10,y11) + (0)*v(x10,y12) + (0)*v(x10,y13) + (0)*v(x10,y14) + (0)*v(x10,y15) + (0)*v(x10,y16) + (0)*v(x10,y17)
     
      + (0)*v(x10,y18) + (0)*v(x10,y19) - (5.09803921568626)*v(x10,y20) - (129.286576168929)*v(x10,y21) + (0)*v(x10,y22) + (0)*v(x10,y23) + (0)*v(x10,y24) + (0)*v(x10,y25) + (52)*v(x10,y26) + (52)*v(x11,y0) + (0)*v(x11,y1) + (0)*v(x11,y2) + (0)*v(x11,y3)
     
      + (0)*v(x11,y4) - (20.3921568627451)*v(x11,y5) - (55.1463046757165)*v(x11,y6) - (1.4210854715202E-13)*v(x11,y7) - (1.4210854715202E-13)*v(x11,y8) - (1.4210854715202E-13)*v(x11,y9) - (1.4210854715202E-13)*v(x11,y10) - (1.4210854715202E-13)*v(x11,y11)
     
      - (1.4210854715202E-13)*v(x11,y12) - (1.4210854715202E-13)*v(x11,y13) - (1.4210854715202E-13)*v(x11,y14) - (1.4210854715202E-13)*v(x11,y15) - (1.4210854715202E-13)*v(x11,y16) - (1.4210854715202E-13)*v(x11,y17) - (1.4210854715202E-13)*v(x11,y18)
     
      - (1.4210854715202E-13)*v(x11,y19) - (55.1463046757165)*v(x11,y20) - (20.3921568627451)*v(x11,y21) + (0)*v(x11,y22) + (0)*v(x11,y23) + (0)*v(x11,y24) + (0)*v(x11,y25) + (52)*v(x11,y26) + (52)*v(x12,y0) + (0)*v(x12,y1) + (0)*v(x12,y2) + (0)*v(x12,y3)
     
      + (0)*v(x12,y4) + (0)*v(x12,y5) - (124.343891402715)*v(x12,y6) - (6.11764705882351)*v(x12,y7) + (0)*v(x12,y8) + (0)*v(x12,y9) + (0)*v(x12,y10) + (0)*v(x12,y11) + (0)*v(x12,y12) + (0)*v(x12,y13) + (0)*v(x12,y14) + (0)*v(x12,y15) + (0)*v(x12,y16)
     
      + (0)*v(x12,y17) + (0)*v(x12,y18) - (6.11764705882351)*v(x12,y19) - (124.343891402715)*v(x12,y20) + (0)*v(x12,y21) + (0)*v(x12,y22) + (0)*v(x12,y23) + (0)*v(x12,y24) + (0)*v(x12,y25) + (52)*v(x12,y26) + (52)*v(x13,y0) + (0)*v(x13,y1) + (0)*v(x13,y2)
     
      + (0)*v(x13,y3) + (0)*v(x13,y4) + (0)*v(x13,y5) - (19.3725490196079)*v(x13,y6) - (60.0889894419302)*v(x13,y7) + (2.98427949019242E-13)*v(x13,y8) + (2.98427949019242E-13)*v(x13,y9) + (2.98427949019242E-13)*v(x13,y10)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:34 Page 21
Elastic-plastic torsion COPS 2.0 #15 (TORSION,SEQ=243)
Equation Listing    SOLVE torsion Using NLP From line 83


     defQU  =E=       
     
      + (2.98427949019242E-13)*v(x13,y11) + (2.98427949019242E-13)*v(x13,y12) + (2.98427949019242E-13)*v(x13,y13) + (2.98427949019242E-13)*v(x13,y14) + (2.98427949019242E-13)*v(x13,y15) + (2.98427949019242E-13)*v(x13,y16)
     
      + (2.98427949019242E-13)*v(x13,y17) + (2.98427949019242E-13)*v(x13,y18) - (60.0889894419302)*v(x13,y19) - (19.3725490196079)*v(x13,y20) + (0)*v(x13,y21) + (0)*v(x13,y22) + (0)*v(x13,y23) + (0)*v(x13,y24) + (0)*v(x13,y25) + (52)*v(x13,y26)
     
      + (52)*v(x14,y0) + (0)*v(x14,y1) + (0)*v(x14,y2) + (0)*v(x14,y3) + (0)*v(x14,y4) + (0)*v(x14,y5) + (4.2632564145606E-14)*v(x14,y6) - (119.401206636501)*v(x14,y7) - (7.13725490196106)*v(x14,y8) - (2.98427949019242E-13)*v(x14,y9)
     
      - (2.98427949019242E-13)*v(x14,y10) - (2.98427949019242E-13)*v(x14,y11) - (2.98427949019242E-13)*v(x14,y12) - (2.98427949019242E-13)*v(x14,y13) - (2.98427949019242E-13)*v(x14,y14) - (2.98427949019242E-13)*v(x14,y15)
     
      - (2.98427949019242E-13)*v(x14,y16) - (2.98427949019242E-13)*v(x14,y17) - (7.13725490196106)*v(x14,y18) - (119.401206636501)*v(x14,y19) + (4.2632564145606E-14)*v(x14,y20) + (0)*v(x14,y21) + (0)*v(x14,y22) + (0)*v(x14,y23) + (0)*v(x14,y24)
     
      + (0)*v(x14,y25) + (52)*v(x14,y26) + (52)*v(x15,y0) + (0)*v(x15,y1) + (0)*v(x15,y2) + (0)*v(x15,y3) + (0)*v(x15,y4) + (0)*v(x15,y5) + (4.2632564145606E-14)*v(x15,y6) - (18.3529411764707)*v(x15,y7) - (65.0316742081447)*v(x15,y8) + (0)*v(x15,y9)
     
      + (0)*v(x15,y10) + (0)*v(x15,y11) + (0)*v(x15,y12) + (0)*v(x15,y13) + (0)*v(x15,y14) + (0)*v(x15,y15) + (0)*v(x15,y16) + (0)*v(x15,y17) - (65.0316742081447)*v(x15,y18) - (18.3529411764707)*v(x15,y19) + (4.2632564145606E-14)*v(x15,y20)
     
      + (0)*v(x15,y21) + (0)*v(x15,y22) + (0)*v(x15,y23) + (0)*v(x15,y24) + (0)*v(x15,y25) + (52)*v(x15,y26) + (52)*v(x16,y0) + (0)*v(x16,y1) + (0)*v(x16,y2) + (0)*v(x16,y3) + (0)*v(x16,y4) + (0)*v(x16,y5) + (4.2632564145606E-14)*v(x16,y6)
     
      - (7.8159700933611E-14)*v(x16,y7) - (114.458521870287)*v(x16,y8) - (8.15686274509801)*v(x16,y9) + (0)*v(x16,y10) + (0)*v(x16,y11) + (0)*v(x16,y12) + (0)*v(x16,y13) + (0)*v(x16,y14) + (0)*v(x16,y15) + (0)*v(x16,y16) - (8.15686274509801)*v(x16,y17)
     
      - (114.458521870287)*v(x16,y18) - (7.8159700933611E-14)*v(x16,y19) + (4.2632564145606E-14)*v(x16,y20) + (0)*v(x16,y21) + (0)*v(x16,y22) + (0)*v(x16,y23) + (0)*v(x16,y24) + (0)*v(x16,y25) + (52)*v(x16,y26) + (52)*v(x17,y0) + (0)*v(x17,y1)
     
      + (0)*v(x17,y2) + (0)*v(x17,y3) + (0)*v(x17,y4) + (0)*v(x17,y5) + (4.2632564145606E-14)*v(x17,y6) - (7.8159700933611E-14)*v(x17,y7) - (17.3333333333333)*v(x17,y8) - (69.9743589743588)*v(x17,y9) + (0)*v(x17,y10) + (0)*v(x17,y11) + (0)*v(x17,y12)
     
      + (0)*v(x17,y13) + (0)*v(x17,y14) + (0)*v(x17,y15) + (0)*v(x17,y16) - (69.9743589743588)*v(x17,y17) - (17.3333333333333)*v(x17,y18) - (7.8159700933611E-14)*v(x17,y19) + (4.2632564145606E-14)*v(x17,y20) + (0)*v(x17,y21) + (0)*v(x17,y22)
     
      + (0)*v(x17,y23) + (0)*v(x17,y24) + (0)*v(x17,y25) + (52)*v(x17,y26) + (52)*v(x18,y0) + (0)*v(x18,y1) + (0)*v(x18,y2) + (0)*v(x18,y3) + (0)*v(x18,y4) + (0)*v(x18,y5) + (4.2632564145606E-14)*v(x18,y6) - (7.8159700933611E-14)*v(x18,y7) + (0)*v(x18,y8)
     
      - (109.515837104072)*v(x18,y9) - (9.17647058823496)*v(x18,y10) + (2.98427949019242E-13)*v(x18,y11) + (2.98427949019242E-13)*v(x18,y12) + (2.98427949019242E-13)*v(x18,y13) + (2.98427949019242E-13)*v(x18,y14) + (2.98427949019242E-13)*v(x18,y15)
     
      - (9.17647058823496)*v(x18,y16) - (109.515837104072)*v(x18,y17) + (0)*v(x18,y18) - (7.8159700933611E-14)*v(x18,y19) + (4.2632564145606E-14)*v(x18,y20) + (0)*v(x18,y21) + (0)*v(x18,y22) + (0)*v(x18,y23) + (0)*v(x18,y24) + (0)*v(x18,y25)
     
      + (52)*v(x18,y26) + (52)*v(x19,y0) + (0)*v(x19,y1) + (0)*v(x19,y2) + (0)*v(x19,y3) + (0)*v(x19,y4) + (0)*v(x19,y5) + (4.2632564145606E-14)*v(x19,y6) - (7.8159700933611E-14)*v(x19,y7) + (0)*v(x19,y8) - (16.313725490196)*v(x19,y9)
     
      - (74.9170437405733)*v(x19,y10) - (2.98427949019242E-13)*v(x19,y11) - (2.98427949019242E-13)*v(x19,y12) - (2.98427949019242E-13)*v(x19,y13) - (2.98427949019242E-13)*v(x19,y14) - (2.98427949019242E-13)*v(x19,y15) - (74.9170437405733)*v(x19,y16)
     
      - (16.313725490196)*v(x19,y17) + (0)*v(x19,y18) - (7.8159700933611E-14)*v(x19,y19) + (4.2632564145606E-14)*v(x19,y20) + (0)*v(x19,y21) + (0)*v(x19,y22) + (0)*v(x19,y23) + (0)*v(x19,y24) + (0)*v(x19,y25) + (52)*v(x19,y26) + (52)*v(x20,y0)
     
      + (0)*v(x20,y1) + (0)*v(x20,y2) + (0)*v(x20,y3) + (0)*v(x20,y4) + (0)*v(x20,y5) + (4.2632564145606E-14)*v(x20,y6) - (7.8159700933611E-14)*v(x20,y7) + (0)*v(x20,y8) + (7.8159700933611E-14)*v(x20,y9) - (104.573152337858)*v(x20,y10)
     
      - (10.1960784313725)*v(x20,y11) + (0)*v(x20,y12) + (0)*v(x20,y13) + (0)*v(x20,y14) - (10.1960784313725)*v(x20,y15) - (104.573152337858)*v(x20,y16) + (7.8159700933611E-14)*v(x20,y17) + (0)*v(x20,y18) - (7.8159700933611E-14)*v(x20,y19)
     
      + (4.2632564145606E-14)*v(x20,y20) + (0)*v(x20,y21) + (0)*v(x20,y22) + (0)*v(x20,y23) + (0)*v(x20,y24) + (0)*v(x20,y25) + (52)*v(x20,y26) + (52)*v(x21,y0) + (0)*v(x21,y1) + (0)*v(x21,y2) + (0)*v(x21,y3) + (0)*v(x21,y4) + (0)*v(x21,y5)
     
      + (4.2632564145606E-14)*v(x21,y6) - (7.8159700933611E-14)*v(x21,y7) + (0)*v(x21,y8) + (7.8159700933611E-14)*v(x21,y9) - (15.2941176470589)*v(x21,y10) - (79.8597285067868)*v(x21,y11) + (2.98427949019242E-13)*v(x21,y12)
     
      + (2.98427949019242E-13)*v(x21,y13) + (2.98427949019242E-13)*v(x21,y14) - (79.8597285067868)*v(x21,y15) - (15.2941176470589)*v(x21,y16) + (7.8159700933611E-14)*v(x21,y17) + (0)*v(x21,y18) - (7.8159700933611E-14)*v(x21,y19)
     
      + (4.2632564145606E-14)*v(x21,y20) + (0)*v(x21,y21) + (0)*v(x21,y22) + (0)*v(x21,y23) + (0)*v(x21,y24) + (0)*v(x21,y25) + (52)*v(x21,y26) + (52)*v(x22,y0) + (0)*v(x22,y1) + (0)*v(x22,y2) + (0)*v(x22,y3) + (0)*v(x22,y4) + (0)*v(x22,y5)
     
      + (4.2632564145606E-14)*v(x22,y6) - (7.8159700933611E-14)*v(x22,y7) + (0)*v(x22,y8) + (7.8159700933611E-14)*v(x22,y9) + (0)*v(x22,y10) - (99.6304675716445)*v(x22,y11) - (11.2156862745101)*v(x22,y12) - (2.98427949019242E-13)*v(x22,y13)
     
      - (11.2156862745101)*v(x22,y14) - (99.6304675716445)*v(x22,y15) + (0)*v(x22,y16) + (7.8159700933611E-14)*v(x22,y17) + (0)*v(x22,y18) - (7.8159700933611E-14)*v(x22,y19) + (4.2632564145606E-14)*v(x22,y20) + (0)*v(x22,y21) + (0)*v(x22,y22)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:34 Page 22
Elastic-plastic torsion COPS 2.0 #15 (TORSION,SEQ=243)
Equation Listing    SOLVE torsion Using NLP From line 83


     defQU  =E=       
     
      + (0)*v(x22,y23) + (0)*v(x22,y24) + (0)*v(x22,y25) + (52)*v(x22,y26) + (52)*v(x23,y0) + (0)*v(x23,y1) + (0)*v(x23,y2) + (0)*v(x23,y3) + (0)*v(x23,y4) + (0)*v(x23,y5) + (4.2632564145606E-14)*v(x23,y6) - (7.8159700933611E-14)*v(x23,y7) + (0)*v(x23,y8)
     
      + (7.8159700933611E-14)*v(x23,y9) + (0)*v(x23,y10) - (14.2745098039217)*v(x23,y11) - (84.8024132730013)*v(x23,y12) + (0)*v(x23,y13) - (84.8024132730013)*v(x23,y14) - (14.2745098039217)*v(x23,y15) + (0)*v(x23,y16) + (7.8159700933611E-14)*v(x23,y17)
     
      + (0)*v(x23,y18) - (7.8159700933611E-14)*v(x23,y19) + (4.2632564145606E-14)*v(x23,y20) + (0)*v(x23,y21) + (0)*v(x23,y22) + (0)*v(x23,y23) + (0)*v(x23,y24) + (0)*v(x23,y25) + (52)*v(x23,y26) + (52)*v(x24,y0) + (0)*v(x24,y1) + (0)*v(x24,y2)
     
      + (0)*v(x24,y3) + (0)*v(x24,y4) + (0)*v(x24,y5) + (4.2632564145606E-14)*v(x24,y6) - (7.8159700933611E-14)*v(x24,y7) + (0)*v(x24,y8) + (7.8159700933611E-14)*v(x24,y9) + (0)*v(x24,y10) - (7.8159700933611E-14)*v(x24,y11) - (94.68778280543)*v(x24,y12)
     
      - (24.470588235294)*v(x24,y13) - (94.68778280543)*v(x24,y14) - (7.8159700933611E-14)*v(x24,y15) + (0)*v(x24,y16) + (7.8159700933611E-14)*v(x24,y17) + (0)*v(x24,y18) - (7.8159700933611E-14)*v(x24,y19) + (4.2632564145606E-14)*v(x24,y20)
     
      + (0)*v(x24,y21) + (0)*v(x24,y22) + (0)*v(x24,y23) + (0)*v(x24,y24) + (0)*v(x24,y25) + (52)*v(x24,y26) + (52)*v(x25,y0) + (0)*v(x25,y1) + (0)*v(x25,y2) + (0)*v(x25,y3) + (0)*v(x25,y4) + (0)*v(x25,y5) + (4.2632564145606E-14)*v(x25,y6)
     
      - (7.8159700933611E-14)*v(x25,y7) + (0)*v(x25,y8) + (7.8159700933611E-14)*v(x25,y9) + (0)*v(x25,y10) - (7.8159700933611E-14)*v(x25,y11) - (13.2549019607843)*v(x25,y12) - (179.490196078431)*v(x25,y13) - (13.2549019607843)*v(x25,y14)
     
      - (7.8159700933611E-14)*v(x25,y15) + (0)*v(x25,y16) + (7.8159700933611E-14)*v(x25,y17) + (0)*v(x25,y18) - (7.8159700933611E-14)*v(x25,y19) + (4.2632564145606E-14)*v(x25,y20) + (0)*v(x25,y21) + (0)*v(x25,y22) + (0)*v(x25,y23) + (0)*v(x25,y24)
     
      + (0)*v(x25,y25) + (52)*v(x25,y26) + (52)*v(x26,y0) + (0)*v(x26,y1) + (0)*v(x26,y2) + (0)*v(x26,y3) + (0)*v(x26,y4) + (0)*v(x26,y5) + (4.2632564145606E-14)*v(x26,y6) - (7.8159700933611E-14)*v(x26,y7) + (0)*v(x26,y8) + (7.8159700933611E-14)*v(x26,y9)
     
      + (0)*v(x26,y10) - (7.8159700933611E-14)*v(x26,y11) - (13.2549019607843)*v(x26,y12) - (179.490196078431)*v(x26,y13) - (13.2549019607843)*v(x26,y14) - (7.8159700933611E-14)*v(x26,y15) + (0)*v(x26,y16) + (7.8159700933611E-14)*v(x26,y17)
     
      + (0)*v(x26,y18) - (7.8159700933611E-14)*v(x26,y19) + (4.2632564145606E-14)*v(x26,y20) + (0)*v(x26,y21) + (0)*v(x26,y22) + (0)*v(x26,y23) + (0)*v(x26,y24) + (0)*v(x26,y25) + (52)*v(x26,y26) + (52)*v(x27,y0) + (0)*v(x27,y1) + (0)*v(x27,y2)
     
      + (0)*v(x27,y3) + (0)*v(x27,y4) + (0)*v(x27,y5) + (4.2632564145606E-14)*v(x27,y6) - (7.8159700933611E-14)*v(x27,y7) + (0)*v(x27,y8) + (7.8159700933611E-14)*v(x27,y9) + (0)*v(x27,y10) - (7.8159700933611E-14)*v(x27,y11) - (94.68778280543)*v(x27,y12)
     
      - (24.470588235294)*v(x27,y13) - (94.68778280543)*v(x27,y14) - (7.8159700933611E-14)*v(x27,y15) + (0)*v(x27,y16) + (7.8159700933611E-14)*v(x27,y17) + (0)*v(x27,y18) - (7.8159700933611E-14)*v(x27,y19) + (4.2632564145606E-14)*v(x27,y20)
     
      + (0)*v(x27,y21) + (0)*v(x27,y22) + (0)*v(x27,y23) + (0)*v(x27,y24) + (0)*v(x27,y25) + (52)*v(x27,y26) + (52)*v(x28,y0) + (0)*v(x28,y1) + (0)*v(x28,y2) + (0)*v(x28,y3) + (0)*v(x28,y4) + (0)*v(x28,y5) + (4.2632564145606E-14)*v(x28,y6)
     
      - (7.8159700933611E-14)*v(x28,y7) + (0)*v(x28,y8) + (7.8159700933611E-14)*v(x28,y9) + (0)*v(x28,y10) - (14.2745098039217)*v(x28,y11) - (84.8024132730013)*v(x28,y12) + (0)*v(x28,y13) - (84.8024132730013)*v(x28,y14) - (14.2745098039217)*v(x28,y15)
     
      + (0)*v(x28,y16) + (7.8159700933611E-14)*v(x28,y17) + (0)*v(x28,y18) - (7.8159700933611E-14)*v(x28,y19) + (4.2632564145606E-14)*v(x28,y20) + (0)*v(x28,y21) + (0)*v(x28,y22) + (0)*v(x28,y23) + (0)*v(x28,y24) + (0)*v(x28,y25) + (52)*v(x28,y26)
     
      + (52)*v(x29,y0) + (0)*v(x29,y1) + (0)*v(x29,y2) + (0)*v(x29,y3) + (0)*v(x29,y4) + (0)*v(x29,y5) + (4.2632564145606E-14)*v(x29,y6) - (7.8159700933611E-14)*v(x29,y7) + (0)*v(x29,y8) + (7.8159700933611E-14)*v(x29,y9) + (0)*v(x29,y10)
     
      - (99.6304675716445)*v(x29,y11) - (11.2156862745101)*v(x29,y12) - (2.98427949019242E-13)*v(x29,y13) - (11.2156862745101)*v(x29,y14) - (99.6304675716445)*v(x29,y15) + (0)*v(x29,y16) + (7.8159700933611E-14)*v(x29,y17) + (0)*v(x29,y18)
     
      - (7.8159700933611E-14)*v(x29,y19) + (4.2632564145606E-14)*v(x29,y20) + (0)*v(x29,y21) + (0)*v(x29,y22) + (0)*v(x29,y23) + (0)*v(x29,y24) + (0)*v(x29,y25) + (52)*v(x29,y26) + (52)*v(x30,y0) + (0)*v(x30,y1) + (0)*v(x30,y2) + (0)*v(x30,y3)
     
      + (0)*v(x30,y4) + (0)*v(x30,y5) + (4.2632564145606E-14)*v(x30,y6) - (7.8159700933611E-14)*v(x30,y7) + (0)*v(x30,y8) + (7.8159700933611E-14)*v(x30,y9) - (15.2941176470589)*v(x30,y10) - (79.8597285067868)*v(x30,y11) + (2.98427949019242E-13)*v(x30,y12)
     
      + (2.98427949019242E-13)*v(x30,y13) + (2.98427949019242E-13)*v(x30,y14) - (79.8597285067868)*v(x30,y15) - (15.2941176470589)*v(x30,y16) + (7.8159700933611E-14)*v(x30,y17) + (0)*v(x30,y18) - (7.8159700933611E-14)*v(x30,y19)
     
      + (4.2632564145606E-14)*v(x30,y20) + (0)*v(x30,y21) + (0)*v(x30,y22) + (0)*v(x30,y23) + (0)*v(x30,y24) + (0)*v(x30,y25) + (52)*v(x30,y26) + (52)*v(x31,y0) + (0)*v(x31,y1) + (0)*v(x31,y2) + (0)*v(x31,y3) + (0)*v(x31,y4) + (0)*v(x31,y5)
     
      + (4.2632564145606E-14)*v(x31,y6) - (7.8159700933611E-14)*v(x31,y7) + (0)*v(x31,y8) + (7.8159700933611E-14)*v(x31,y9) - (104.573152337858)*v(x31,y10) - (10.1960784313725)*v(x31,y11) + (0)*v(x31,y12) + (0)*v(x31,y13) + (0)*v(x31,y14)
     
      - (10.1960784313725)*v(x31,y15) - (104.573152337858)*v(x31,y16) + (7.8159700933611E-14)*v(x31,y17) + (0)*v(x31,y18) - (7.8159700933611E-14)*v(x31,y19) + (4.2632564145606E-14)*v(x31,y20) + (0)*v(x31,y21) + (0)*v(x31,y22) + (0)*v(x31,y23)
     
      + (0)*v(x31,y24) + (0)*v(x31,y25) + (52)*v(x31,y26) + (52)*v(x32,y0) + (0)*v(x32,y1) + (0)*v(x32,y2) + (0)*v(x32,y3) + (0)*v(x32,y4) + (0)*v(x32,y5) + (4.2632564145606E-14)*v(x32,y6) - (7.8159700933611E-14)*v(x32,y7) + (0)*v(x32,y8)
     
      - (16.313725490196)*v(x32,y9) - (74.9170437405733)*v(x32,y10) - (2.98427949019242E-13)*v(x32,y11) - (2.98427949019242E-13)*v(x32,y12) - (2.98427949019242E-13)*v(x32,y13) - (2.98427949019242E-13)*v(x32,y14) - (2.98427949019242E-13)*v(x32,y15)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:34 Page 23
Elastic-plastic torsion COPS 2.0 #15 (TORSION,SEQ=243)
Equation Listing    SOLVE torsion Using NLP From line 83


     defQU  =E=       
     
      - (74.9170437405733)*v(x32,y16) - (16.313725490196)*v(x32,y17) + (0)*v(x32,y18) - (7.8159700933611E-14)*v(x32,y19) + (4.2632564145606E-14)*v(x32,y20) + (0)*v(x32,y21) + (0)*v(x32,y22) + (0)*v(x32,y23) + (0)*v(x32,y24) + (0)*v(x32,y25)
     
      + (52)*v(x32,y26) + (52)*v(x33,y0) + (0)*v(x33,y1) + (0)*v(x33,y2) + (0)*v(x33,y3) + (0)*v(x33,y4) + (0)*v(x33,y5) + (4.2632564145606E-14)*v(x33,y6) - (7.8159700933611E-14)*v(x33,y7) + (0)*v(x33,y8) - (109.515837104072)*v(x33,y9)
     
      - (9.17647058823496)*v(x33,y10) + (2.98427949019242E-13)*v(x33,y11) + (2.98427949019242E-13)*v(x33,y12) + (2.98427949019242E-13)*v(x33,y13) + (2.98427949019242E-13)*v(x33,y14) + (2.98427949019242E-13)*v(x33,y15) - (9.17647058823496)*v(x33,y16)
     
      - (109.515837104072)*v(x33,y17) + (0)*v(x33,y18) - (7.8159700933611E-14)*v(x33,y19) + (4.2632564145606E-14)*v(x33,y20) + (0)*v(x33,y21) + (0)*v(x33,y22) + (0)*v(x33,y23) + (0)*v(x33,y24) + (0)*v(x33,y25) + (52)*v(x33,y26) + (52)*v(x34,y0)
     
      + (0)*v(x34,y1) + (0)*v(x34,y2) + (0)*v(x34,y3) + (0)*v(x34,y4) + (0)*v(x34,y5) + (4.2632564145606E-14)*v(x34,y6) - (7.8159700933611E-14)*v(x34,y7) - (17.3333333333333)*v(x34,y8) - (69.9743589743588)*v(x34,y9) + (0)*v(x34,y10) + (0)*v(x34,y11)
     
      + (0)*v(x34,y12) + (0)*v(x34,y13) + (0)*v(x34,y14) + (0)*v(x34,y15) + (0)*v(x34,y16) - (69.9743589743588)*v(x34,y17) - (17.3333333333333)*v(x34,y18) - (7.8159700933611E-14)*v(x34,y19) + (4.2632564145606E-14)*v(x34,y20) + (0)*v(x34,y21)
     
      + (0)*v(x34,y22) + (0)*v(x34,y23) + (0)*v(x34,y24) + (0)*v(x34,y25) + (52)*v(x34,y26) + (52)*v(x35,y0) + (0)*v(x35,y1) + (0)*v(x35,y2) + (0)*v(x35,y3) + (0)*v(x35,y4) + (0)*v(x35,y5) + (4.2632564145606E-14)*v(x35,y6)
     
      - (7.8159700933611E-14)*v(x35,y7) - (114.458521870287)*v(x35,y8) - (8.15686274509801)*v(x35,y9) + (0)*v(x35,y10) + (0)*v(x35,y11) + (0)*v(x35,y12) + (0)*v(x35,y13) + (0)*v(x35,y14) + (0)*v(x35,y15) + (0)*v(x35,y16) - (8.15686274509801)*v(x35,y17)
     
      - (114.458521870287)*v(x35,y18) - (7.8159700933611E-14)*v(x35,y19) + (4.2632564145606E-14)*v(x35,y20) + (0)*v(x35,y21) + (0)*v(x35,y22) + (0)*v(x35,y23) + (0)*v(x35,y24) + (0)*v(x35,y25) + (52)*v(x35,y26) + (52)*v(x36,y0) + (0)*v(x36,y1)
     
      + (0)*v(x36,y2) + (0)*v(x36,y3) + (0)*v(x36,y4) + (0)*v(x36,y5) + (4.2632564145606E-14)*v(x36,y6) - (18.3529411764707)*v(x36,y7) - (65.0316742081446)*v(x36,y8) + (0)*v(x36,y9) + (0)*v(x36,y10) + (0)*v(x36,y11) + (0)*v(x36,y12) + (0)*v(x36,y13)
     
      + (0)*v(x36,y14) + (0)*v(x36,y15) + (0)*v(x36,y16) + (0)*v(x36,y17) - (65.0316742081446)*v(x36,y18) - (18.3529411764707)*v(x36,y19) + (4.2632564145606E-14)*v(x36,y20) + (0)*v(x36,y21) + (0)*v(x36,y22) + (0)*v(x36,y23) + (0)*v(x36,y24)
     
      + (0)*v(x36,y25) + (52)*v(x36,y26) + (52)*v(x37,y0) + (0)*v(x37,y1) + (0)*v(x37,y2) + (0)*v(x37,y3) + (0)*v(x37,y4) + (0)*v(x37,y5) + (4.2632564145606E-14)*v(x37,y6) - (119.401206636501)*v(x37,y7) - (7.13725490196106)*v(x37,y8)
     
      - (2.98427949019242E-13)*v(x37,y9) - (2.98427949019242E-13)*v(x37,y10) - (2.98427949019242E-13)*v(x37,y11) - (2.98427949019242E-13)*v(x37,y12) - (2.98427949019242E-13)*v(x37,y13) - (2.98427949019242E-13)*v(x37,y14)
     
      - (2.98427949019242E-13)*v(x37,y15) - (2.98427949019242E-13)*v(x37,y16) - (2.98427949019242E-13)*v(x37,y17) - (7.13725490196106)*v(x37,y18) - (119.401206636501)*v(x37,y19) + (4.2632564145606E-14)*v(x37,y20) + (0)*v(x37,y21) + (0)*v(x37,y22)
     
      + (0)*v(x37,y23) + (0)*v(x37,y24) + (0)*v(x37,y25) + (52)*v(x37,y26) + (52)*v(x38,y0) + (0)*v(x38,y1) + (0)*v(x38,y2) + (0)*v(x38,y3) + (0)*v(x38,y4) + (0)*v(x38,y5) - (19.3725490196079)*v(x38,y6) - (60.0889894419302)*v(x38,y7)
     
      + (2.98427949019242E-13)*v(x38,y8) + (2.98427949019242E-13)*v(x38,y9) + (2.98427949019242E-13)*v(x38,y10) + (2.98427949019242E-13)*v(x38,y11) + (2.98427949019242E-13)*v(x38,y12) + (2.98427949019242E-13)*v(x38,y13) + (2.98427949019242E-13)*v(x38,y14)
     
      + (2.98427949019242E-13)*v(x38,y15) + (2.98427949019242E-13)*v(x38,y16) + (2.98427949019242E-13)*v(x38,y17) + (2.98427949019242E-13)*v(x38,y18) - (60.0889894419302)*v(x38,y19) - (19.3725490196079)*v(x38,y20) + (0)*v(x38,y21) + (0)*v(x38,y22)
     
      + (0)*v(x38,y23) + (0)*v(x38,y24) + (0)*v(x38,y25) + (52)*v(x38,y26) + (52)*v(x39,y0) + (0)*v(x39,y1) + (0)*v(x39,y2) + (0)*v(x39,y3) + (0)*v(x39,y4) + (0)*v(x39,y5) - (124.343891402715)*v(x39,y6) - (6.11764705882351)*v(x39,y7) + (0)*v(x39,y8)
     
      + (0)*v(x39,y9) + (0)*v(x39,y10) + (0)*v(x39,y11) + (0)*v(x39,y12) + (0)*v(x39,y13) + (0)*v(x39,y14) + (0)*v(x39,y15) + (0)*v(x39,y16) + (0)*v(x39,y17) + (0)*v(x39,y18) - (6.11764705882351)*v(x39,y19) - (124.343891402715)*v(x39,y20) + (0)*v(x39,y21)
     
      + (0)*v(x39,y22) + (0)*v(x39,y23) + (0)*v(x39,y24) + (0)*v(x39,y25) + (52)*v(x39,y26) + (52)*v(x40,y0) + (0)*v(x40,y1) + (0)*v(x40,y2) + (0)*v(x40,y3) + (0)*v(x40,y4) - (20.3921568627451)*v(x40,y5) - (55.1463046757165)*v(x40,y6)
     
      - (1.4210854715202E-13)*v(x40,y7) - (1.4210854715202E-13)*v(x40,y8) - (1.4210854715202E-13)*v(x40,y9) - (1.4210854715202E-13)*v(x40,y10) - (1.4210854715202E-13)*v(x40,y11) - (1.4210854715202E-13)*v(x40,y12) - (1.4210854715202E-13)*v(x40,y13)
     
      - (1.4210854715202E-13)*v(x40,y14) - (1.4210854715202E-13)*v(x40,y15) - (1.4210854715202E-13)*v(x40,y16) - (1.4210854715202E-13)*v(x40,y17) - (1.4210854715202E-13)*v(x40,y18) - (1.4210854715202E-13)*v(x40,y19) - (55.1463046757165)*v(x40,y20)
     
      - (20.3921568627451)*v(x40,y21) + (0)*v(x40,y22) + (0)*v(x40,y23) + (0)*v(x40,y24) + (0)*v(x40,y25) + (52)*v(x40,y26) + (52)*v(x41,y0) + (0)*v(x41,y1) + (0)*v(x41,y2) + (0)*v(x41,y3) + (0)*v(x41,y4) - (129.286576168929)*v(x41,y5)
     
      - (5.09803921568626)*v(x41,y6) + (0)*v(x41,y7) + (0)*v(x41,y8) + (0)*v(x41,y9) + (0)*v(x41,y10) + (0)*v(x41,y11) + (0)*v(x41,y12) + (0)*v(x41,y13) + (0)*v(x41,y14) + (0)*v(x41,y15) + (0)*v(x41,y16) + (0)*v(x41,y17) + (0)*v(x41,y18) + (0)*v(x41,y19)
     
      - (5.09803921568626)*v(x41,y20) - (129.286576168929)*v(x41,y21) + (0)*v(x41,y22) + (0)*v(x41,y23) + (0)*v(x41,y24) + (0)*v(x41,y25) + (52)*v(x41,y26) + (52)*v(x42,y0) + (0)*v(x42,y1) + (0)*v(x42,y2) + (0)*v(x42,y3) - (21.4117647058824)*v(x42,y4)
     
      - (50.203619909502)*v(x42,y5) + (1.4210854715202E-13)*v(x42,y6) + (1.4210854715202E-13)*v(x42,y7) + (1.4210854715202E-13)*v(x42,y8) + (1.4210854715202E-13)*v(x42,y9) + (1.4210854715202E-13)*v(x42,y10) + (1.4210854715202E-13)*v(x42,y11)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:34 Page 24
Elastic-plastic torsion COPS 2.0 #15 (TORSION,SEQ=243)
Equation Listing    SOLVE torsion Using NLP From line 83


     defQU  =E=       
     
      + (1.4210854715202E-13)*v(x42,y12) + (1.4210854715202E-13)*v(x42,y13) + (1.4210854715202E-13)*v(x42,y14) + (1.4210854715202E-13)*v(x42,y15) + (1.4210854715202E-13)*v(x42,y16) + (1.4210854715202E-13)*v(x42,y17) + (1.4210854715202E-13)*v(x42,y18)
     
      + (1.4210854715202E-13)*v(x42,y19) + (1.4210854715202E-13)*v(x42,y20) - (50.203619909502)*v(x42,y21) - (21.4117647058824)*v(x42,y22) + (0)*v(x42,y23) + (0)*v(x42,y24) + (0)*v(x42,y25) + (52)*v(x42,y26) + (52)*v(x43,y0) + (0)*v(x43,y1)
     
      + (0)*v(x43,y2) + (0)*v(x43,y3) - (134.229260935143)*v(x43,y4) - (4.07843137254901)*v(x43,y5) + (0)*v(x43,y6) + (0)*v(x43,y7) + (0)*v(x43,y8) + (0)*v(x43,y9) + (0)*v(x43,y10) + (0)*v(x43,y11) + (0)*v(x43,y12) + (0)*v(x43,y13) + (0)*v(x43,y14)
     
      + (0)*v(x43,y15) + (0)*v(x43,y16) + (0)*v(x43,y17) + (0)*v(x43,y18) + (0)*v(x43,y19) + (0)*v(x43,y20) - (4.07843137254901)*v(x43,y21) - (134.229260935143)*v(x43,y22) + (0)*v(x43,y23) + (0)*v(x43,y24) + (0)*v(x43,y25) + (52)*v(x43,y26)
     
      + (52)*v(x44,y0) + (0)*v(x44,y1) + (0)*v(x44,y2) - (22.4313725490196)*v(x44,y3) - (45.2609351432882)*v(x44,y4) - (1.4210854715202E-13)*v(x44,y5) - (1.4210854715202E-13)*v(x44,y6) - (1.4210854715202E-13)*v(x44,y7) - (1.4210854715202E-13)*v(x44,y8)
     
      - (1.4210854715202E-13)*v(x44,y9) - (1.4210854715202E-13)*v(x44,y10) - (1.4210854715202E-13)*v(x44,y11) - (1.4210854715202E-13)*v(x44,y12) - (1.4210854715202E-13)*v(x44,y13) - (1.4210854715202E-13)*v(x44,y14) - (1.4210854715202E-13)*v(x44,y15)
     
      - (1.4210854715202E-13)*v(x44,y16) - (1.4210854715202E-13)*v(x44,y17) - (1.4210854715202E-13)*v(x44,y18) - (1.4210854715202E-13)*v(x44,y19) - (1.4210854715202E-13)*v(x44,y20) - (1.4210854715202E-13)*v(x44,y21) - (45.2609351432882)*v(x44,y22)
     
      - (22.4313725490196)*v(x44,y23) + (0)*v(x44,y24) + (0)*v(x44,y25) + (52)*v(x44,y26) + (52)*v(x45,y0) + (0)*v(x45,y1) + (0)*v(x45,y2) - (139.171945701358)*v(x45,y3) - (3.05882352941168)*v(x45,y4) + (7.105427357601E-14)*v(x45,y5)
     
      + (7.105427357601E-14)*v(x45,y6) + (7.105427357601E-14)*v(x45,y7) + (7.105427357601E-14)*v(x45,y8) + (7.105427357601E-14)*v(x45,y9) + (7.105427357601E-14)*v(x45,y10) + (7.105427357601E-14)*v(x45,y11) + (7.105427357601E-14)*v(x45,y12)
     
      + (7.105427357601E-14)*v(x45,y13) + (7.105427357601E-14)*v(x45,y14) + (7.105427357601E-14)*v(x45,y15) + (7.105427357601E-14)*v(x45,y16) + (7.105427357601E-14)*v(x45,y17) + (7.105427357601E-14)*v(x45,y18) + (7.105427357601E-14)*v(x45,y19)
     
      + (7.105427357601E-14)*v(x45,y20) + (7.105427357601E-14)*v(x45,y21) - (3.05882352941168)*v(x45,y22) - (139.171945701358)*v(x45,y23) + (0)*v(x45,y24) + (0)*v(x45,y25) + (52)*v(x45,y26) + (52)*v(x46,y0) + (0)*v(x46,y1) - (23.4509803921569)*v(x46,y2)
     
      - (40.3182503770739)*v(x46,y3) + (0)*v(x46,y4) + (0)*v(x46,y5) + (0)*v(x46,y6) + (0)*v(x46,y7) + (0)*v(x46,y8) + (0)*v(x46,y9) + (0)*v(x46,y10) + (0)*v(x46,y11) + (0)*v(x46,y12) + (0)*v(x46,y13) + (0)*v(x46,y14) + (0)*v(x46,y15) + (0)*v(x46,y16)
     
      + (0)*v(x46,y17) + (0)*v(x46,y18) + (0)*v(x46,y19) + (0)*v(x46,y20) + (0)*v(x46,y21) + (0)*v(x46,y22) - (40.3182503770739)*v(x46,y23) - (23.4509803921569)*v(x46,y24) + (0)*v(x46,y25) + (52)*v(x46,y26) + (52)*v(x47,y0) + (0)*v(x47,y1)
     
      - (144.114630467572)*v(x47,y2) - (2.0392156862745)*v(x47,y3) + (0)*v(x47,y4) + (0)*v(x47,y5) + (0)*v(x47,y6) + (0)*v(x47,y7) + (0)*v(x47,y8) + (0)*v(x47,y9) + (0)*v(x47,y10) + (0)*v(x47,y11) + (0)*v(x47,y12) + (0)*v(x47,y13) + (0)*v(x47,y14)
     
      + (0)*v(x47,y15) + (0)*v(x47,y16) + (0)*v(x47,y17) + (0)*v(x47,y18) + (0)*v(x47,y19) + (0)*v(x47,y20) + (0)*v(x47,y21) + (0)*v(x47,y22) - (2.0392156862745)*v(x47,y23) - (144.114630467572)*v(x47,y24) + (0)*v(x47,y25) + (52)*v(x47,y26)
     
      + (52)*v(x48,y0) - (24.4705882352941)*v(x48,y1) - (35.3755656108597)*v(x48,y2) + (0)*v(x48,y3) + (0)*v(x48,y4) + (0)*v(x48,y5) + (0)*v(x48,y6) + (0)*v(x48,y7) + (0)*v(x48,y8) + (0)*v(x48,y9) + (0)*v(x48,y10) + (0)*v(x48,y11) + (0)*v(x48,y12)
     
      + (0)*v(x48,y13) + (0)*v(x48,y14) + (0)*v(x48,y15) + (0)*v(x48,y16) + (0)*v(x48,y17) + (0)*v(x48,y18) + (0)*v(x48,y19) + (0)*v(x48,y20) + (0)*v(x48,y21) + (0)*v(x48,y22) + (0)*v(x48,y23) - (35.3755656108597)*v(x48,y24)
     
      - (24.4705882352941)*v(x48,y25) + (52)*v(x48,y26) + (52)*v(x49,y0) - (149.057315233786)*v(x49,y1) - (1.01960784313725)*v(x49,y2) + (0)*v(x49,y3) + (0)*v(x49,y4) + (0)*v(x49,y5) + (0)*v(x49,y6) + (0)*v(x49,y7) + (0)*v(x49,y8) + (0)*v(x49,y9)
     
      + (0)*v(x49,y10) + (0)*v(x49,y11) + (0)*v(x49,y12) + (0)*v(x49,y13) + (0)*v(x49,y14) + (0)*v(x49,y15) + (0)*v(x49,y16) + (0)*v(x49,y17) + (0)*v(x49,y18) + (0)*v(x49,y19) + (0)*v(x49,y20) + (0)*v(x49,y21) + (0)*v(x49,y22) + (0)*v(x49,y23)
     
      - (1.01960784313725)*v(x49,y24) - (149.057315233786)*v(x49,y25) + (52)*v(x49,y26) + (26.5098039215686)*v(x50,y0) - (30.4328808446455)*v(x50,y1) + (0)*v(x50,y2) + (0)*v(x50,y3) + (0)*v(x50,y4) + (0)*v(x50,y5) + (0)*v(x50,y6) + (0)*v(x50,y7)
     
      + (0)*v(x50,y8) + (0)*v(x50,y9) + (0)*v(x50,y10) + (0)*v(x50,y11) + (0)*v(x50,y12) + (0)*v(x50,y13) + (0)*v(x50,y14) + (0)*v(x50,y15) + (0)*v(x50,y16) + (0)*v(x50,y17) + (0)*v(x50,y18) + (0)*v(x50,y19) + (0)*v(x50,y20) + (0)*v(x50,y21)
     
      + (0)*v(x50,y22) + (0)*v(x50,y23) + (0)*v(x50,y24) - (30.4328808446455)*v(x50,y25) + (26.5098039215686)*v(x50,y26) + (0)*v(x51,y0) + (102)*v(x51,y1) + (102)*v(x51,y2) + (102)*v(x51,y3) + (102)*v(x51,y4) + (102)*v(x51,y5) + (102)*v(x51,y6)
     
      + (102)*v(x51,y7) + (102)*v(x51,y8) + (102)*v(x51,y9) + (102)*v(x51,y10) + (102)*v(x51,y11) + (102)*v(x51,y12) + (102)*v(x51,y13) + (102)*v(x51,y14) + (102)*v(x51,y15) + (102)*v(x51,y16) + (102)*v(x51,y17) + (102)*v(x51,y18) + (102)*v(x51,y19)
     
      + (102)*v(x51,y20) + (102)*v(x51,y21) + (102)*v(x51,y22) + (102)*v(x51,y23) + (102)*v(x51,y24) + (102)*v(x51,y25) + (0)*v(x51,y26) + quadUpper =E= 0 ; (LHS = -1299.59778783308, INFES = 1299.59778783308 ****)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:34 Page 25
Elastic-plastic torsion COPS 2.0 #15 (TORSION,SEQ=243)
Equation Listing    SOLVE torsion Using NLP From line 83


---- defstress  =E=  

defstress..  stress + 0.000628456510809452*linLower + 0.000628456510809452*linUpper - 0.000188536953242836*quadLower - 0.000188536953242836*quadUpper =E= 0 ; (LHS = 0)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:34 Page 26
Elastic-plastic torsion COPS 2.0 #15 (TORSION,SEQ=243)
Column Listing      SOLVE torsion Using NLP From line 83


---- v  defines the finite element approximation

v(x0,y0)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       -1       defLL
       (0)      defQL

v(x0,y1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       -2       defLL
       -1       defLU
     (102)      defQL
     (102)      defQU

v(x0,y2)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       -2       defLL
       -1       defLU
     (102)      defQL
     (102)      defQU

REMAINING 1401 ENTRIES SKIPPED

---- stress  

stress
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       defstress


---- linLower  

linLower
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       defLL
        0.0006  defstress


---- linUpper  

linUpper
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       defLU
        0.0006  defstress


---- quadLower  

quadLower
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       defQL
       -0.0002  defstress

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:34 Page 27
Elastic-plastic torsion COPS 2.0 #15 (TORSION,SEQ=243)
Column Listing      SOLVE torsion Using NLP From line 83


---- quadUpper  

quadUpper
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       defQU
       -0.0002  defstress

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:34 Page 28
Elastic-plastic torsion COPS 2.0 #15 (TORSION,SEQ=243)
Model Statistics    SOLVE torsion Using NLP From line 83


MODEL STATISTICS

BLOCKS OF EQUATIONS           5     SINGLE EQUATIONS            5
BLOCKS OF VARIABLES           6     SINGLE VARIABLES        1,409
NON ZERO ELEMENTS         5,621     NON LINEAR N-Z          2,806
DERIVATIVE POOL              20     CONSTANT POOL              20
CODE LENGTH              31,828


GENERATION TIME      =        0.018 SECONDS      4 MB  24.7.4 r58773 LEX-LEG


EXECUTION TIME       =        0.021 SECONDS      4 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:34 Page 29
Elastic-plastic torsion COPS 2.0 #15 (TORSION,SEQ=243)
Solution Report     SOLVE torsion Using NLP From line 83


               S O L V E      S U M M A R Y

     MODEL   torsion             OBJECTIVE  stress
     TYPE    NLP                 DIRECTION  MINIMIZE
     SOLVER  CONVERT             FROM LINE  83

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      14 No Solution Returned     
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.000      1000.000
 ITERATION COUNT, LIMIT         0    2000000000
 EVALUATION ERRORS              0             0

Convert 2.0      24.7.4 r58773 Released Sep 19, 2016 LEG x86 64bit/Linux      

--- Using Option File
Reading parameter(s) from "/home/renigijus/gams/opt-mod-lib/gamslib/torsion/convert.opt"
>>  ampl torsion-scalar.mod
Finished reading from "/home/renigijus/gams/opt-mod-lib/gamslib/torsion/convert.opt"
Ampl      : torsion-scalar.mod


No solution returned


EXECUTION TIME       =        0.000 SECONDS      2 MB  24.7.4 r58773 LEX-LEG


USER: Remigijus Paulavicius, Single User License     S170731:0859AO-LNX
      Imperial College London, Dept. of Chemical Engineering    DC13449
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      /home/renigijus/gams/opt-mod-lib/gamslib/torsion/torsion.gms
Output     /home/renigijus/gams/opt-mod-lib/gamslib/torsion/torsion-scalar.mod.lst
