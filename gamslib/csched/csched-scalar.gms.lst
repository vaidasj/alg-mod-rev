GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:32:29 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  option MINLP=convert;
   2  option MINLP=convert;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:32:29 Page 2
Cyclic Scheduling of Continuous Parallel Units (CSCHED,SEQ=222)
C o m p i l a t i o n


      Cyclic Scheduling of Continuous Parallel Units
       
       
      Jain, V, and Grossmann, I E, Cyclic Scheduling of Continuous
      Parallel Units with Decaying Performance. American Institute
      of Chemical Engineers Journal 44, 7 (1998), 1623-1636.
       
  13   
  14   
  15  Set k        subcycles
  16      kzero(k) subcycle 0
  17      i        furnaces
  18      j        feeds
  19   
  20  Parameter tau(i,j) "changeover time [days]"
  21            D(i,j)   "processing rate [tons/day]"
  22            a(i,j)   "conversion parameters [1/day]"
  23            b(i,j)   "conversion parameter [1/day]"
  24            c(i,j)   "conversion parameter [1/day]"
  25            p(i,j)   "price parameter [$/ton]"
  26            Cs(i,j)  "setup/cleaning cost [$]"
  27            Flo(j)   lower bnd on flow rate
  28            Fup(j)   upper bnd on flow rate
  29            Cc(i,j)
  30            Cp(i,j)
  31            yk(k);
  32   
  33  Scalar U upper bound on processing time
  34         epsi "small const to avoid 0/0"
  35   
  36  Variables t(i,j)   process time of feed in furnace
  37            n(i,j)   number of subcycles of feed in furnace
  38            F(j)     rate of arrival of feed j
  39            S(j)     extra amount of feed processed above min
  40            dt(i,j)  time devoted to feed in furnace
  41            Tcycle   common cycle time for all furnaces
  42            y(i,j,k) "SOS to model n(i,j)"
  43            obj      objective variable;
  44   
  45  Positive Variable t, n, S, dt, Tcycle;
  46  Binary Variable y;
  47   
  48  Equation   defobj       "objective is to maximize profit/cycle-time"
  49             massbal_1(j) "mass balance equations (8)"
  50             massbal_2(j) "mass balance equations (9)"
  51             integ_1(i,j) "integrality constraints (10)"
  52             integ_2(i,j) "integrality constraints (11)"
  53             time_1(i,j)  "relate total time of feed to processing & clean-up"
  54             time_2(i)    "total time less than cycle time"
  55             time_3(i,j)  "t(i,j) is zero if number of subcycles is zero"
  56             extra(j)     "extra constraints";
  57   
  58  defobj.. Tcycle * obj =e=  sum((i,j),
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:32:29 Page 3
Cyclic Scheduling of Continuous Parallel Units (CSCHED,SEQ=222)
C o m p i l a t i o n


  59                          Cc(i,j)*t(i,j) - Cs(i,j)*n(i,j)
  60                        + Cp(i,j)*n(i,j)*(1 - exp(-b(i,j)*t(i,j)/n(i,j)))) ;
  61   
  62  massbal_1(j).. Flo(j)*Tcycle + S(j) =e= sum(i, D(i,j)*t(i,j));
  63  massbal_2(j).. S(j) =l= (Fup(j) - Flo(j))*Tcycle;
  64   
  65  integ_1(i,j).. n(i,j) =e= sum(k, yk(k) * y(i,j,k));
  66  integ_2(i,j).. 1 =e= sum(k, y(i,j,k));
  67   
  68  time_1(i,j)..  dt(i,j) =e= n(i,j)*tau(i,j) + t(i,j);
  69  time_2(i)..    sum(j, dt(i,j)) =l= Tcycle;
  70  time_3(i,j)..  t(i,j) =l= sum(kzero,U*(1 - y(i,j,kzero)));
  71   
  72  extra(j)$(Flo(j) > 0).. sum(i, n(i,j)) =g= 1;
  73   
  74  model csched /all/;
  75   
INCLUDE    /home/renigijus/gams/opt-mod-lib/gamslib/csched/csched1.inc
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:32:29 Page 4
Include data set 1 for model csched
C o m p i l a t i o n


  79   
  80   
  81  set k subcycles      / 0*20 /
  82      kzero(k)         / 0 /
  83      i furnaces       / 1 /
  84      j feeds          / A,B,C /;
  85   
  86  scalar U upper bound on processing time / 150    /
  87         epsi "small const to avoid 0/0"  /   0.01 /;
  88   
  89  Table tau(i,j) "changeover time [days]"
  90                  A       B       C
  91          1       2       3       3;
  92   
  93  Table D(i,j) "processing rate [tons/day]"
  94                  A       B       C
  95          1       1300    1000    1100;
  96   
  97  Table a(i,j) "conversion parameters [1/day]"
  98                  A       B       C
  99          1       0.2     0.18    0.19;
 100   
 101  Table b(i,j) "conversion parameter [1/day]"
 102                  A       B       C
 103          1       0.1     0.13    0.09;
 104   
 105  Table c(i,j) "conversion parameter [1/day]"
 106                  A       B       C
 107          1       0.18    0.1     0.12;
 108   
 109  Table p(i,j) "price parameter [$/ton]"
 110                  A       B       C
 111          1       160     90      120;
 112   
 113  Table Cs(i,j) "setup/cleaning cost [$]"
 114                  A       B       C
 115          1       100     90      80;
 116   
 117  Parameter Flo(j) lower bnd on flow rate / A  350, B  300, C  300 /
 118            Fup(j) upper bnd on flow rate / A  650, B  600, C  600 /;
 119   
 120   
 121  yk(k) = ord(k)-1; yk(kzero) = epsi;
 122  Cc(i,j) = P(i,j)*D(i,j)*c(i,j);
 123  Cp(i,j) = P(i,j)*D(i,j)*a(i,j)/ b(i,j);
 124   
 125  n.up(i,j) = card(k)-1;
 126  n.l(i,j) = 1;
 127  n.lo(i,j) = epsi;
 128  F.lo(j) = Flo(j); F.up(j) = Fup(j);
 129  Tcycle.l = 100;
 130   
 131  solve csched maximizing obj using minlp;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:32:29 Page 5
Include data set 1 for model csched
C o m p i l a t i o n


 132   
 133   
 134   
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:32:29 Page 6
Include data set 1 for model csched
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  /home/renigijus/gams/opt-mod-lib/gamslib/csched/csched.gms
     2       77 INCLUDE        1      77  ./home/renigijus/gams/opt-mod-lib/gamslib/csched/csched1.inc


COMPILATION TIME     =        0.001 SECONDS      3 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:32:29 Page 7
Include data set 1 for model csched
Equation Listing    SOLVE csched Using MINLP From line 131


---- defobj  =E=  objective is to maximize profit/cycle-time

defobj..  - (79040)*t(1,A) - (25200)*t(1,B) - (40920)*t(1,C) + (100)*n(1,A) + (90)*n(1,B) + (80)*n(1,C) + (0)*Tcycle + (100)*obj =E= 0 ; (LHS = 270, INFES = 270 ****)
     

---- massbal_1  =E=  mass balance equations (8)

massbal_1(A)..  - 1300*t(1,A) + S(A) + 350*Tcycle =E= 0 ; (LHS = 35000, INFES = 35000 ****)
     
massbal_1(B)..  - 1000*t(1,B) + S(B) + 300*Tcycle =E= 0 ; (LHS = 30000, INFES = 30000 ****)
     
massbal_1(C)..  - 1100*t(1,C) + S(C) + 300*Tcycle =E= 0 ; (LHS = 30000, INFES = 30000 ****)
     

---- massbal_2  =L=  mass balance equations (9)

massbal_2(A)..  S(A) - 300*Tcycle =L= 0 ; (LHS = -30000)
     
massbal_2(B)..  S(B) - 300*Tcycle =L= 0 ; (LHS = -30000)
     
massbal_2(C)..  S(C) - 300*Tcycle =L= 0 ; (LHS = -30000)
     

---- integ_1  =E=  integrality constraints (10)

integ_1(1,A)..  n(1,A) - 0.01*y(1,A,0) - y(1,A,1) - 2*y(1,A,2) - 3*y(1,A,3) - 4*y(1,A,4) - 5*y(1,A,5) - 6*y(1,A,6) - 7*y(1,A,7) - 8*y(1,A,8) - 9*y(1,A,9) - 10*y(1,A,10) - 11*y(1,A,11) - 12*y(1,A,12) - 13*y(1,A,13) - 14*y(1,A,14) - 15*y(1,A,15)
     
      - 16*y(1,A,16) - 17*y(1,A,17) - 18*y(1,A,18) - 19*y(1,A,19) - 20*y(1,A,20) =E= 0 ; (LHS = 1, INFES = 1 ****)
     
integ_1(1,B)..  n(1,B) - 0.01*y(1,B,0) - y(1,B,1) - 2*y(1,B,2) - 3*y(1,B,3) - 4*y(1,B,4) - 5*y(1,B,5) - 6*y(1,B,6) - 7*y(1,B,7) - 8*y(1,B,8) - 9*y(1,B,9) - 10*y(1,B,10) - 11*y(1,B,11) - 12*y(1,B,12) - 13*y(1,B,13) - 14*y(1,B,14) - 15*y(1,B,15)
     
      - 16*y(1,B,16) - 17*y(1,B,17) - 18*y(1,B,18) - 19*y(1,B,19) - 20*y(1,B,20) =E= 0 ; (LHS = 1, INFES = 1 ****)
     
integ_1(1,C)..  n(1,C) - 0.01*y(1,C,0) - y(1,C,1) - 2*y(1,C,2) - 3*y(1,C,3) - 4*y(1,C,4) - 5*y(1,C,5) - 6*y(1,C,6) - 7*y(1,C,7) - 8*y(1,C,8) - 9*y(1,C,9) - 10*y(1,C,10) - 11*y(1,C,11) - 12*y(1,C,12) - 13*y(1,C,13) - 14*y(1,C,14) - 15*y(1,C,15)
     
      - 16*y(1,C,16) - 17*y(1,C,17) - 18*y(1,C,18) - 19*y(1,C,19) - 20*y(1,C,20) =E= 0 ; (LHS = 1, INFES = 1 ****)
     

---- integ_2  =E=  integrality constraints (11)

integ_2(1,A)..  - y(1,A,0) - y(1,A,1) - y(1,A,2) - y(1,A,3) - y(1,A,4) - y(1,A,5) - y(1,A,6) - y(1,A,7) - y(1,A,8) - y(1,A,9) - y(1,A,10) - y(1,A,11) - y(1,A,12) - y(1,A,13) - y(1,A,14) - y(1,A,15) - y(1,A,16) - y(1,A,17) - y(1,A,18) - y(1,A,19)
     
      - y(1,A,20) =E= -1 ; (LHS = 0, INFES = 1 ****)
     
integ_2(1,B)..  - y(1,B,0) - y(1,B,1) - y(1,B,2) - y(1,B,3) - y(1,B,4) - y(1,B,5) - y(1,B,6) - y(1,B,7) - y(1,B,8) - y(1,B,9) - y(1,B,10) - y(1,B,11) - y(1,B,12) - y(1,B,13) - y(1,B,14) - y(1,B,15) - y(1,B,16) - y(1,B,17) - y(1,B,18) - y(1,B,19)
     
      - y(1,B,20) =E= -1 ; (LHS = 0, INFES = 1 ****)
     
integ_2(1,C)..  - y(1,C,0) - y(1,C,1) - y(1,C,2) - y(1,C,3) - y(1,C,4) - y(1,C,5) - y(1,C,6) - y(1,C,7) - y(1,C,8) - y(1,C,9) - y(1,C,10) - y(1,C,11) - y(1,C,12) - y(1,C,13) - y(1,C,14) - y(1,C,15) - y(1,C,16) - y(1,C,17) - y(1,C,18) - y(1,C,19)
     
      - y(1,C,20) =E= -1 ; (LHS = 0, INFES = 1 ****)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:32:29 Page 8
Include data set 1 for model csched
Equation Listing    SOLVE csched Using MINLP From line 131


---- time_1  =E=  relate total time of feed to processing & clean-up

time_1(1,A)..  - t(1,A) - 2*n(1,A) + dt(1,A) =E= 0 ; (LHS = -2, INFES = 2 ****)
     
time_1(1,B)..  - t(1,B) - 3*n(1,B) + dt(1,B) =E= 0 ; (LHS = -3, INFES = 3 ****)
     
time_1(1,C)..  - t(1,C) - 3*n(1,C) + dt(1,C) =E= 0 ; (LHS = -3, INFES = 3 ****)
     

---- time_2  =L=  total time less than cycle time

time_2(1)..  dt(1,A) + dt(1,B) + dt(1,C) - Tcycle =L= 0 ; (LHS = -100)
     

---- time_3  =L=  t(i,j) is zero if number of subcycles is zero

time_3(1,A)..  t(1,A) + 150*y(1,A,0) =L= 150 ; (LHS = 0)
     
time_3(1,B)..  t(1,B) + 150*y(1,B,0) =L= 150 ; (LHS = 0)
     
time_3(1,C)..  t(1,C) + 150*y(1,C,0) =L= 150 ; (LHS = 0)
     

---- extra  =G=  extra constraints

extra(A)..  n(1,A) =G= 1 ; (LHS = 1)
     
extra(B)..  n(1,B) =G= 1 ; (LHS = 1)
     
extra(C)..  n(1,C) =G= 1 ; (LHS = 1)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:32:29 Page 9
Include data set 1 for model csched
Column Listing      SOLVE csched Using MINLP From line 131


---- t  process time of feed in furnace

t(1,A)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
  (-79040)      defobj
    -1300       massbal_1(A)
       -1       time_1(1,A)
        1       time_3(1,A)

t(1,B)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
  (-25200)      defobj
    -1000       massbal_1(B)
       -1       time_1(1,B)
        1       time_3(1,B)

t(1,C)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
  (-40920)      defobj
    -1100       massbal_1(C)
       -1       time_1(1,C)
        1       time_3(1,C)


---- n  number of subcycles of feed in furnace

n(1,A)
                (.LO, .L, .UP, .M = 0.01, 1, 20, 0)
     (100)      defobj
        1       integ_1(1,A)
       -2       time_1(1,A)
        1       extra(A)

n(1,B)
                (.LO, .L, .UP, .M = 0.01, 1, 20, 0)
      (90)      defobj
        1       integ_1(1,B)
       -3       time_1(1,B)
        1       extra(B)

n(1,C)
                (.LO, .L, .UP, .M = 0.01, 1, 20, 0)
      (80)      defobj
        1       integ_1(1,C)
       -3       time_1(1,C)
        1       extra(C)


---- S  extra amount of feed processed above min

S(A)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       massbal_1(A)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:32:29 Page 10
Include data set 1 for model csched
Column Listing      SOLVE csched Using MINLP From line 131


     S  extra amount of feed processed above min

        1       massbal_2(A)

S(B)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       massbal_1(B)
        1       massbal_2(B)

S(C)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       massbal_1(C)
        1       massbal_2(C)


---- dt  time devoted to feed in furnace

dt(1,A)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       time_1(1,A)
        1       time_2(1)

dt(1,B)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       time_1(1,B)
        1       time_2(1)

dt(1,C)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       time_1(1,C)
        1       time_2(1)


---- Tcycle  common cycle time for all furnaces

Tcycle
                (.LO, .L, .UP, .M = 0, 100, +INF, 0)
       (0)      defobj
      350       massbal_1(A)
      300       massbal_1(B)
      300       massbal_1(C)
     -300       massbal_2(A)
     -300       massbal_2(B)
     -300       massbal_2(C)
       -1       time_2(1)


---- y  SOS to model n(i,j)

y(1,A,0)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
       -0.01    integ_1(1,A)
       -1       integ_2(1,A)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:32:29 Page 11
Include data set 1 for model csched
Column Listing      SOLVE csched Using MINLP From line 131


     y  SOS to model n(i,j)

      150       time_3(1,A)

y(1,A,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
       -1       integ_1(1,A)
       -1       integ_2(1,A)

y(1,A,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
       -2       integ_1(1,A)
       -1       integ_2(1,A)

REMAINING 60 ENTRIES SKIPPED

---- obj  objective variable

obj
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
     (100)      defobj

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:32:29 Page 12
Include data set 1 for model csched
Model Statistics    SOLVE csched Using MINLP From line 131


MODEL STATISTICS

BLOCKS OF EQUATIONS           9     SINGLE EQUATIONS           23
BLOCKS OF VARIABLES           7     SINGLE VARIABLES           77
NON ZERO ELEMENTS           174     NON LINEAR N-Z              8
DERIVATIVE POOL              20     CONSTANT POOL              27
CODE LENGTH                  52     DISCRETE VARIABLES         63


GENERATION TIME      =        0.003 SECONDS      4 MB  24.7.4 r58773 LEX-LEG


EXECUTION TIME       =        0.003 SECONDS      4 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 10:32:29 Page 13
Include data set 1 for model csched
Solution Report     SOLVE csched Using MINLP From line 131


               S O L V E      S U M M A R Y

     MODEL   csched              OBJECTIVE  obj
     TYPE    MINLP               DIRECTION  MAXIMIZE
     SOLVER  CONVERT             FROM LINE  131

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      14 No Solution Returned     
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.000      1000.000
 ITERATION COUNT, LIMIT         0    2000000000
 EVALUATION ERRORS              0             0

Convert 2.0      24.7.4 r58773 Released Sep 19, 2016 LEG x86 64bit/Linux      

--- Using Option File
Reading parameter(s) from "/home/renigijus/gams/opt-mod-lib/gamslib/csched/convert.opt"
>>  gams csched-scalar.gms
Finished reading from "/home/renigijus/gams/opt-mod-lib/gamslib/csched/convert.opt"
Gams      : csched-scalar.gms


No solution returned


EXECUTION TIME       =        0.000 SECONDS      2 MB  24.7.4 r58773 LEX-LEG


USER: Remigijus Paulavicius, Single User License     S170731:0859AO-LNX
      Imperial College London, Dept. of Chemical Engineering    DC13449
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      /home/renigijus/gams/opt-mod-lib/gamslib/csched/csched.gms
Output     /home/renigijus/gams/opt-mod-lib/gamslib/csched/csched-scalar.gms.lst
