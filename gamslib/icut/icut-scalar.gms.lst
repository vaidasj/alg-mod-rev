GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:30:51 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  option MIP=convert;
   2  option MIP=convert;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:30:51 Page 2
Integer Cut Example (ICUT,SEQ=160)
C o m p i l a t i o n


        Sometimes it may be required to exclude certain integer solutions.
        Additional constraints, called cuts, can be added to exclude such
        solutions. To exclude the k'th integer solution we can write:
       
            cut(k)..  sum(i, abs(x(i)-xsol(i,k)) =g= 1;
       
        The absolute function has to be simulated using 0/1 variables
        and some additional constraints. When the solution to be excluded
        is at lower or upper bound, we do not need additional 0/1 variables.
       
        In this example we simply show how to enumerate all possible
        combinations of four integer variables.
       
       
      GAMS Development Corporation, Formulation and Language Example.
       
  23  sets  i      index on integer variable  / 1 * 4 /
  24        ie(i)  variables fixed
  25        in(i)  not fixed
  26        il(i)  solutions at lower bound
  27        iu(i)  solutions at upper bound
  28        ib(i)  solution between bounds
  29   
  30        kk       cut identification set  / 1 * 100 /
  31        k(kk)    dynamic subset of k
  32        bb(kk,i) cut memory
  33        bl(kk,i) cut memory
  34        bu(kk,i) cut memory
  35   
  36   
  37  variables  x(i)    test variable
  38             z       some objective variable
  39             b(kk,i) flip-flop for in between solutions
  40             u(kk,i) changes up
  41             l(kk,i) changes down
  42   
  43  integer variable x;
  44  binary variable b; positive variable u,l;
  45   
  46  equations cut(kk)     main cut equations
  47            cutu(kk,i)  upper bound limit for inbetween integers
  48            cutl(kk,i)  lower bound limit for inbetween integers
  49            cutul(kk,i) definition of positive and negative deviations
  50            obj         obj definition;
  51   
  52  parameters  cutrhs(kk)    cut RHS value
  53              cutlx(kk,i)   cut lower bound
  54              cutux(kk,i)   cut upper bound
  55              cuts(kk,i)    cut solution value
  56   
  57              report(kk,*)  cut report variable
  58              whatnext      loop control variable;
  59   
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:30:51 Page 3
Integer Cut Example (ICUT,SEQ=160)
C o m p i l a t i o n


  60  *  pick an objective function which will order the solutions
  61   
  62  obj..   z =e= sum(i, power(10,card(i)-ord(i))*x(i));
  63   
  64  cut(k)..      - sum(bu(k,i), x(i)) + sum(bl(k,i),x(i))
  65                + sum(bb(k,i), l(bb) + u(bb)) =g= cutrhs(k);
  66   
  67  cutu(bb(k,i))..  u(bb) =l= cutux(bb)*b(bb);
  68   
  69  cutl(bb(k,i))..  l(bb) =l= cutlx(bb)*(1-b(bb));
  70   
  71  cutul(bb(k,i)).. x(i)  =e= cuts(bb) + u(bb) - l(bb);
  72   
  73  model enum / all /;
  74   
  75  * get an initial solution and set bounds
  76   
  77  x.lo(i)   = 2;
  78  x.up(i)   = 4;
  79  x.fx('2') = 3;   ! fix one variable
  80  x.up('4') = 3;   ! only two values
  81   
  82  x.l(i)    = x.lo(i);
  83   
  84  k(kk) = no;                        ! make cut set empty
  85  ie(i) = yes$(x.lo(i)=x.up(i));     ! find fixed variables
  86  in(i) = yes - ie(i);               ! find free variables
  87   
  88  whatnext    = 1;  ! initial loop control
  89  enum.resusd = 0;  ! inital CPU used
  90   
  91  enum.reslim = 60; ! dont spend more than 60 seconds on on problem
  92   
  93  * We enumerate all solutions so we are happy with the first solution
  94  * the solver finds.
  95   
  96  enum.optcr  = 0; enum.optca = 1e06;
  97   
  98  loop(kk$whatnext,
  99     il(in) = yes$(x.l(in)=x.lo(in));         ! find variables at lower
 100     iu(in) = yes$(x.l(in)=x.up(in));         ! find variables at upper
 101     ib(in) = yes - ie(in) - iu(in) - il(in); ! find variables between
 102     k(kk)        = yes;   ! add
 103     bl(kk,il)    = yes;   !   cut
 104     bu(kk,iu)    = yes;   !      information
 105     bb(kk,ib)    = yes;   !         as needed
 106     cutux(kk,ib) = x.up(ib) - x.l(ib);
 107     cutlx(kk,ib) = x.l(ib) - x.lo(ib);
 108     cuts(kk,ib)  = x.l(ib);
 109     cutrhs(kk)   = 1 + sum(il, x.l(il)) - sum(iu, x.l(iu));
 110     report(kk,i) = x.l(i);                   ! save previous solution
 111     report(kk,'binaries') = card(bb);        ! remember binaries
 112     report(kk,'CPU time') = enum.resusd;     ! remember time
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:30:51 Page 4
Integer Cut Example (ICUT,SEQ=160)
C o m p i l a t i o n


 113     solve enum min z us mip;
 114     enum.limcol = 0;                   ! turn off
 115     enum.limrow = 0;                   !    all
 116     enum.solprint = 2;  !       output
 117     whatnext = enum.modelstat=1 or enum.modelstat=8 );
 118   
 119  display enum.solvestat, enum.modelstat, report;


COMPILATION TIME     =        0.001 SECONDS      3 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:30:51 Page 5
Integer Cut Example (ICUT,SEQ=160)
Equation Listing    SOLVE enum Using MIP From line 113


---- cut  =G=  main cut equations

cut(1)..  x(1) + x(3) + x(4) =G= 7 ; (LHS = 6, INFES = 1 ****)
     

---- cutu  =L=  upper bound limit for inbetween integers

                NONE


---- cutl  =L=  lower bound limit for inbetween integers

                NONE


---- cutul  =E=  definition of positive and negative deviations

                NONE


---- obj  =E=  obj definition

obj..  - 1000*x(1) - 100*x(2) - 10*x(3) - x(4) + z =E= 0 ; (LHS = -2322, INFES = 2322 ****)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:30:51 Page 6
Integer Cut Example (ICUT,SEQ=160)
Column Listing      SOLVE enum Using MIP From line 113


---- x  test variable

x(1)
                (.LO, .L, .UP, .M = 2, 2, 4, 0)
        1       cut(1)
    -1000       obj

x(2)
                (.LO, .L, .UP, .M = 3, 3, 3, 0)
     -100       obj

x(3)
                (.LO, .L, .UP, .M = 2, 2, 4, 0)
        1       cut(1)
      -10       obj

REMAINING ENTRY SKIPPED

---- z  some objective variable

z
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       obj

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:30:51 Page 7
Integer Cut Example (ICUT,SEQ=160)
Model Statistics    SOLVE enum Using MIP From line 113


LOOPS                                   kk   1


MODEL STATISTICS

BLOCKS OF EQUATIONS           5     SINGLE EQUATIONS            2
BLOCKS OF VARIABLES           2     SINGLE VARIABLES            5
NON ZERO ELEMENTS             8     DISCRETE VARIABLES          3


GENERATION TIME      =        0.002 SECONDS      4 MB  24.7.4 r58773 LEX-LEG


EXECUTION TIME       =        0.002 SECONDS      4 MB  24.7.4 r58773 LEX-LEG
               L O O P S                 kk 1

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:30:51 Page 8
Integer Cut Example (ICUT,SEQ=160)
Solution Report     SOLVE enum Using MIP From line 113


               S O L V E      S U M M A R Y

     MODEL   enum                OBJECTIVE  z
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CONVERT             FROM LINE  113

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      14 No Solution Returned     
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.000        60.000
 ITERATION COUNT, LIMIT         0    2000000000

Convert 2.0      24.7.4 r58773 Released Sep 19, 2016 LEG x86 64bit/Linux      

--- Using Option File
Reading parameter(s) from "/home/renigijus/gams/opt-mod-lib/gamslib/icut/convert.opt"
>>  gams icut-scalar.gms
Finished reading from "/home/renigijus/gams/opt-mod-lib/gamslib/icut/convert.opt"
Gams      : icut-scalar.gms


No solution returned
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 10:30:51 Page 9
Integer Cut Example (ICUT,SEQ=160)
E x e c u t i o n


----    119 MODEL enum.SolveStat           =        1.000  
            MODEL enum.ModelStat           =       14.000  

----    119 PARAMETER report  cut report variable

            1           2           3           4

1       2.000       3.000       2.000       2.000



EXECUTION TIME       =        0.001 SECONDS      3 MB  24.7.4 r58773 LEX-LEG


USER: Remigijus Paulavicius, Single User License     S170731:0859AO-LNX
      Imperial College London, Dept. of Chemical Engineering    DC13449
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      /home/renigijus/gams/opt-mod-lib/gamslib/icut/icut.gms
Output     /home/renigijus/gams/opt-mod-lib/gamslib/icut/icut-scalar.gms.lst
