GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:22:32 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  option NLP=convert;
   2  option NLP=convert;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:22:32 Page 2
Marine population dynamics COPS 2.0 #6 (POPDYNM,SEQ=234)
C o m p i l a t i o n


   4   
       
      Given estimates of the abundance of the population of a marine species
      at each stage (for example, nauplius, juvenile, adult) as a function
      of time, determine stage specific growth and mortality rates.
       
      This model is from the COPS benchmarking suite.
      See http://www-unix.mcs.anl.gov/~more/cops/.
       
      The number of discretization points can be specified using the command
      line parameter --nh. COPS performance tests have been reported for nh
      = 25, 50, 100, 200
       
       
      Dolan, E D, and More, J J, Benchmarking Optimization
      Software with COPS. Tech. rep., Mathematics and Computer
      Science Division, 2000.
       
      Rothschild, B J, Sharov, A F, and Bondarenko, A S,
      Estimating Growth and Mortality in Stage-Structured
      Populations. Journal of Plankton Research 19 (1997),
      1913-1928.
       
  29   
  30   
  33   
  34  Set ne differential equations  /ne1*ne8/
  35      nc collocation points      /nc1*nc2/
  36      nh partition intervals     /nh1*nh25/
  37      nm measurements            /1*21/;
  38   
  39  Parameter tau(nm) times at which observations made
  40            bc(ne);
  41  tau(nm) = (ord(nm)-1)/2;
  42   
  43  Table z(nm,ne) observation
  44          ne1     ne2     ne3     ne4     ne5     ne6     ne7     ne8
  45    1  20000.0 17000.0 10000.0 15000.0 12000.0  9000.0  7000.0  3000.0
  46    2  12445.0 15411.0 13040.0 13338.0 13484.0  8426.0  6615.0  4022.0
  47    3   7705.0 13074.0 14623.0 11976.0 12453.0  9272.0  6891.0  5020.0
  48    4   4664.0  8579.0 12434.0 12603.0 11738.0  9710.0  6821.0  5722.0
  49    5   2977.0  7053.0 11219.0 11340.0 13665.0  8534.0  6242.0  5695.0
  50    6   1769.0  5054.0 10065.0 11232.0 12112.0  9600.0  6647.0  7034.0
  51    7    943.0  3907.0  9473.0 10334.0 11115.0  8826.0  6842.0  7348.0
  52    8    581.0  2624.0  7421.0 10297.0 12427.0  8747.0  7199.0  7684.0
  53    9    355.0  1744.0  5369.0  7748.0 10057.0  8698.0  6542.0  7410.0
  54   10    223.0  1272.0  4713.0  6869.0  9564.0  8766.0  6810.0  6961.0
  55   11    137.0   821.0  3451.0  6050.0  8671.0  8291.0  6827.0  7525.0
  56   12     87.0   577.0  2649.0  5454.0  8430.0  7411.0  6423.0  8388.0
  57   13     49.0   337.0  2058.0  4115.0  7435.0  7627.0  6268.0  7189.0
  58   14     32.0   228.0  1440.0  3790.0  6474.0  6658.0  5859.0  7467.0
  59   15     17.0   168.0  1178.0  3087.0  6524.0  5880.0  5562.0  7144.0
  60   16     11.0    99.0   919.0  2596.0  5360.0  5762.0  4480.0  7256.0
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:22:32 Page 3
Marine population dynamics COPS 2.0 #6 (POPDYNM,SEQ=234)
C o m p i l a t i o n


  61   17      7.0    65.0   647.0  1873.0  4556.0  5058.0  4944.0  7538.0
  62   18      4.0    44.0   509.0  1571.0  4009.0  4527.0  4233.0  6649.0
  63   19      2.0    27.0   345.0  1227.0  3677.0  4229.0  3805.0  6378.0
  64   20      1.0    20.0   231.0   934.0  3197.0  3695.0  3159.0  6454.0
  65   21      1.0    12.0   198.0   707.0  2562.0  3163.0  3232.0  5566.0
  66  ;
  67   
  68  bc(ne) = z('1',ne);
  69   
BATINCLUDE /home/renigijus/gams/opt-mod-lib/gamslib/popdynm/copspart.inc
  71  * Include file shared by a couple of COPS models that use the
  72  * collocation method: pinene, popdynm, gasoil, methanol
  73  *
  74  * Parameter %1 collocation points
  75  *           %2 measurements
  76   
  77  Alias (nh,i), (nc,j,k), (ne, s);
  78   
  79  Table legendre(*,*) roots of k-th degree Legendre polynomial
  80                    nc1               nc2              nc3              nc4
  81  nc1  0.50000000000000  0.78867513459481 0.50000000000000 0.06943184420297
  82  nc2                    0.21132486540519 0.88729833462074 0.33000947820757
  83  nc3                                     0.11270166537926 0.66999052179243
  84  nc4                                                      0.93056815579703
  85  ;
  86   
  87  Parameter t(nh)   partition
  88            rho(nc) roots of k-th degree Legendre polynomial
  89            itau(nm) "itau[i] is the largest integer k with t[k] <= tau[i]";
  90   
  91  Scalar    tf     "ODEs defined in [0,tf]"
  92            h      uniform interval length;
  93   
  94  rho(nc)  = legendre(nc,'nc2');
  95  tf       = smax(nm,tau(nm));
  96  h        = tf/card(nh);
  97  t(nh)    = (ord(nh)-1)*h;
  98  itau(nm) = min(25,floor(tau[nm]/h)+1);
  99   
 100  Set mapitau(nm,nh); mapitau(nm,nh) = itau(nm) = ord(nh);
 101   
 102  Parameter fact(nc) faculty;
 103  fact('nc1') = 1; loop(nc$(ord(nc)>1), fact(nc) = fact(nc-1)*ord(nc));
 104   
 105  * The collocation approximation u is defined by the parameters v and w.
 106  * uc and Duc are, respectively, u and u' evaluated at the collocation points.
 107   
 108  Variable v(nh,ne)
 109           w(nh,nc,ne)
 110           uc(nh,nc,ne)
 111           Duc(nh,nc,ne)
 112           obj;
 113   
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:22:32 Page 4
Marine population dynamics COPS 2.0 #6 (POPDYNM,SEQ=234)
C o m p i l a t i o n


 114  Equations defuc(nh,nc,ne)
 115            defDuc(nh,nc,ne)
 116            continuity(nh,ne)
 117            defl2error;
 118   
 119  defuc(i,j,s)..
 120    uc(i,j,s) =e= v[i,s] + h*sum{k, w[i,k,s]*power(rho[j],ord(k))/fact[k]};
 121   
 122  * fact[k-1] = fact[k]/ord(k)
 123  defDuc(i,j,s)..
 124    Duc(i,j,s) =e= sum {k, w[i,k,s]*power(rho[j],ord(k)-1)/(fact[k]/ord(k))};
 125   
 126  defl2error..  obj =e= sum{(mapitau(nm,i),s),
 127    sqr(v[i,s] + sum {k, w[i,k,s]*power(tau[nm]-t[i],ord(k))
 128                         /(fact[k]*power(h,ord(k)-1))} - z[nm,s])} ;
 129   
 130  continuity(nh(i+1),s)..  v[i,s] + sum {j, w[i,j,s]*h/fact[j]} =e= v[i+1,s];
 131   
 132  loop(mapitau(nm,i),
 133    v.l[nh,s]$(ord(nh) > itau(nm-1)+1) = z[nm,s];
 134  );
 135  v.l[i,s]$(ord(i) <= smin(nm, itau(nm))) = bc[s];
 136  v.l[i,s]$(ord(i) > smax(nm, itau(nm))) = z['21',s];
 137  uc.l(i,j,s) = v.l[i,s];
 138   
 139  Set nfl(ne) all but the first and last element of ne;
 140  nfl(ne) = not sameas(ne,'ne1') and not sameas(ne,'ne8');    display nfl;
 141   
 142  Positive variables   g(ne)  'growth rates'
 143                       m(ne)  'mortality rates';
 144   
 145  Equations  collocation_eqn1(i,j)
 146             collocation_eqns(i,j,s)
 147             collocation_ne(i,j);
 148   
 149  collocation_eqn1(i,j)..
 150    Duc[i,j,'ne1'] =e= -(m['ne1']+g['ne1'])*uc[i,j,'ne1'];
 151   
 152  collocation_eqns(i,j,nfl(s))..
 153    Duc[i,j,s] =e= g[s-1]*uc[i,j,s-1] - (m[s]+g[s])*uc[i,j,s];
 154   
 155  collocation_ne(i,j)..
 156    Duc[i,j,'ne8'] =e= g['ne7']*uc[i,j,'ne7'] - m['ne8']*uc[i,j,'ne8'];
 157   
 158  model popdynm /all/;
 159  popdynm.scaleopt = 1;
 160  obj.scale = 1000;
 161   
 163   
 164  solve popdynm minimizing obj using nlp;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:22:32 Page 5
Marine population dynamics COPS 2.0 #6 (POPDYNM,SEQ=234)
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  /home/renigijus/gams/opt-mod-lib/gamslib/popdynm/popdynm.gms
     2       70 BATINCLUDE     1      70  ./home/renigijus/gams/opt-mod-lib/gamslib/popdynm/copspart.inc


COMPILATION TIME     =        0.002 SECONDS      3 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:22:32 Page 6
Marine population dynamics COPS 2.0 #6 (POPDYNM,SEQ=234)
E x e c u t i o n


----    140 SET nfl  all but the first and last element of ne

ne2,    ne3,    ne4,    ne5,    ne6,    ne7

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:22:32 Page 7
Marine population dynamics COPS 2.0 #6 (POPDYNM,SEQ=234)
Equation Listing    SOLVE popdynm Using NLP From line 164


---- defuc  =E=  

defuc(nh1,nc1,ne1)..  - v(nh1,ne1) - 0.315470053837924*w(nh1,nc1,ne1) - 0.124401693585628*w(nh1,nc2,ne1) + uc(nh1,nc1,ne1) =E= 0 ; (LHS = 0)
     
defuc(nh1,nc1,ne2)..  - v(nh1,ne2) - 0.315470053837924*w(nh1,nc1,ne2) - 0.124401693585628*w(nh1,nc2,ne2) + uc(nh1,nc1,ne2) =E= 0 ; (LHS = 0)
     
defuc(nh1,nc1,ne3)..  - v(nh1,ne3) - 0.315470053837924*w(nh1,nc1,ne3) - 0.124401693585628*w(nh1,nc2,ne3) + uc(nh1,nc1,ne3) =E= 0 ; (LHS = 0)
     
REMAINING 397 ENTRIES SKIPPED


---- defDuc  =E=  

defDuc(nh1,nc1,ne1)..  - w(nh1,nc1,ne1) - 0.78867513459481*w(nh1,nc2,ne1) + Duc(nh1,nc1,ne1) =E= 0 ; (LHS = 0)
     
defDuc(nh1,nc1,ne2)..  - w(nh1,nc1,ne2) - 0.78867513459481*w(nh1,nc2,ne2) + Duc(nh1,nc1,ne2) =E= 0 ; (LHS = 0)
     
defDuc(nh1,nc1,ne3)..  - w(nh1,nc1,ne3) - 0.78867513459481*w(nh1,nc2,ne3) + Duc(nh1,nc1,ne3) =E= 0 ; (LHS = 0)
     
REMAINING 397 ENTRIES SKIPPED


---- continuity  =E=  

continuity(nh2,ne1)..  v(nh1,ne1) - v(nh2,ne1) + 0.4*w(nh1,nc1,ne1) + 0.2*w(nh1,nc2,ne1) =E= 0 ; (LHS = 0)
     
continuity(nh2,ne2)..  v(nh1,ne2) - v(nh2,ne2) + 0.4*w(nh1,nc1,ne2) + 0.2*w(nh1,nc2,ne2) =E= 0 ; (LHS = 0)
     
continuity(nh2,ne3)..  v(nh1,ne3) - v(nh2,ne3) + 0.4*w(nh1,nc1,ne3) + 0.2*w(nh1,nc2,ne3) =E= 0 ; (LHS = 0)
     
REMAINING 189 ENTRIES SKIPPED


---- defl2error  =E=  

defl2error..  (0)*v(nh1,ne1) + (0)*v(nh1,ne2) + (0)*v(nh1,ne3) + (0)*v(nh1,ne4) + (0)*v(nh1,ne5) + (0)*v(nh1,ne6) + (0)*v(nh1,ne7) + (0)*v(nh1,ne8) - (15110)*v(nh2,ne1) - (3178)*v(nh2,ne2) + (6080)*v(nh2,ne3) - (3324)*v(nh2,ne4) + (2968)*v(nh2,ne5)
     
      - (1148)*v(nh2,ne6) - (770)*v(nh2,ne7) + (2044)*v(nh2,ne8) - (9480)*v(nh3,ne1) - (4674)*v(nh3,ne2) + (3166)*v(nh3,ne3) - (2724)*v(nh3,ne4) - (2062)*v(nh3,ne5) + (1692)*v(nh3,ne6) + (552)*v(nh3,ne7) + (1996)*v(nh3,ne8) - (6082)*v(nh4,ne1)
     
      - (8990)*v(nh4,ne2) - (4378)*v(nh4,ne3) + (1254)*v(nh4,ne4) - (1430)*v(nh4,ne5) + (876)*v(nh4,ne6) - (140)*v(nh4,ne7) + (1404)*v(nh4,ne8) + (0)*v(nh6,ne1) + (0)*v(nh6,ne2) + (0)*v(nh6,ne3) + (0)*v(nh6,ne4) + (0)*v(nh6,ne5) + (0)*v(nh6,ne6)
     
      + (0)*v(nh6,ne7) + (0)*v(nh6,ne8) - (2416)*v(nh7,ne1) - (3998)*v(nh7,ne2) - (2308)*v(nh7,ne3) - (216)*v(nh7,ne4) - (3106)*v(nh7,ne5) + (2132)*v(nh7,ne6) + (810)*v(nh7,ne7) + (2678)*v(nh7,ne8) - (1652)*v(nh8,ne1) - (2294)*v(nh8,ne2)
     
      - (1184)*v(nh8,ne3) - (1796)*v(nh8,ne4) - (1994)*v(nh8,ne5) - (1548)*v(nh8,ne6) + (390)*v(nh8,ne7) + (628)*v(nh8,ne8) - (724)*v(nh9,ne1) - (2566)*v(nh9,ne2) - (4104)*v(nh9,ne3) - (74)*v(nh9,ne4) + (2624)*v(nh9,ne5) - (158)*v(nh9,ne6)
     
      + (714)*v(nh9,ne7) + (672)*v(nh9,ne8) + (0)*v(nh11,ne1) + (0)*v(nh11,ne2) + (0)*v(nh11,ne3) + (0)*v(nh11,ne4) + (0)*v(nh11,ne5) + (0)*v(nh11,ne6) + (0)*v(nh11,ne7) + (0)*v(nh11,ne8) - (264)*v(nh12,ne1) - (944)*v(nh12,ne2) - (1312)*v(nh12,ne3)
     
      - (1758)*v(nh12,ne4) - (986)*v(nh12,ne5) + (136)*v(nh12,ne6) + (536)*v(nh12,ne7) - (898)*v(nh12,ne8) - (172)*v(nh13,ne1) - (902)*v(nh13,ne2) - (2524)*v(nh13,ne3) - (1638)*v(nh13,ne4) - (1786)*v(nh13,ne5) - (950)*v(nh13,ne6) + (34)*v(nh13,ne7)
     
      + (1128)*v(nh13,ne8) - (100)*v(nh14,ne1) - (488)*v(nh14,ne2) - (1604)*v(nh14,ne3) - (1192)*v(nh14,ne4) - (482)*v(nh14,ne5) - (1760)*v(nh14,ne6) - (808)*v(nh14,ne7) + (1726)*v(nh14,ne8) + (0)*v(nh16,ne1) + (0)*v(nh16,ne2) + (0)*v(nh16,ne3)
     
      + (0)*v(nh16,ne4) + (0)*v(nh16,ne5) + (0)*v(nh16,ne6) + (0)*v(nh16,ne7) + (0)*v(nh16,ne8) - (34)*v(nh17,ne1) - (218)*v(nh17,ne2) - (1236)*v(nh17,ne3) - (650)*v(nh17,ne4) - (1922)*v(nh17,ne5) - (1938)*v(nh17,ne6) - (818)*v(nh17,ne7)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:22:32 Page 8
Marine population dynamics COPS 2.0 #6 (POPDYNM,SEQ=234)
Equation Listing    SOLVE popdynm Using NLP From line 164


     defl2error  =E=       
     
      + (556)*v(nh17,ne8) - (30)*v(nh18,ne1) - (120)*v(nh18,ne2) - (524)*v(nh18,ne3) - (1406)*v(nh18,ne4) + (100)*v(nh18,ne5) - (1556)*v(nh18,ne6) - (594)*v(nh18,ne7) - (646)*v(nh18,ne8) - (12)*v(nh19,ne1) - (138)*v(nh19,ne2) - (518)*v(nh19,ne3)
     
      - (982)*v(nh19,ne4) - (2328)*v(nh19,ne5) - (236)*v(nh19,ne6) - (2164)*v(nh19,ne7) + (224)*v(nh19,ne8) + (0)*v(nh21,ne1) + (0)*v(nh21,ne2) + (0)*v(nh21,ne3) + (0)*v(nh21,ne4) + (0)*v(nh21,ne5) + (0)*v(nh21,ne6) + (0)*v(nh21,ne7) + (0)*v(nh21,ne8)
     
      - (6)*v(nh22,ne1) - (42)*v(nh22,ne2) - (276)*v(nh22,ne3) - (604)*v(nh22,ne4) - (1094)*v(nh22,ne5) - (1062)*v(nh22,ne6) - (1422)*v(nh22,ne7) - (1778)*v(nh22,ne8) - (4)*v(nh23,ne1) - (34)*v(nh23,ne2) - (328)*v(nh23,ne3) - (688)*v(nh23,ne4)
     
      - (664)*v(nh23,ne5) - (596)*v(nh23,ne6) - (856)*v(nh23,ne7) - (542)*v(nh23,ne8) - (2)*v(nh24,ne1) - (14)*v(nh24,ne2) - (228)*v(nh24,ne3) - (586)*v(nh24,ne4) - (960)*v(nh24,ne5) - (1068)*v(nh24,ne6) - (1292)*v(nh24,ne7) + (152)*v(nh24,ne8)
     
      + (0)*v(nh25,ne1) - (16)*v(nh25,ne2) - (66)*v(nh25,ne3) - (454)*v(nh25,ne4) - (1270)*v(nh25,ne5) - (1064)*v(nh25,ne6) + (146)*v(nh25,ne7) - (1776)*v(nh25,ne8) - (1511)*w(nh2,nc1,ne1) - (317.8)*w(nh2,nc1,ne2) + (608)*w(nh2,nc1,ne3)
     
      - (332.4)*w(nh2,nc1,ne4) + (296.8)*w(nh2,nc1,ne5) - (114.8)*w(nh2,nc1,ne6) - (77)*w(nh2,nc1,ne7) + (204.4)*w(nh2,nc1,ne8) - (188.875)*w(nh2,nc2,ne1) - (39.725)*w(nh2,nc2,ne2) + (76)*w(nh2,nc2,ne3) - (41.55)*w(nh2,nc2,ne4) + (37.1)*w(nh2,nc2,ne5)
     
      - (14.35)*w(nh2,nc2,ne6) - (9.62499999999999)*w(nh2,nc2,ne7) + (25.55)*w(nh2,nc2,ne8) - (1896)*w(nh3,nc1,ne1) - (934.8)*w(nh3,nc1,ne2) + (633.2)*w(nh3,nc1,ne3) - (544.8)*w(nh3,nc1,ne4) - (412.4)*w(nh3,nc1,ne5) + (338.4)*w(nh3,nc1,ne6)
     
      + (110.4)*w(nh3,nc1,ne7) + (399.2)*w(nh3,nc1,ne8) - (474)*w(nh3,nc2,ne1) - (233.7)*w(nh3,nc2,ne2) + (158.3)*w(nh3,nc2,ne3) - (136.2)*w(nh3,nc2,ne4) - (103.1)*w(nh3,nc2,ne5) + (84.6)*w(nh3,nc2,ne6) + (27.6)*w(nh3,nc2,ne7) + (99.8)*w(nh3,nc2,ne8)
     
      - (1824.6)*w(nh4,nc1,ne1) - (2697)*w(nh4,nc1,ne2) - (1313.4)*w(nh4,nc1,ne3) + (376.2)*w(nh4,nc1,ne4) - (429)*w(nh4,nc1,ne5) + (262.8)*w(nh4,nc1,ne6) - (42)*w(nh4,nc1,ne7) + (421.2)*w(nh4,nc1,ne8) - (684.224999999999)*w(nh4,nc2,ne1)
     
      - (1011.375)*w(nh4,nc2,ne2) - (492.524999999999)*w(nh4,nc2,ne3) + (141.075)*w(nh4,nc2,ne4) - (160.875)*w(nh4,nc2,ne5) + (98.5499999999999)*w(nh4,nc2,ne6) - (15.75)*w(nh4,nc2,ne7) + (157.95)*w(nh4,nc2,ne8) - (241.599999999999)*w(nh7,nc1,ne1)
     
      - (399.799999999999)*w(nh7,nc1,ne2) - (230.799999999999)*w(nh7,nc1,ne3) - (21.5999999999999)*w(nh7,nc1,ne4) - (310.599999999999)*w(nh7,nc1,ne5) + (213.199999999999)*w(nh7,nc1,ne6) + (80.9999999999997)*w(nh7,nc1,ne7)
     
      + (267.799999999999)*w(nh7,nc1,ne8) - (30.1999999999998)*w(nh7,nc2,ne1) - (49.9749999999996)*w(nh7,nc2,ne2) - (28.8499999999998)*w(nh7,nc2,ne3) - (2.69999999999998)*w(nh7,nc2,ne4) - (38.8249999999997)*w(nh7,nc2,ne5)
     
      + (26.6499999999998)*w(nh7,nc2,ne6) + (10.1249999999999)*w(nh7,nc2,ne7) + (33.4749999999998)*w(nh7,nc2,ne8) - (330.4)*w(nh8,nc1,ne1) - (458.799999999999)*w(nh8,nc1,ne2) - (236.8)*w(nh8,nc1,ne3) - (359.2)*w(nh8,nc1,ne4)
     
      - (398.799999999999)*w(nh8,nc1,ne5) - (309.6)*w(nh8,nc1,ne6) + (77.9999999999999)*w(nh8,nc1,ne7) + (125.6)*w(nh8,nc1,ne8) - (82.5999999999998)*w(nh8,nc2,ne1) - (114.7)*w(nh8,nc2,ne2) - (59.1999999999998)*w(nh8,nc2,ne3)
     
      - (89.7999999999998)*w(nh8,nc2,ne4) - (99.6999999999997)*w(nh8,nc2,ne5) - (77.3999999999998)*w(nh8,nc2,ne6) + (19.5)*w(nh8,nc2,ne7) + (31.3999999999999)*w(nh8,nc2,ne8) - (217.2)*w(nh9,nc1,ne1) - (769.799999999999)*w(nh9,nc1,ne2)
     
      - (1231.2)*w(nh9,nc1,ne3) - (22.2)*w(nh9,nc1,ne4) + (787.2)*w(nh9,nc1,ne5) - (47.4)*w(nh9,nc1,ne6) + (214.2)*w(nh9,nc1,ne7) + (201.6)*w(nh9,nc1,ne8) - (81.4499999999999)*w(nh9,nc2,ne1) - (288.675)*w(nh9,nc2,ne2) - (461.699999999999)*w(nh9,nc2,ne3)
     
      - (8.32499999999999)*w(nh9,nc2,ne4) + (295.2)*w(nh9,nc2,ne5) - (17.775)*w(nh9,nc2,ne6) + (80.3249999999999)*w(nh9,nc2,ne7) + (75.5999999999999)*w(nh9,nc2,ne8) - (26.3999999999999)*w(nh12,nc1,ne1) - (94.3999999999997)*w(nh12,nc1,ne2)
     
      - (131.2)*w(nh12,nc1,ne3) - (175.799999999999)*w(nh12,nc1,ne4) - (98.5999999999997)*w(nh12,nc1,ne5) + (13.6)*w(nh12,nc1,ne6) + (53.5999999999998)*w(nh12,nc1,ne7) - (89.7999999999997)*w(nh12,nc1,ne8) - (3.29999999999998)*w(nh12,nc2,ne1)
     
      - (11.7999999999999)*w(nh12,nc2,ne2) - (16.3999999999999)*w(nh12,nc2,ne3) - (21.9749999999998)*w(nh12,nc2,ne4) - (12.3249999999999)*w(nh12,nc2,ne5) + (1.69999999999999)*w(nh12,nc2,ne6) + (6.69999999999995)*w(nh12,nc2,ne7)
     
      - (11.2249999999999)*w(nh12,nc2,ne8) - (34.3999999999999)*w(nh13,nc1,ne1) - (180.399999999999)*w(nh13,nc1,ne2) - (504.799999999998)*w(nh13,nc1,ne3) - (327.599999999999)*w(nh13,nc1,ne4) - (357.199999999999)*w(nh13,nc1,ne5)
     
      - (189.999999999999)*w(nh13,nc1,ne6) + (6.79999999999998)*w(nh13,nc1,ne7) + (225.599999999999)*w(nh13,nc1,ne8) - (8.59999999999994)*w(nh13,nc2,ne1) - (45.0999999999997)*w(nh13,nc2,ne2) - (126.199999999999)*w(nh13,nc2,ne3)
     
      - (81.8999999999994)*w(nh13,nc2,ne4) - (89.2999999999994)*w(nh13,nc2,ne5) - (47.4999999999997)*w(nh13,nc2,ne6) + (1.69999999999999)*w(nh13,nc2,ne7) + (56.3999999999996)*w(nh13,nc2,ne8) - (30)*w(nh14,nc1,ne1) - (146.4)*w(nh14,nc1,ne2)
     
      - (481.2)*w(nh14,nc1,ne3) - (357.6)*w(nh14,nc1,ne4) - (144.6)*w(nh14,nc1,ne5) - (528)*w(nh14,nc1,ne6) - (242.4)*w(nh14,nc1,ne7) + (517.8)*w(nh14,nc1,ne8) - (11.25)*w(nh14,nc2,ne1) - (54.8999999999999)*w(nh14,nc2,ne2) - (180.45)*w(nh14,nc2,ne3)
     
      - (134.1)*w(nh14,nc2,ne4) - (54.2249999999999)*w(nh14,nc2,ne5) - (198)*w(nh14,nc2,ne6) - (90.8999999999999)*w(nh14,nc2,ne7) + (194.175)*w(nh14,nc2,ne8) - (3.39999999999999)*w(nh17,nc1,ne1) - (21.7999999999999)*w(nh17,nc1,ne2)
     
      - (123.6)*w(nh17,nc1,ne3) - (64.9999999999998)*w(nh17,nc1,ne4) - (192.199999999999)*w(nh17,nc1,ne5) - (193.799999999999)*w(nh17,nc1,ne6) - (81.7999999999997)*w(nh17,nc1,ne7) + (55.5999999999998)*w(nh17,nc1,ne8) - (0.424999999999997)*w(nh17,nc2,ne1)
     
      - (2.72499999999998)*w(nh17,nc2,ne2) - (15.4499999999999)*w(nh17,nc2,ne3) - (8.12499999999994)*w(nh17,nc2,ne4) - (24.0249999999998)*w(nh17,nc2,ne5) - (24.2249999999998)*w(nh17,nc2,ne6) - (10.2249999999999)*w(nh17,nc2,ne7)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:22:32 Page 9
Marine population dynamics COPS 2.0 #6 (POPDYNM,SEQ=234)
Equation Listing    SOLVE popdynm Using NLP From line 164


     defl2error  =E=       
     
      + (6.94999999999995)*w(nh17,nc2,ne8) - (5.99999999999998)*w(nh18,nc1,ne1) - (23.9999999999999)*w(nh18,nc1,ne2) - (104.8)*w(nh18,nc1,ne3) - (281.199999999999)*w(nh18,nc1,ne4) + (19.9999999999999)*w(nh18,nc1,ne5) - (311.199999999999)*w(nh18,nc1,ne6)
     
      - (118.8)*w(nh18,nc1,ne7) - (129.2)*w(nh18,nc1,ne8) - (1.49999999999999)*w(nh18,nc2,ne1) - (5.99999999999996)*w(nh18,nc2,ne2) - (26.1999999999998)*w(nh18,nc2,ne3) - (70.2999999999995)*w(nh18,nc2,ne4) + (4.99999999999996)*w(nh18,nc2,ne5)
     
      - (77.7999999999994)*w(nh18,nc2,ne6) - (29.6999999999998)*w(nh18,nc2,ne7) - (32.2999999999998)*w(nh18,nc2,ne8) - (3.6)*w(nh19,nc1,ne1) - (41.4)*w(nh19,nc1,ne2) - (155.4)*w(nh19,nc1,ne3) - (294.6)*w(nh19,nc1,ne4) - (698.4)*w(nh19,nc1,ne5)
     
      - (70.8)*w(nh19,nc1,ne6) - (649.2)*w(nh19,nc1,ne7) + (67.2)*w(nh19,nc1,ne8) - (1.35)*w(nh19,nc2,ne1) - (15.525)*w(nh19,nc2,ne2) - (58.2749999999999)*w(nh19,nc2,ne3) - (110.475)*w(nh19,nc2,ne4) - (261.9)*w(nh19,nc2,ne5) - (26.55)*w(nh19,nc2,ne6)
     
      - (243.45)*w(nh19,nc2,ne7) + (25.2)*w(nh19,nc2,ne8) - (0.599999999999998)*w(nh22,nc1,ne1) - (4.19999999999999)*w(nh22,nc1,ne2) - (27.5999999999999)*w(nh22,nc1,ne3) - (60.3999999999998)*w(nh22,nc1,ne4) - (109.4)*w(nh22,nc1,ne5)
     
      - (106.2)*w(nh22,nc1,ne6) - (142.2)*w(nh22,nc1,ne7) - (177.799999999999)*w(nh22,nc1,ne8) - (0.0749999999999995)*w(nh22,nc2,ne1) - (0.524999999999996)*w(nh22,nc2,ne2) - (3.44999999999998)*w(nh22,nc2,ne3) - (7.54999999999995)*w(nh22,nc2,ne4)
     
      - (13.6749999999999)*w(nh22,nc2,ne5) - (13.2749999999999)*w(nh22,nc2,ne6) - (17.7749999999999)*w(nh22,nc2,ne7) - (22.2249999999998)*w(nh22,nc2,ne8) - (0.799999999999997)*w(nh23,nc1,ne1) - (6.79999999999998)*w(nh23,nc1,ne2)
     
      - (65.5999999999998)*w(nh23,nc1,ne3) - (137.6)*w(nh23,nc1,ne4) - (132.8)*w(nh23,nc1,ne5) - (119.2)*w(nh23,nc1,ne6) - (171.199999999999)*w(nh23,nc1,ne7) - (108.4)*w(nh23,nc1,ne8) - (0.199999999999999)*w(nh23,nc2,ne1)
     
      - (1.69999999999999)*w(nh23,nc2,ne2) - (16.3999999999999)*w(nh23,nc2,ne3) - (34.3999999999998)*w(nh23,nc2,ne4) - (33.1999999999998)*w(nh23,nc2,ne5) - (29.7999999999998)*w(nh23,nc2,ne6) - (42.7999999999997)*w(nh23,nc2,ne7)
     
      - (27.0999999999998)*w(nh23,nc2,ne8) - (0.599999999999998)*w(nh24,nc1,ne1) - (4.19999999999999)*w(nh24,nc1,ne2) - (68.3999999999997)*w(nh24,nc1,ne3) - (175.799999999999)*w(nh24,nc1,ne4) - (287.999999999999)*w(nh24,nc1,ne5)
     
      - (320.399999999999)*w(nh24,nc1,ne6) - (387.599999999999)*w(nh24,nc1,ne7) + (45.5999999999998)*w(nh24,nc1,ne8) - (0.224999999999998)*w(nh24,nc2,ne1) - (1.57499999999999)*w(nh24,nc2,ne2) - (25.6499999999998)*w(nh24,nc2,ne3)
     
      - (65.9249999999995)*w(nh24,nc2,ne4) - (107.999999999999)*w(nh24,nc2,ne5) - (120.149999999999)*w(nh24,nc2,ne6) - (145.349999999999)*w(nh24,nc2,ne7) + (17.0999999999999)*w(nh24,nc2,ne8) + (0)*w(nh25,nc1,ne1) - (6.39999999999998)*w(nh25,nc1,ne2)
     
      - (26.3999999999999)*w(nh25,nc1,ne3) - (181.599999999999)*w(nh25,nc1,ne4) - (507.999999999998)*w(nh25,nc1,ne5) - (425.599999999998)*w(nh25,nc1,ne6) + (58.3999999999998)*w(nh25,nc1,ne7) - (710.399999999997)*w(nh25,nc1,ne8) + (0)*w(nh25,nc2,ne1)
     
      - (3.19999999999998)*w(nh25,nc2,ne2) - (13.1999999999999)*w(nh25,nc2,ne3) - (90.7999999999993)*w(nh25,nc2,ne4) - (253.999999999998)*w(nh25,nc2,ne5) - (212.799999999998)*w(nh25,nc2,ne6) + (29.1999999999998)*w(nh25,nc2,ne7)
     
      - (355.199999999997)*w(nh25,nc2,ne8) + 1000*obj =E= 0 ; (LHS = -192034784, INFES = 192034784 ****)
     

---- collocation_eqn1  =E=  

collocation_eqn1(nh1,nc1)..  (0)*uc(nh1,nc1,ne1) + Duc(nh1,nc1,ne1) + (20000)*g(ne1) + (20000)*m(ne1) =E= 0 ; (LHS = 0)
     
collocation_eqn1(nh1,nc2)..  (0)*uc(nh1,nc2,ne1) + Duc(nh1,nc2,ne1) + (20000)*g(ne1) + (20000)*m(ne1) =E= 0 ; (LHS = 0)
     
collocation_eqn1(nh2,nc1)..  (0)*uc(nh2,nc1,ne1) + Duc(nh2,nc1,ne1) + (20000)*g(ne1) + (20000)*m(ne1) =E= 0 ; (LHS = 0)
     
REMAINING 47 ENTRIES SKIPPED


---- collocation_eqns  =E=  

collocation_eqns(nh1,nc1,ne2)..  (0)*uc(nh1,nc1,ne1) + (0)*uc(nh1,nc1,ne2) + Duc(nh1,nc1,ne2) - (20000)*g(ne1) + (17000)*g(ne2) + (17000)*m(ne2) =E= 0 ; (LHS = 0)
     
collocation_eqns(nh1,nc1,ne3)..  (0)*uc(nh1,nc1,ne2) + (0)*uc(nh1,nc1,ne3) + Duc(nh1,nc1,ne3) - (17000)*g(ne2) + (10000)*g(ne3) + (10000)*m(ne3) =E= 0 ; (LHS = 0)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:32 Page 10
Marine population dynamics COPS 2.0 #6 (POPDYNM,SEQ=234)
Equation Listing    SOLVE popdynm Using NLP From line 164


     collocation_eqns  =E=  

collocation_eqns(nh1,nc1,ne4)..  (0)*uc(nh1,nc1,ne3) + (0)*uc(nh1,nc1,ne4) + Duc(nh1,nc1,ne4) - (10000)*g(ne3) + (15000)*g(ne4) + (15000)*m(ne4) =E= 0 ; (LHS = 0)
     
REMAINING 297 ENTRIES SKIPPED


---- collocation_ne  =E=  

collocation_ne(nh1,nc1)..  (0)*uc(nh1,nc1,ne7) + (0)*uc(nh1,nc1,ne8) + Duc(nh1,nc1,ne8) - (7000)*g(ne7) + (3000)*m(ne8) =E= 0 ; (LHS = 0)
     
collocation_ne(nh1,nc2)..  (0)*uc(nh1,nc2,ne7) + (0)*uc(nh1,nc2,ne8) + Duc(nh1,nc2,ne8) - (7000)*g(ne7) + (3000)*m(ne8) =E= 0 ; (LHS = 0)
     
collocation_ne(nh2,nc1)..  (0)*uc(nh2,nc1,ne7) + (0)*uc(nh2,nc1,ne8) + Duc(nh2,nc1,ne8) - (7000)*g(ne7) + (3000)*m(ne8) =E= 0 ; (LHS = 0)
     
REMAINING 47 ENTRIES SKIPPED

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:32 Page 11
Marine population dynamics COPS 2.0 #6 (POPDYNM,SEQ=234)
Column Listing      SOLVE popdynm Using NLP From line 164


---- v  

v(nh1,ne1)
                (.LO, .L, .UP, .M = -INF, 20000, +INF, 0)
       -1       defuc(nh1,nc1,ne1)
       -1       defuc(nh1,nc2,ne1)
        1       continuity(nh2,ne1)
       (0)      defl2error

v(nh1,ne2)
                (.LO, .L, .UP, .M = -INF, 17000, +INF, 0)
       -1       defuc(nh1,nc1,ne2)
       -1       defuc(nh1,nc2,ne2)
        1       continuity(nh2,ne2)
       (0)      defl2error

v(nh1,ne3)
                (.LO, .L, .UP, .M = -INF, 10000, +INF, 0)
       -1       defuc(nh1,nc1,ne3)
       -1       defuc(nh1,nc2,ne3)
        1       continuity(nh2,ne3)
       (0)      defl2error

REMAINING 197 ENTRIES SKIPPED

---- w  

w(nh1,nc1,ne1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -0.3155  defuc(nh1,nc1,ne1)
       -0.0845  defuc(nh1,nc2,ne1)
       -1       defDuc(nh1,nc1,ne1)
       -1       defDuc(nh1,nc2,ne1)
        0.4     continuity(nh2,ne1)

w(nh1,nc1,ne2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -0.3155  defuc(nh1,nc1,ne2)
       -0.0845  defuc(nh1,nc2,ne2)
       -1       defDuc(nh1,nc1,ne2)
       -1       defDuc(nh1,nc2,ne2)
        0.4     continuity(nh2,ne2)

w(nh1,nc1,ne3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -0.3155  defuc(nh1,nc1,ne3)
       -0.0845  defuc(nh1,nc2,ne3)
       -1       defDuc(nh1,nc1,ne3)
       -1       defDuc(nh1,nc2,ne3)
        0.4     continuity(nh2,ne3)

REMAINING 397 ENTRIES SKIPPED
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:32 Page 12
Marine population dynamics COPS 2.0 #6 (POPDYNM,SEQ=234)
Column Listing      SOLVE popdynm Using NLP From line 164


---- uc  

uc(nh1,nc1,ne1)
                (.LO, .L, .UP, .M = -INF, 20000, +INF, 0)
        1       defuc(nh1,nc1,ne1)
       (0)      collocation_eqn1(nh1,nc1)
       (0)      collocation_eqns(nh1,nc1,ne2)

uc(nh1,nc1,ne2)
                (.LO, .L, .UP, .M = -INF, 17000, +INF, 0)
        1       defuc(nh1,nc1,ne2)
       (0)      collocation_eqns(nh1,nc1,ne2)
       (0)      collocation_eqns(nh1,nc1,ne3)

uc(nh1,nc1,ne3)
                (.LO, .L, .UP, .M = -INF, 10000, +INF, 0)
        1       defuc(nh1,nc1,ne3)
       (0)      collocation_eqns(nh1,nc1,ne3)
       (0)      collocation_eqns(nh1,nc1,ne4)

REMAINING 397 ENTRIES SKIPPED

---- Duc  

Duc(nh1,nc1,ne1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       defDuc(nh1,nc1,ne1)
        1       collocation_eqn1(nh1,nc1)

Duc(nh1,nc1,ne2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       defDuc(nh1,nc1,ne2)
        1       collocation_eqns(nh1,nc1,ne2)

Duc(nh1,nc1,ne3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       defDuc(nh1,nc1,ne3)
        1       collocation_eqns(nh1,nc1,ne3)

REMAINING 397 ENTRIES SKIPPED

---- obj  

obj
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
     1000       defl2error


---- g  growth rates

g(ne1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
   (20000)      collocation_eqn1(nh1,nc1)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:32 Page 13
Marine population dynamics COPS 2.0 #6 (POPDYNM,SEQ=234)
Column Listing      SOLVE popdynm Using NLP From line 164


     g  growth rates

   (20000)      collocation_eqn1(nh1,nc2)
   (20000)      collocation_eqn1(nh2,nc1)
   (20000)      collocation_eqn1(nh2,nc2)
   (12445)      collocation_eqn1(nh3,nc1)
   (12445)      collocation_eqn1(nh3,nc2)
    (7705)      collocation_eqn1(nh4,nc1)
    (7705)      collocation_eqn1(nh4,nc2)
    (4664)      collocation_eqn1(nh5,nc1)
    (4664)      collocation_eqn1(nh5,nc2)
    (2977)      collocation_eqn1(nh6,nc1)
    (2977)      collocation_eqn1(nh6,nc2)
    (2977)      collocation_eqn1(nh7,nc1)
    (2977)      collocation_eqn1(nh7,nc2)
    (1769)      collocation_eqn1(nh8,nc1)
    (1769)      collocation_eqn1(nh8,nc2)
     (943)      collocation_eqn1(nh9,nc1)
     (943)      collocation_eqn1(nh9,nc2)
     (581)      collocation_eqn1(nh10,nc1)
     (581)      collocation_eqn1(nh10,nc2)
     (355)      collocation_eqn1(nh11,nc1)
     (355)      collocation_eqn1(nh11,nc2)
     (355)      collocation_eqn1(nh12,nc1)
     (355)      collocation_eqn1(nh12,nc2)
     (223)      collocation_eqn1(nh13,nc1)
     (223)      collocation_eqn1(nh13,nc2)
     (137)      collocation_eqn1(nh14,nc1)
     (137)      collocation_eqn1(nh14,nc2)
      (87)      collocation_eqn1(nh15,nc1)
      (87)      collocation_eqn1(nh15,nc2)
      (49)      collocation_eqn1(nh16,nc1)
      (49)      collocation_eqn1(nh16,nc2)
      (49)      collocation_eqn1(nh17,nc1)
      (49)      collocation_eqn1(nh17,nc2)
      (32)      collocation_eqn1(nh18,nc1)
      (32)      collocation_eqn1(nh18,nc2)
      (17)      collocation_eqn1(nh19,nc1)
      (17)      collocation_eqn1(nh19,nc2)
      (11)      collocation_eqn1(nh20,nc1)
      (11)      collocation_eqn1(nh20,nc2)
       (7)      collocation_eqn1(nh21,nc1)
       (7)      collocation_eqn1(nh21,nc2)
       (7)      collocation_eqn1(nh22,nc1)
       (7)      collocation_eqn1(nh22,nc2)
       (4)      collocation_eqn1(nh23,nc1)
       (4)      collocation_eqn1(nh23,nc2)
       (2)      collocation_eqn1(nh24,nc1)
       (2)      collocation_eqn1(nh24,nc2)
       (1)      collocation_eqn1(nh25,nc1)
       (1)      collocation_eqn1(nh25,nc2)
  (-20000)      collocation_eqns(nh1,nc1,ne2)
  (-20000)      collocation_eqns(nh1,nc2,ne2)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:32 Page 14
Marine population dynamics COPS 2.0 #6 (POPDYNM,SEQ=234)
Column Listing      SOLVE popdynm Using NLP From line 164


     g  growth rates

  (-20000)      collocation_eqns(nh2,nc1,ne2)
  (-20000)      collocation_eqns(nh2,nc2,ne2)
  (-12445)      collocation_eqns(nh3,nc1,ne2)
  (-12445)      collocation_eqns(nh3,nc2,ne2)
   (-7705)      collocation_eqns(nh4,nc1,ne2)
   (-7705)      collocation_eqns(nh4,nc2,ne2)
   (-4664)      collocation_eqns(nh5,nc1,ne2)
   (-4664)      collocation_eqns(nh5,nc2,ne2)
   (-2977)      collocation_eqns(nh6,nc1,ne2)
   (-2977)      collocation_eqns(nh6,nc2,ne2)
   (-2977)      collocation_eqns(nh7,nc1,ne2)
   (-2977)      collocation_eqns(nh7,nc2,ne2)
   (-1769)      collocation_eqns(nh8,nc1,ne2)
   (-1769)      collocation_eqns(nh8,nc2,ne2)
    (-943)      collocation_eqns(nh9,nc1,ne2)
    (-943)      collocation_eqns(nh9,nc2,ne2)
    (-581)      collocation_eqns(nh10,nc1,ne2)
    (-581)      collocation_eqns(nh10,nc2,ne2)
    (-355)      collocation_eqns(nh11,nc1,ne2)
    (-355)      collocation_eqns(nh11,nc2,ne2)
    (-355)      collocation_eqns(nh12,nc1,ne2)
    (-355)      collocation_eqns(nh12,nc2,ne2)
    (-223)      collocation_eqns(nh13,nc1,ne2)
    (-223)      collocation_eqns(nh13,nc2,ne2)
    (-137)      collocation_eqns(nh14,nc1,ne2)
    (-137)      collocation_eqns(nh14,nc2,ne2)
     (-87)      collocation_eqns(nh15,nc1,ne2)
     (-87)      collocation_eqns(nh15,nc2,ne2)
     (-49)      collocation_eqns(nh16,nc1,ne2)
     (-49)      collocation_eqns(nh16,nc2,ne2)
     (-49)      collocation_eqns(nh17,nc1,ne2)
     (-49)      collocation_eqns(nh17,nc2,ne2)
     (-32)      collocation_eqns(nh18,nc1,ne2)
     (-32)      collocation_eqns(nh18,nc2,ne2)
     (-17)      collocation_eqns(nh19,nc1,ne2)
     (-17)      collocation_eqns(nh19,nc2,ne2)
     (-11)      collocation_eqns(nh20,nc1,ne2)
     (-11)      collocation_eqns(nh20,nc2,ne2)
      (-7)      collocation_eqns(nh21,nc1,ne2)
      (-7)      collocation_eqns(nh21,nc2,ne2)
      (-7)      collocation_eqns(nh22,nc1,ne2)
      (-7)      collocation_eqns(nh22,nc2,ne2)
      (-4)      collocation_eqns(nh23,nc1,ne2)
      (-4)      collocation_eqns(nh23,nc2,ne2)
      (-2)      collocation_eqns(nh24,nc1,ne2)
      (-2)      collocation_eqns(nh24,nc2,ne2)
      (-1)      collocation_eqns(nh25,nc1,ne2)
      (-1)      collocation_eqns(nh25,nc2,ne2)

g(ne2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:32 Page 15
Marine population dynamics COPS 2.0 #6 (POPDYNM,SEQ=234)
Column Listing      SOLVE popdynm Using NLP From line 164


     g  growth rates

   (17000)      collocation_eqns(nh1,nc1,ne2)
  (-17000)      collocation_eqns(nh1,nc1,ne3)
   (17000)      collocation_eqns(nh1,nc2,ne2)
  (-17000)      collocation_eqns(nh1,nc2,ne3)
   (17000)      collocation_eqns(nh2,nc1,ne2)
  (-17000)      collocation_eqns(nh2,nc1,ne3)
   (17000)      collocation_eqns(nh2,nc2,ne2)
  (-17000)      collocation_eqns(nh2,nc2,ne3)
   (15411)      collocation_eqns(nh3,nc1,ne2)
  (-15411)      collocation_eqns(nh3,nc1,ne3)
   (15411)      collocation_eqns(nh3,nc2,ne2)
  (-15411)      collocation_eqns(nh3,nc2,ne3)
   (13074)      collocation_eqns(nh4,nc1,ne2)
  (-13074)      collocation_eqns(nh4,nc1,ne3)
   (13074)      collocation_eqns(nh4,nc2,ne2)
  (-13074)      collocation_eqns(nh4,nc2,ne3)
    (8579)      collocation_eqns(nh5,nc1,ne2)
   (-8579)      collocation_eqns(nh5,nc1,ne3)
    (8579)      collocation_eqns(nh5,nc2,ne2)
   (-8579)      collocation_eqns(nh5,nc2,ne3)
    (7053)      collocation_eqns(nh6,nc1,ne2)
   (-7053)      collocation_eqns(nh6,nc1,ne3)
    (7053)      collocation_eqns(nh6,nc2,ne2)
   (-7053)      collocation_eqns(nh6,nc2,ne3)
    (7053)      collocation_eqns(nh7,nc1,ne2)
   (-7053)      collocation_eqns(nh7,nc1,ne3)
    (7053)      collocation_eqns(nh7,nc2,ne2)
   (-7053)      collocation_eqns(nh7,nc2,ne3)
    (5054)      collocation_eqns(nh8,nc1,ne2)
   (-5054)      collocation_eqns(nh8,nc1,ne3)
    (5054)      collocation_eqns(nh8,nc2,ne2)
   (-5054)      collocation_eqns(nh8,nc2,ne3)
    (3907)      collocation_eqns(nh9,nc1,ne2)
   (-3907)      collocation_eqns(nh9,nc1,ne3)
    (3907)      collocation_eqns(nh9,nc2,ne2)
   (-3907)      collocation_eqns(nh9,nc2,ne3)
    (2624)      collocation_eqns(nh10,nc1,ne2)
   (-2624)      collocation_eqns(nh10,nc1,ne3)
    (2624)      collocation_eqns(nh10,nc2,ne2)
   (-2624)      collocation_eqns(nh10,nc2,ne3)
    (1744)      collocation_eqns(nh11,nc1,ne2)
   (-1744)      collocation_eqns(nh11,nc1,ne3)
    (1744)      collocation_eqns(nh11,nc2,ne2)
   (-1744)      collocation_eqns(nh11,nc2,ne3)
    (1744)      collocation_eqns(nh12,nc1,ne2)
   (-1744)      collocation_eqns(nh12,nc1,ne3)
    (1744)      collocation_eqns(nh12,nc2,ne2)
   (-1744)      collocation_eqns(nh12,nc2,ne3)
    (1272)      collocation_eqns(nh13,nc1,ne2)
   (-1272)      collocation_eqns(nh13,nc1,ne3)
    (1272)      collocation_eqns(nh13,nc2,ne2)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:32 Page 16
Marine population dynamics COPS 2.0 #6 (POPDYNM,SEQ=234)
Column Listing      SOLVE popdynm Using NLP From line 164


     g  growth rates

   (-1272)      collocation_eqns(nh13,nc2,ne3)
     (821)      collocation_eqns(nh14,nc1,ne2)
    (-821)      collocation_eqns(nh14,nc1,ne3)
     (821)      collocation_eqns(nh14,nc2,ne2)
    (-821)      collocation_eqns(nh14,nc2,ne3)
     (577)      collocation_eqns(nh15,nc1,ne2)
    (-577)      collocation_eqns(nh15,nc1,ne3)
     (577)      collocation_eqns(nh15,nc2,ne2)
    (-577)      collocation_eqns(nh15,nc2,ne3)
     (337)      collocation_eqns(nh16,nc1,ne2)
    (-337)      collocation_eqns(nh16,nc1,ne3)
     (337)      collocation_eqns(nh16,nc2,ne2)
    (-337)      collocation_eqns(nh16,nc2,ne3)
     (337)      collocation_eqns(nh17,nc1,ne2)
    (-337)      collocation_eqns(nh17,nc1,ne3)
     (337)      collocation_eqns(nh17,nc2,ne2)
    (-337)      collocation_eqns(nh17,nc2,ne3)
     (228)      collocation_eqns(nh18,nc1,ne2)
    (-228)      collocation_eqns(nh18,nc1,ne3)
     (228)      collocation_eqns(nh18,nc2,ne2)
    (-228)      collocation_eqns(nh18,nc2,ne3)
     (168)      collocation_eqns(nh19,nc1,ne2)
    (-168)      collocation_eqns(nh19,nc1,ne3)
     (168)      collocation_eqns(nh19,nc2,ne2)
    (-168)      collocation_eqns(nh19,nc2,ne3)
      (99)      collocation_eqns(nh20,nc1,ne2)
     (-99)      collocation_eqns(nh20,nc1,ne3)
      (99)      collocation_eqns(nh20,nc2,ne2)
     (-99)      collocation_eqns(nh20,nc2,ne3)
      (65)      collocation_eqns(nh21,nc1,ne2)
     (-65)      collocation_eqns(nh21,nc1,ne3)
      (65)      collocation_eqns(nh21,nc2,ne2)
     (-65)      collocation_eqns(nh21,nc2,ne3)
      (65)      collocation_eqns(nh22,nc1,ne2)
     (-65)      collocation_eqns(nh22,nc1,ne3)
      (65)      collocation_eqns(nh22,nc2,ne2)
     (-65)      collocation_eqns(nh22,nc2,ne3)
      (44)      collocation_eqns(nh23,nc1,ne2)
     (-44)      collocation_eqns(nh23,nc1,ne3)
      (44)      collocation_eqns(nh23,nc2,ne2)
     (-44)      collocation_eqns(nh23,nc2,ne3)
      (27)      collocation_eqns(nh24,nc1,ne2)
     (-27)      collocation_eqns(nh24,nc1,ne3)
      (27)      collocation_eqns(nh24,nc2,ne2)
     (-27)      collocation_eqns(nh24,nc2,ne3)
      (20)      collocation_eqns(nh25,nc1,ne2)
     (-20)      collocation_eqns(nh25,nc1,ne3)
      (20)      collocation_eqns(nh25,nc2,ne2)
     (-20)      collocation_eqns(nh25,nc2,ne3)

g(ne3)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:32 Page 17
Marine population dynamics COPS 2.0 #6 (POPDYNM,SEQ=234)
Column Listing      SOLVE popdynm Using NLP From line 164


     g  growth rates

                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
   (10000)      collocation_eqns(nh1,nc1,ne3)
  (-10000)      collocation_eqns(nh1,nc1,ne4)
   (10000)      collocation_eqns(nh1,nc2,ne3)
  (-10000)      collocation_eqns(nh1,nc2,ne4)
   (10000)      collocation_eqns(nh2,nc1,ne3)
  (-10000)      collocation_eqns(nh2,nc1,ne4)
   (10000)      collocation_eqns(nh2,nc2,ne3)
  (-10000)      collocation_eqns(nh2,nc2,ne4)
   (13040)      collocation_eqns(nh3,nc1,ne3)
  (-13040)      collocation_eqns(nh3,nc1,ne4)
   (13040)      collocation_eqns(nh3,nc2,ne3)
  (-13040)      collocation_eqns(nh3,nc2,ne4)
   (14623)      collocation_eqns(nh4,nc1,ne3)
  (-14623)      collocation_eqns(nh4,nc1,ne4)
   (14623)      collocation_eqns(nh4,nc2,ne3)
  (-14623)      collocation_eqns(nh4,nc2,ne4)
   (12434)      collocation_eqns(nh5,nc1,ne3)
  (-12434)      collocation_eqns(nh5,nc1,ne4)
   (12434)      collocation_eqns(nh5,nc2,ne3)
  (-12434)      collocation_eqns(nh5,nc2,ne4)
   (11219)      collocation_eqns(nh6,nc1,ne3)
  (-11219)      collocation_eqns(nh6,nc1,ne4)
   (11219)      collocation_eqns(nh6,nc2,ne3)
  (-11219)      collocation_eqns(nh6,nc2,ne4)
   (11219)      collocation_eqns(nh7,nc1,ne3)
  (-11219)      collocation_eqns(nh7,nc1,ne4)
   (11219)      collocation_eqns(nh7,nc2,ne3)
  (-11219)      collocation_eqns(nh7,nc2,ne4)
   (10065)      collocation_eqns(nh8,nc1,ne3)
  (-10065)      collocation_eqns(nh8,nc1,ne4)
   (10065)      collocation_eqns(nh8,nc2,ne3)
  (-10065)      collocation_eqns(nh8,nc2,ne4)
    (9473)      collocation_eqns(nh9,nc1,ne3)
   (-9473)      collocation_eqns(nh9,nc1,ne4)
    (9473)      collocation_eqns(nh9,nc2,ne3)
   (-9473)      collocation_eqns(nh9,nc2,ne4)
    (7421)      collocation_eqns(nh10,nc1,ne3)
   (-7421)      collocation_eqns(nh10,nc1,ne4)
    (7421)      collocation_eqns(nh10,nc2,ne3)
   (-7421)      collocation_eqns(nh10,nc2,ne4)
    (5369)      collocation_eqns(nh11,nc1,ne3)
   (-5369)      collocation_eqns(nh11,nc1,ne4)
    (5369)      collocation_eqns(nh11,nc2,ne3)
   (-5369)      collocation_eqns(nh11,nc2,ne4)
    (5369)      collocation_eqns(nh12,nc1,ne3)
   (-5369)      collocation_eqns(nh12,nc1,ne4)
    (5369)      collocation_eqns(nh12,nc2,ne3)
   (-5369)      collocation_eqns(nh12,nc2,ne4)
    (4713)      collocation_eqns(nh13,nc1,ne3)
   (-4713)      collocation_eqns(nh13,nc1,ne4)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:32 Page 18
Marine population dynamics COPS 2.0 #6 (POPDYNM,SEQ=234)
Column Listing      SOLVE popdynm Using NLP From line 164


     g  growth rates

    (4713)      collocation_eqns(nh13,nc2,ne3)
   (-4713)      collocation_eqns(nh13,nc2,ne4)
    (3451)      collocation_eqns(nh14,nc1,ne3)
   (-3451)      collocation_eqns(nh14,nc1,ne4)
    (3451)      collocation_eqns(nh14,nc2,ne3)
   (-3451)      collocation_eqns(nh14,nc2,ne4)
    (2649)      collocation_eqns(nh15,nc1,ne3)
   (-2649)      collocation_eqns(nh15,nc1,ne4)
    (2649)      collocation_eqns(nh15,nc2,ne3)
   (-2649)      collocation_eqns(nh15,nc2,ne4)
    (2058)      collocation_eqns(nh16,nc1,ne3)
   (-2058)      collocation_eqns(nh16,nc1,ne4)
    (2058)      collocation_eqns(nh16,nc2,ne3)
   (-2058)      collocation_eqns(nh16,nc2,ne4)
    (2058)      collocation_eqns(nh17,nc1,ne3)
   (-2058)      collocation_eqns(nh17,nc1,ne4)
    (2058)      collocation_eqns(nh17,nc2,ne3)
   (-2058)      collocation_eqns(nh17,nc2,ne4)
    (1440)      collocation_eqns(nh18,nc1,ne3)
   (-1440)      collocation_eqns(nh18,nc1,ne4)
    (1440)      collocation_eqns(nh18,nc2,ne3)
   (-1440)      collocation_eqns(nh18,nc2,ne4)
    (1178)      collocation_eqns(nh19,nc1,ne3)
   (-1178)      collocation_eqns(nh19,nc1,ne4)
    (1178)      collocation_eqns(nh19,nc2,ne3)
   (-1178)      collocation_eqns(nh19,nc2,ne4)
     (919)      collocation_eqns(nh20,nc1,ne3)
    (-919)      collocation_eqns(nh20,nc1,ne4)
     (919)      collocation_eqns(nh20,nc2,ne3)
    (-919)      collocation_eqns(nh20,nc2,ne4)
     (647)      collocation_eqns(nh21,nc1,ne3)
    (-647)      collocation_eqns(nh21,nc1,ne4)
     (647)      collocation_eqns(nh21,nc2,ne3)
    (-647)      collocation_eqns(nh21,nc2,ne4)
     (647)      collocation_eqns(nh22,nc1,ne3)
    (-647)      collocation_eqns(nh22,nc1,ne4)
     (647)      collocation_eqns(nh22,nc2,ne3)
    (-647)      collocation_eqns(nh22,nc2,ne4)
     (509)      collocation_eqns(nh23,nc1,ne3)
    (-509)      collocation_eqns(nh23,nc1,ne4)
     (509)      collocation_eqns(nh23,nc2,ne3)
    (-509)      collocation_eqns(nh23,nc2,ne4)
     (345)      collocation_eqns(nh24,nc1,ne3)
    (-345)      collocation_eqns(nh24,nc1,ne4)
     (345)      collocation_eqns(nh24,nc2,ne3)
    (-345)      collocation_eqns(nh24,nc2,ne4)
     (231)      collocation_eqns(nh25,nc1,ne3)
    (-231)      collocation_eqns(nh25,nc1,ne4)
     (231)      collocation_eqns(nh25,nc2,ne3)
    (-231)      collocation_eqns(nh25,nc2,ne4)

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:32 Page 19
Marine population dynamics COPS 2.0 #6 (POPDYNM,SEQ=234)
Column Listing      SOLVE popdynm Using NLP From line 164


     g  growth rates

REMAINING 4 ENTRIES SKIPPED

---- m  mortality rates

m(ne1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
   (20000)      collocation_eqn1(nh1,nc1)
   (20000)      collocation_eqn1(nh1,nc2)
   (20000)      collocation_eqn1(nh2,nc1)
   (20000)      collocation_eqn1(nh2,nc2)
   (12445)      collocation_eqn1(nh3,nc1)
   (12445)      collocation_eqn1(nh3,nc2)
    (7705)      collocation_eqn1(nh4,nc1)
    (7705)      collocation_eqn1(nh4,nc2)
    (4664)      collocation_eqn1(nh5,nc1)
    (4664)      collocation_eqn1(nh5,nc2)
    (2977)      collocation_eqn1(nh6,nc1)
    (2977)      collocation_eqn1(nh6,nc2)
    (2977)      collocation_eqn1(nh7,nc1)
    (2977)      collocation_eqn1(nh7,nc2)
    (1769)      collocation_eqn1(nh8,nc1)
    (1769)      collocation_eqn1(nh8,nc2)
     (943)      collocation_eqn1(nh9,nc1)
     (943)      collocation_eqn1(nh9,nc2)
     (581)      collocation_eqn1(nh10,nc1)
     (581)      collocation_eqn1(nh10,nc2)
     (355)      collocation_eqn1(nh11,nc1)
     (355)      collocation_eqn1(nh11,nc2)
     (355)      collocation_eqn1(nh12,nc1)
     (355)      collocation_eqn1(nh12,nc2)
     (223)      collocation_eqn1(nh13,nc1)
     (223)      collocation_eqn1(nh13,nc2)
     (137)      collocation_eqn1(nh14,nc1)
     (137)      collocation_eqn1(nh14,nc2)
      (87)      collocation_eqn1(nh15,nc1)
      (87)      collocation_eqn1(nh15,nc2)
      (49)      collocation_eqn1(nh16,nc1)
      (49)      collocation_eqn1(nh16,nc2)
      (49)      collocation_eqn1(nh17,nc1)
      (49)      collocation_eqn1(nh17,nc2)
      (32)      collocation_eqn1(nh18,nc1)
      (32)      collocation_eqn1(nh18,nc2)
      (17)      collocation_eqn1(nh19,nc1)
      (17)      collocation_eqn1(nh19,nc2)
      (11)      collocation_eqn1(nh20,nc1)
      (11)      collocation_eqn1(nh20,nc2)
       (7)      collocation_eqn1(nh21,nc1)
       (7)      collocation_eqn1(nh21,nc2)
       (7)      collocation_eqn1(nh22,nc1)
       (7)      collocation_eqn1(nh22,nc2)
       (4)      collocation_eqn1(nh23,nc1)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:32 Page 20
Marine population dynamics COPS 2.0 #6 (POPDYNM,SEQ=234)
Column Listing      SOLVE popdynm Using NLP From line 164


     m  mortality rates

       (4)      collocation_eqn1(nh23,nc2)
       (2)      collocation_eqn1(nh24,nc1)
       (2)      collocation_eqn1(nh24,nc2)
       (1)      collocation_eqn1(nh25,nc1)
       (1)      collocation_eqn1(nh25,nc2)

m(ne2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
   (17000)      collocation_eqns(nh1,nc1,ne2)
   (17000)      collocation_eqns(nh1,nc2,ne2)
   (17000)      collocation_eqns(nh2,nc1,ne2)
   (17000)      collocation_eqns(nh2,nc2,ne2)
   (15411)      collocation_eqns(nh3,nc1,ne2)
   (15411)      collocation_eqns(nh3,nc2,ne2)
   (13074)      collocation_eqns(nh4,nc1,ne2)
   (13074)      collocation_eqns(nh4,nc2,ne2)
    (8579)      collocation_eqns(nh5,nc1,ne2)
    (8579)      collocation_eqns(nh5,nc2,ne2)
    (7053)      collocation_eqns(nh6,nc1,ne2)
    (7053)      collocation_eqns(nh6,nc2,ne2)
    (7053)      collocation_eqns(nh7,nc1,ne2)
    (7053)      collocation_eqns(nh7,nc2,ne2)
    (5054)      collocation_eqns(nh8,nc1,ne2)
    (5054)      collocation_eqns(nh8,nc2,ne2)
    (3907)      collocation_eqns(nh9,nc1,ne2)
    (3907)      collocation_eqns(nh9,nc2,ne2)
    (2624)      collocation_eqns(nh10,nc1,ne2)
    (2624)      collocation_eqns(nh10,nc2,ne2)
    (1744)      collocation_eqns(nh11,nc1,ne2)
    (1744)      collocation_eqns(nh11,nc2,ne2)
    (1744)      collocation_eqns(nh12,nc1,ne2)
    (1744)      collocation_eqns(nh12,nc2,ne2)
    (1272)      collocation_eqns(nh13,nc1,ne2)
    (1272)      collocation_eqns(nh13,nc2,ne2)
     (821)      collocation_eqns(nh14,nc1,ne2)
     (821)      collocation_eqns(nh14,nc2,ne2)
     (577)      collocation_eqns(nh15,nc1,ne2)
     (577)      collocation_eqns(nh15,nc2,ne2)
     (337)      collocation_eqns(nh16,nc1,ne2)
     (337)      collocation_eqns(nh16,nc2,ne2)
     (337)      collocation_eqns(nh17,nc1,ne2)
     (337)      collocation_eqns(nh17,nc2,ne2)
     (228)      collocation_eqns(nh18,nc1,ne2)
     (228)      collocation_eqns(nh18,nc2,ne2)
     (168)      collocation_eqns(nh19,nc1,ne2)
     (168)      collocation_eqns(nh19,nc2,ne2)
      (99)      collocation_eqns(nh20,nc1,ne2)
      (99)      collocation_eqns(nh20,nc2,ne2)
      (65)      collocation_eqns(nh21,nc1,ne2)
      (65)      collocation_eqns(nh21,nc2,ne2)
      (65)      collocation_eqns(nh22,nc1,ne2)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:32 Page 21
Marine population dynamics COPS 2.0 #6 (POPDYNM,SEQ=234)
Column Listing      SOLVE popdynm Using NLP From line 164


     m  mortality rates

      (65)      collocation_eqns(nh22,nc2,ne2)
      (44)      collocation_eqns(nh23,nc1,ne2)
      (44)      collocation_eqns(nh23,nc2,ne2)
      (27)      collocation_eqns(nh24,nc1,ne2)
      (27)      collocation_eqns(nh24,nc2,ne2)
      (20)      collocation_eqns(nh25,nc1,ne2)
      (20)      collocation_eqns(nh25,nc2,ne2)

m(ne3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
   (10000)      collocation_eqns(nh1,nc1,ne3)
   (10000)      collocation_eqns(nh1,nc2,ne3)
   (10000)      collocation_eqns(nh2,nc1,ne3)
   (10000)      collocation_eqns(nh2,nc2,ne3)
   (13040)      collocation_eqns(nh3,nc1,ne3)
   (13040)      collocation_eqns(nh3,nc2,ne3)
   (14623)      collocation_eqns(nh4,nc1,ne3)
   (14623)      collocation_eqns(nh4,nc2,ne3)
   (12434)      collocation_eqns(nh5,nc1,ne3)
   (12434)      collocation_eqns(nh5,nc2,ne3)
   (11219)      collocation_eqns(nh6,nc1,ne3)
   (11219)      collocation_eqns(nh6,nc2,ne3)
   (11219)      collocation_eqns(nh7,nc1,ne3)
   (11219)      collocation_eqns(nh7,nc2,ne3)
   (10065)      collocation_eqns(nh8,nc1,ne3)
   (10065)      collocation_eqns(nh8,nc2,ne3)
    (9473)      collocation_eqns(nh9,nc1,ne3)
    (9473)      collocation_eqns(nh9,nc2,ne3)
    (7421)      collocation_eqns(nh10,nc1,ne3)
    (7421)      collocation_eqns(nh10,nc2,ne3)
    (5369)      collocation_eqns(nh11,nc1,ne3)
    (5369)      collocation_eqns(nh11,nc2,ne3)
    (5369)      collocation_eqns(nh12,nc1,ne3)
    (5369)      collocation_eqns(nh12,nc2,ne3)
    (4713)      collocation_eqns(nh13,nc1,ne3)
    (4713)      collocation_eqns(nh13,nc2,ne3)
    (3451)      collocation_eqns(nh14,nc1,ne3)
    (3451)      collocation_eqns(nh14,nc2,ne3)
    (2649)      collocation_eqns(nh15,nc1,ne3)
    (2649)      collocation_eqns(nh15,nc2,ne3)
    (2058)      collocation_eqns(nh16,nc1,ne3)
    (2058)      collocation_eqns(nh16,nc2,ne3)
    (2058)      collocation_eqns(nh17,nc1,ne3)
    (2058)      collocation_eqns(nh17,nc2,ne3)
    (1440)      collocation_eqns(nh18,nc1,ne3)
    (1440)      collocation_eqns(nh18,nc2,ne3)
    (1178)      collocation_eqns(nh19,nc1,ne3)
    (1178)      collocation_eqns(nh19,nc2,ne3)
     (919)      collocation_eqns(nh20,nc1,ne3)
     (919)      collocation_eqns(nh20,nc2,ne3)
     (647)      collocation_eqns(nh21,nc1,ne3)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:32 Page 22
Marine population dynamics COPS 2.0 #6 (POPDYNM,SEQ=234)
Column Listing      SOLVE popdynm Using NLP From line 164


     m  mortality rates

     (647)      collocation_eqns(nh21,nc2,ne3)
     (647)      collocation_eqns(nh22,nc1,ne3)
     (647)      collocation_eqns(nh22,nc2,ne3)
     (509)      collocation_eqns(nh23,nc1,ne3)
     (509)      collocation_eqns(nh23,nc2,ne3)
     (345)      collocation_eqns(nh24,nc1,ne3)
     (345)      collocation_eqns(nh24,nc2,ne3)
     (231)      collocation_eqns(nh25,nc1,ne3)
     (231)      collocation_eqns(nh25,nc2,ne3)

REMAINING 5 ENTRIES SKIPPED
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:32 Page 23
Marine population dynamics COPS 2.0 #6 (POPDYNM,SEQ=234)
Model Statistics    SOLVE popdynm Using NLP From line 164


MODEL STATISTICS

BLOCKS OF EQUATIONS           7     SINGLE EQUATIONS        1,393
BLOCKS OF VARIABLES           7     SINGLE VARIABLES        1,416
NON ZERO ELEMENTS         6,243     NON LINEAR N-Z          2,274
DERIVATIVE POOL              20     CONSTANT POOL             199
CODE LENGTH               4,537


GENERATION TIME      =        0.008 SECONDS      4 MB  24.7.4 r58773 LEX-LEG


EXECUTION TIME       =        0.010 SECONDS      4 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:22:32 Page 24
Marine population dynamics COPS 2.0 #6 (POPDYNM,SEQ=234)
Solution Report     SOLVE popdynm Using NLP From line 164


               S O L V E      S U M M A R Y

     MODEL   popdynm             OBJECTIVE  obj
     TYPE    NLP                 DIRECTION  MINIMIZE
     SOLVER  CONVERT             FROM LINE  164

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      14 No Solution Returned     
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.000      1000.000
 ITERATION COUNT, LIMIT         0    2000000000
 EVALUATION ERRORS              0             0

Convert 2.0      24.7.4 r58773 Released Sep 19, 2016 LEG x86 64bit/Linux      

--- Using Option File
Reading parameter(s) from "/home/renigijus/gams/opt-mod-lib/gamslib/popdynm/convert.opt"
>>  gams popdynm-scalar.gms
Finished reading from "/home/renigijus/gams/opt-mod-lib/gamslib/popdynm/convert.opt"
Gams      : popdynm-scalar.gms


No solution returned


EXECUTION TIME       =        0.000 SECONDS      2 MB  24.7.4 r58773 LEX-LEG


USER: Remigijus Paulavicius, Single User License     S170731:0859AO-LNX
      Imperial College London, Dept. of Chemical Engineering    DC13449
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      /home/renigijus/gams/opt-mod-lib/gamslib/popdynm/popdynm.gms
Output     /home/renigijus/gams/opt-mod-lib/gamslib/popdynm/popdynm-scalar.gms.lst
