GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:43:35 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  option MIP=convert;
   2  option MIP=convert;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:43:35 Page 2
A Transportation Problem with Piecewise Linear Functions (TRNSPWLX,SEQ=386)
C o m p i l a t i o n


       
      This problem finds a least cost shipping schedule that meets
      requirements at markets and supplies at factories. This instance
      applies economies of scale which results in a non-convex
      objective. This is an extension of the trnsport model in the GAMS
      Model Library.
       
      The original nonlinear term is "sum((i,j), c(i,j)*sqrt(x(i,j)))". We
      use the following discretization f(x) of sqrt(x)
       
        For x<=50:  f(x) = 1/sqrt(50)*x,
        for x>=400: f(x) = 1/(2*sqrt(400))*(x-400) + sqrt(400)
        in between we discretize with linear interpolation between points
       
      The model is organized as follows:
        1) We set a starting point for the NLP solver so it will get stuck
           in local optimum that is not the global optimum.
       
        2) We use the generic pwlfunc.inc batinclude to get a piecewise linear
           MIP formulation to get close to the global optimum.
       
        3) We restart the non-convex NLP from the solution of the discretized
           model and hope that the NLP solver finds the global solution.
       
      This model is based on the model trnspwl in the GAMS Model Library
       
       
      Dantzig, G B, Chapter 3.3. In Linear Programming and Extensions.
      Princeton University Press, Princeton, New Jersey, 1963.
       
  36   
  37  Sets
  38       i   canning plants   / seattle, san-diego /
  39       j   markets          / new-york, chicago, topeka / ;
  40   
  41  Parameters
  42   
  43       a(i)  capacity of plant i in cases
  44         /    seattle     350
  45              san-diego   600  /
  46   
  47       b(j)  demand at market j in cases
  48         /    new-york    325
  49              chicago     300
  50              topeka      275  / ;
  51   
  52  Table d(i,j)  distance in thousands of miles
  53                    new-york       chicago      topeka
  54      seattle          2.5           1.7          1.8
  55      san-diego        2.5           1.8          1.4  ;
  56   
  57  Scalar f  freight in dollars per case per thousand miles  /90/ ;
  58   
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:43:35 Page 3
A Transportation Problem with Piecewise Linear Functions (TRNSPWLX,SEQ=386)
C o m p i l a t i o n


  59  Parameter c(i,j)  transport cost in thousands of dollars per case ;
  60   
  61            c(i,j) = f * d(i,j) / 1000 ;
  62   
  63  Variables
  64       x(i,j)  shipment quantities in cases
  65       z       total transportation costs in thousands of dollars ;
  66   
  67  Positive Variable x ;
  68   
  69  * Demonstrate how to restrict the model index
  70  set ij(i,j); ij(i,j) = yes;
  71   
  72  Equations
  73       cost        define objective function with economies of scale
  74       supply(i)   observe supply limit at plant i
  75       demand(j)   satisfy demand at market j ;
  76   
  77  cost ..        z  =e=  sum(ij(i,j), c(i,j)*sqrt(x(i,j))) ;
  78   
  79  supply(i) ..   sum(ij(i,j), x(i,j))  =l=  a(i) ;
  80   
  81  demand(j) ..   sum(ij(i,j), x(i,j))  =g=  b(j) ;
  82   
  83  Model transport /all/ ;
  84   
  85  * Start the local NLP solver in a local solution that is not globally optimal
  86  x.l('seattle  ','chicago ') =  25;
  87  x.l('seattle  ','topeka  ') = 275;
  88  x.l('san-diego','new-york') = 325;
  89  x.l('san-diego','chicago ') = 275;
  90   
  91  option nlp=conopt;
  92  Solve transport using nlp minimizing z ;
  93   
  94  * The first model (formulation a) implements a piecewise linear
  95  * approximation based on the convex combination of neighboring points
  96  * using SOS2 variables with unbounded segments at the beginning and
  97  * end of the discretization
  98   
  99  Set s   segments       / s0*s6 /
 100      sl  segment labels / x, y coordinates, l length, g slope /
 101   
 102  Table sqrtp(s,sl) piecewise linear function for sqrt
 103        x             y      l                 g
 104  s0   50   [sqrt( 50)]   -inf    [ sqrt(50)/50]
 105  s1   50   [sqrt( 50)]     70    [(sqrt(120)-sqrt( 50))/70]
 106  s2  120   [sqrt(120)]     70    [(sqrt(190)-sqrt(120))/70]
 107  s3  190   [sqrt(190)]     70    [(sqrt(260)-sqrt(190))/70]
 108  s4  260   [sqrt(260)]     70    [(sqrt(330)-sqrt(260))/70]
 109  s5  330   [sqrt(330)]     70    [(sqrt(400)-sqrt(330))/70]
 110  s6  400   [sqrt(400)]   +inf    [1/(2*sqrt(400))];
 111   
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:43:35 Page 4
A Transportation Problem with Piecewise Linear Functions (TRNSPWLX,SEQ=386)
C o m p i l a t i o n


 112  * This following batinclude has a parameter p as first argument that
 113  * defines segments of a piecewise linear function. A start point (x,y) of
 114  * a segment plus length and slope need to be provided provides by this
 115  * parameter. The actual labels for are also provided on the batinclude
 116  * call (arguments 3-6) together with the set of segments (arg 2) and an
 117  * optional index set (idxp) to define an indexed parameter to define multiple
 118  * piecewise linear functions (arg 7). The optional arguments 8 and 9 allow
 119  * the use the same function f with different endogenous arguments (idxm).
 120  *
 121  * The batinclude provides a subset of active segments p_Seg(s), i.e. the
 122  * parameter must have data before the batinclude call. The batinclude also
 123  * provide a couple of macros:
 124  * 1) p_Func(x[,idxp])   evaluates the function at point x
 125  * 2) p_x([idxp][,idxm]) expression to assign x(idxm) value
 126  * 3) p_y([idxp][,idxm]) expression to assign y(idxm) value
 127  *
 128  * The header of pwlfunc.inc describes its use in more detail
 129   
BATINCLUDE /home/renigijus/gams/opt-mod-lib/gamslib/trnspwlx/pwlfunc.inc
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:43:35 Page 5
Piecewise Linear Function include file
C o m p i l a t i o n


      This include file provides some symbol and macro definition for providing
      piecewise linear functions in GAMS in a convenient way. Piecewise linear
      functions are provided in terms of segments. Each segment has a
      (x,y) coordinate point, a (potentially infinite) length, and a slope. The
      sign of the length data determines if the segment expands to the left (negative
      length) or the right (positive length) of the (x,y) point. These segment
      definitions allow more that pure piecewise linear functions. Segments can
      overlap and there can be holes in the x coordinate space. There is also no
      order requirement of the segment x coordinates.
       
      Each segment has two variables associated: a binary variable that enables the
      segment to be used. Clearly only one segment can be active. The other variable
      is a positive variable (upper bound of this variable is the |length| of the
      segment. This variable shows how far we went into this segment from the starting
      point (x,y).
       
      A piecewise linear function is described by a parameter f(seg,hdr). In case f
      needs to be an indexed parameter (multiple functions), this include
      file needs to be called with an additional argument: the additional index
      set(s) of f (first position in f).
       
      This include file declares a macro that compues the f(x) value for a given x in
      assigment statements (f_Func). If also contains declarations and definitions
      of variables and equations to represent the piecewise linear function in a
      model. In some models we want to use a piecewise linear function at different
      input with different endogenous x values. While the exogenous function
      information does not change, we need to index the variables/equations for the
      linearization of the function call in the model. That is why we can supply as
      the 8th and 9th argument an index and a dynamic set over these indices, to
      connect multiple input and outputs to the same piecewise linear function.
       
      If the piecewise linear function contains segments of infinite length,
      the usual bigM trick segX <= L*sigB does not work. In this case we form a
      SOS1 constraint with the variables segX and 1-sigB. This has the same effect as
      the bigM constraint, but is independent of the length of the segment and hence
      also works with infinite length. While the required variables and equations will
      be declared, the model will only contain such constructs if segments with
      infinite length exist.
       
      The endogenous input parameter of a piecewise linear function can be couple
      to a model variable by using the marco (which expands into an expression) f_x.
      In a similar fashion the function value f(x) can be connected to a model
      variable using f_y.
 177   
 178  set PwlSeg__  SOS1 segments / pwls1__,pwls2__ /;
 179   
 186   
 207   
 209  Set sqrtp_Seg(s); option sqrtp_Seg<sqrtp;
 210   
 211  * The segements in FPwl may be overlapping and so f might not describe a
 212  * well defined function. So we need to make sure that for a given x we
 213  * return a single f(x). SMin and SMax are a possible choice for this
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:43:35 Page 6
Piecewise Linear Function include file
C o m p i l a t i o n


 214  $macro sqrtp_Func(arg) \
 215    smin(sqrtp_Seg(s)$(sqrtp(s,'l')=0 and abs(arg-sqrtp(s,'x'))<1e-6 and &\
 216                                           arg-1e-6<=sqrtp(s,'x')+sqrtp(s,'l')  \
 217                  or sqrtp(s,'l')>-1e-6 and arg-1e-6>=sqrtp(s,'x') and &\
 218                                           arg-1e-6<=sqrtp(s,'x')+sqrtp(s,'l')  \
 219                  or sqrtp(s,'l')<+1e-6 and arg-1e-6<=sqrtp(s,'x') and &\
 220                                           arg+1e-6>=sqrtp(s,'x')+sqrtp(s,'l')),\
 221                     sqrtp(s,'y')+ (arg-sqrtp(s,'x'))*sqrtp(s,'g'))
 222   
 223  * Declaration of subset of active segments of the function and variables and
 224  * equations to describe the piecewise linear function linearly.
 226   
 227  Positive Variable sqrtpSeg(s,i,j);
 228  Binary Variable sqrtpBin(s,i,j);
 229  Equation defsqrtpSeg(s,i,j), defsqrtpOne(i,j);
 230  defsqrtpSeg(sqrtp_Seg(s),i,j)$(abs(sqrtp(s,'l'))<>inf and ij(i,j))..
 231    sqrtpSeg(s,i,j) =l= abs(sqrtp(s,'l'))*sqrtpBin(s,i,j);
 232  defsqrtpOne(i,j)$ij(i,j).. sum(sqrtp_Seg(s), sqrtpBin(s,i,j)) =e= 1;
 233  Equation defsqrtpinf1(s,i,j), defsqrtpinf2(s,i,j);
 234  SOS1 Variable sqrtpSOS1(s,i,j,PwlSeg__);
 235  defsqrtpinf1(sqrtp_Seg(s),i,j)$(abs(sqrtp(s,'l'))=inf and ij(i,j))..
 236    1-sqrtpBin(s,i,j) =e= sqrtpSOS1(s,i,j,'pwls1__');
 237  defsqrtpinf2(sqrtp_Seg(s),i,j)$(abs(sqrtp(s,'l'))=inf and ij(i,j))..
 238      sqrtpSeg(s,i,j) =e= sqrtpSOS1(s,i,j,'pwls2__');
 239   
 240  * The following macros define the x and y parts which can be connected
 241  * to existing variables in the model
 243  $macro sqrtp_x(i,j) \
 244    sum(sqrtp_Seg(s), sqrtpBin(s,i,j)*sqrtp(s,'x') \
 245                      + sqrtpSeg(s,i,j)*sign(sqrtp(s,'l')))
 247  $macro sqrtp_y(i,j) \
 248    sum(sqrtp_Seg(s), sqrtpBin(s,i,j)*sqrtp(s,'y') \
 249      + sqrtpSeg(s,i,j)*sqrtp(s,'g')*sign(sqrtp(s,'l')))
 250   
 251  Equation defcouplex(i,j), defobjdisc;
 252  defcouplex(ij(i,j)).. x(i,j) =e= sum(sqrtp_Seg(s), sqrtpBin(s,i,j)*sqrtp(s,'x')+ sqrtpSeg(s,i,j)*sign(sqrtp(s,'l')));
 253  defobjdisc..               z =e= sum(ij(i,j), c(i,j)*sum(sqrtp_Seg(s), sqrtpBin(s,i,j)*sqrtp(s,'y')+ sqrtpSeg(s,i,j)*sqrtp(s,'g')*sign(sqrtp(s,'l'))));
 254   
 255  model trnspwl / supply, demand, defobjdisc, defcouplex, defsqrtpSeg,defsqrtpOne,defsqrtpinf1,defsqrtpinf2 /;
 256   
 257  option optcr=0;
 258  solve trnspwl min z using mip;
 259   
 260  Solve transport using nlp minimizing z ;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:43:35 Page 7
Piecewise Linear Function include file
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  /home/renigijus/gams/opt-mod-lib/gamslib/trnspwlx/trnspwlx.gms
     2      130 BATINCLUDE     1     130  ./home/renigijus/gams/opt-mod-lib/gamslib/trnspwlx/pwlfunc.inc


COMPILATION TIME     =        0.003 SECONDS      3 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:43:35 Page 8
Piecewise Linear Function include file
Equation Listing    SOLVE transport Using NLP From line 92


---- cost  =E=  define objective function with economies of scale

cost..  - (2250000000)*x(seattle,new-york) - (0.0153)*x(seattle,chicago) - (0.00488448378215977)*x(seattle,topeka) - (0.00624037720753383)*x(san-diego,new-york) - (0.00488448378215977)*x(san-diego,chicago) - (1260000000)*x(san-diego,topeka) + z =E= 0 ;
     
      (LHS = -10.1941773452727, INFES = 10.1941773452727 ****)
     

---- supply  =L=  observe supply limit at plant i

supply(seattle)..  x(seattle,new-york) + x(seattle,chicago) + x(seattle,topeka) =L= 350 ; (LHS = 300)
     
supply(san-diego)..  x(san-diego,new-york) + x(san-diego,chicago) + x(san-diego,topeka) =L= 600 ; (LHS = 600)
     

---- demand  =G=  satisfy demand at market j

demand(new-york)..  x(seattle,new-york) + x(san-diego,new-york) =G= 325 ; (LHS = 325)
     
demand(chicago)..  x(seattle,chicago) + x(san-diego,chicago) =G= 300 ; (LHS = 300)
     
demand(topeka)..  x(seattle,topeka) + x(san-diego,topeka) =G= 275 ; (LHS = 275)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:43:35 Page 9
Piecewise Linear Function include file
Column Listing      SOLVE transport Using NLP From line 92


---- x  shipment quantities in cases

x(seattle,new-york)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
 (-2.250000E+9) cost
        1       supply(seattle)
        1       demand(new-york)

x(seattle,chicago)
                (.LO, .L, .UP, .M = 0, 25, +INF, 0)
      (-0.0153) cost
        1       supply(seattle)
        1       demand(chicago)

x(seattle,topeka)
                (.LO, .L, .UP, .M = 0, 275, +INF, 0)
      (-0.0049) cost
        1       supply(seattle)
        1       demand(topeka)

REMAINING 3 ENTRIES SKIPPED

---- z  total transportation costs in thousands of dollars

z
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       cost

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:43:35 Page 10
Piecewise Linear Function include file
Model Statistics    SOLVE transport Using NLP From line 92


MODEL STATISTICS

BLOCKS OF EQUATIONS           3     SINGLE EQUATIONS            6
BLOCKS OF VARIABLES           2     SINGLE VARIABLES            7
NON ZERO ELEMENTS            19     NON LINEAR N-Z              6
DERIVATIVE POOL              20     CONSTANT POOL              20
CODE LENGTH                  21


GENERATION TIME      =        0.001 SECONDS      4 MB  24.7.4 r58773 LEX-LEG


EXECUTION TIME       =        0.001 SECONDS      4 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:43:35 Page 11
Piecewise Linear Function include file
Solution Report     SOLVE transport Using NLP From line 92


               S O L V E      S U M M A R Y

     MODEL   transport           OBJECTIVE  z
     TYPE    NLP                 DIRECTION  MINIMIZE
     SOLVER  CONOPT              FROM LINE  92

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      2 Locally Optimal           
**** OBJECTIVE VALUE               10.1942

 RESOURCE USAGE, LIMIT          0.001      1000.000
 ITERATION COUNT, LIMIT         4    2000000000
 EVALUATION ERRORS              0             0
CONOPT 3         24.7.4 r58773 Released Sep 19, 2016 LEG x86 64bit/Linux      
*** Error Cannot open parameter file "/home/renigijus/gams/opt-mod-lib/gamslib/trnspwlx/conopt.opt"
*** Error Error code = 2; No such file or directory
 
 
    C O N O P T 3   version 3.17A
    Copyright (C)   ARKI Consulting and Development A/S
                    Bagsvaerdvej 246 A
                    DK-2880 Bagsvaerd, Denmark
 
 
    The model has 7 variables and 6 constraints
    with 19 Jacobian elements, 6 of which are nonlinear.
    The Hessian of the Lagrangian has 6 elements on the diagonal,
    0 elements below the diagonal, and 6 nonlinear variables.
 
                   Pre-triangular equations:   0
                   Post-triangular equations:  1
 
 
 ** Optimal solution. There are no superbasic variables.
 
 
 CONOPT time Total                            0.001 seconds
   of which: Function evaluations             0.000 =  0.0%
             1st Derivative evaluations       0.000 =  0.0%
 

                           LOWER          LEVEL          UPPER         MARGINAL

---- EQU cost                .              .              .             1.0000      

  cost  define objective function with economies of scale
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:43:35 Page 12
Piecewise Linear Function include file
Solution Report     SOLVE transport Using NLP From line 92


---- EQU supply  observe supply limit at plant i

                 LOWER          LEVEL          UPPER         MARGINAL

seattle          -INF          300.0000       350.0000          .          
san-diego        -INF          600.0000       600.0000        -0.0104      

---- EQU demand  satisfy demand at market j

                LOWER          LEVEL          UPPER         MARGINAL

new-york       325.0000       325.0000        +INF            0.0167      
chicago        300.0000       300.0000        +INF            0.0153      
topeka         275.0000       275.0000        +INF            0.0049      

---- VAR x  shipment quantities in cases

                          LOWER          LEVEL          UPPER         MARGINAL

seattle  .new-york          .              .            +INF      2.2500000E+9      
seattle  .chicago           .            25.0000        +INF             .          
seattle  .topeka            .           275.0000        +INF             .          
san-diego.new-york          .           325.0000        +INF             .          
san-diego.chicago           .           275.0000        +INF             .          
san-diego.topeka            .              .            +INF      1.2600000E+9      

                           LOWER          LEVEL          UPPER         MARGINAL

---- VAR z                 -INF           10.1942        +INF             .          

  z  total transportation costs in thousands of dollars


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:43:35 Page 13
Piecewise Linear Function include file
Equation Listing    SOLVE trnspwl Using MIP From line 258


---- supply  =L=  observe supply limit at plant i

supply(seattle)..  x(seattle,new-york) + x(seattle,chicago) + x(seattle,topeka) =L= 350 ; (LHS = 300)
     
supply(san-diego)..  x(san-diego,new-york) + x(san-diego,chicago) + x(san-diego,topeka) =L= 600 ; (LHS = 600)
     

---- demand  =G=  satisfy demand at market j

demand(new-york)..  x(seattle,new-york) + x(san-diego,new-york) =G= 325 ; (LHS = 325)
     
demand(chicago)..  x(seattle,chicago) + x(san-diego,chicago) =G= 300 ; (LHS = 300)
     
demand(topeka)..  x(seattle,topeka) + x(san-diego,topeka) =G= 275 ; (LHS = 275)
     

---- defobjdisc  =E=  

defobjdisc..  z + 0.0318198051533946*sqrtpSeg(s0,seattle,new-york) + 0.0216374675043084*sqrtpSeg(s0,seattle,chicago) + 0.0229102597104441*sqrtpSeg(s0,seattle,topeka) + 0.0318198051533946*sqrtpSeg(s0,san-diego,new-york)
     
      + 0.0229102597104441*sqrtpSeg(s0,san-diego,chicago) + 0.017819090885901*sqrtpSeg(s0,san-diego,topeka) - 0.0124823035871931*sqrtpSeg(s1,seattle,new-york) - 0.00848796643929129*sqrtpSeg(s1,seattle,chicago)
     
      - 0.00898725858277902*sqrtpSeg(s1,seattle,topeka) - 0.0124823035871931*sqrtpSeg(s1,san-diego,new-york) - 0.00898725858277902*sqrtpSeg(s1,san-diego,chicago) - 0.00699009000882812*sqrtpSeg(s1,san-diego,topeka)
     
      - 0.0090951351492436*sqrtpSeg(s2,seattle,new-york) - 0.00618469190148565*sqrtpSeg(s2,seattle,chicago) - 0.00654849730745539*sqrtpSeg(s2,seattle,topeka) - 0.0090951351492436*sqrtpSeg(s2,san-diego,new-york)
     
      - 0.00654849730745539*sqrtpSeg(s2,san-diego,chicago) - 0.00509327568357642*sqrtpSeg(s2,san-diego,topeka) - 0.00752292882162925*sqrtpSeg(s3,seattle,new-york) - 0.00511559159870789*sqrtpSeg(s3,seattle,chicago)
     
      - 0.00541650875157306*sqrtpSeg(s3,seattle,topeka) - 0.00752292882162925*sqrtpSeg(s3,san-diego,new-york) - 0.00541650875157306*sqrtpSeg(s3,san-diego,chicago) - 0.00421284014011238*sqrtpSeg(s3,san-diego,topeka)
     
      - 0.00656159987567524*sqrtpSeg(s4,seattle,new-york) - 0.00446188791545916*sqrtpSeg(s4,seattle,chicago) - 0.00472435191048617*sqrtpSeg(s4,seattle,topeka) - 0.00656159987567524*sqrtpSeg(s4,san-diego,new-york)
     
      - 0.00472435191048617*sqrtpSeg(s4,san-diego,chicago) - 0.00367449593037813*sqrtpSeg(s4,san-diego,topeka) - 0.00589531459954838*sqrtpSeg(s5,seattle,new-york) - 0.0040088139276929*sqrtpSeg(s5,seattle,chicago)
     
      - 0.00424462651167483*sqrtpSeg(s5,seattle,topeka) - 0.00589531459954838*sqrtpSeg(s5,san-diego,new-york) - 0.00424462651167483*sqrtpSeg(s5,san-diego,chicago) - 0.00330137617574709*sqrtpSeg(s5,san-diego,topeka) - 0.005625*sqrtpSeg(s6,seattle,new-york)
     
      - 0.003825*sqrtpSeg(s6,seattle,chicago) - 0.00405*sqrtpSeg(s6,seattle,topeka) - 0.005625*sqrtpSeg(s6,san-diego,new-york) - 0.00405*sqrtpSeg(s6,san-diego,chicago) - 0.00315*sqrtpSeg(s6,san-diego,topeka)
     
      - 1.59099025766973*sqrtpBin(s0,seattle,new-york) - 1.08187337521542*sqrtpBin(s0,seattle,chicago) - 1.14551298552221*sqrtpBin(s0,seattle,topeka) - 1.59099025766973*sqrtpBin(s0,san-diego,new-york) - 1.14551298552221*sqrtpBin(s0,san-diego,chicago)
     
      - 0.89095454429505*sqrtpBin(s0,san-diego,topeka) - 1.59099025766973*sqrtpBin(s1,seattle,new-york) - 1.08187337521542*sqrtpBin(s1,seattle,chicago) - 1.14551298552221*sqrtpBin(s1,seattle,topeka) - 1.59099025766973*sqrtpBin(s1,san-diego,new-york)
     
      - 1.14551298552221*sqrtpBin(s1,san-diego,chicago) - 0.89095454429505*sqrtpBin(s1,san-diego,topeka) - 2.46475150877325*sqrtpBin(s2,seattle,new-york) - 1.67603102596581*sqrtpBin(s2,seattle,chicago) - 1.77462108631674*sqrtpBin(s2,seattle,topeka)
     
      - 2.46475150877325*sqrtpBin(s2,san-diego,new-york) - 1.77462108631674*sqrtpBin(s2,san-diego,chicago) - 1.38026084491302*sqrtpBin(s2,san-diego,topeka) - 3.1014109692203*sqrtpBin(s3,seattle,new-york) - 2.1089594590698*sqrtpBin(s3,seattle,chicago)
     
      - 2.23301589783862*sqrtpBin(s3,seattle,topeka) - 3.1014109692203*sqrtpBin(s3,san-diego,new-york) - 2.23301589783862*sqrtpBin(s3,san-diego,chicago) - 1.73679014276337*sqrtpBin(s3,san-diego,topeka) - 3.62801598673435*sqrtpBin(s4,seattle,new-york)
     
      - 2.46705087097936*sqrtpBin(s4,seattle,chicago) - 2.61217151044873*sqrtpBin(s4,seattle,topeka) - 3.62801598673435*sqrtpBin(s4,san-diego,new-york) - 2.61217151044873*sqrtpBin(s4,san-diego,chicago) - 2.03168895257123*sqrtpBin(s4,san-diego,topeka)
     
      - 4.08732797803161*sqrtpBin(s5,seattle,new-york) - 2.7793830250615*sqrtpBin(s5,seattle,chicago) - 2.94287614418276*sqrtpBin(s5,seattle,topeka) - 4.08732797803161*sqrtpBin(s5,san-diego,new-york) - 2.94287614418276*sqrtpBin(s5,san-diego,chicago)
     
      - 2.2889036676977*sqrtpBin(s5,san-diego,topeka) - 4.5*sqrtpBin(s6,seattle,new-york) - 3.06*sqrtpBin(s6,seattle,chicago) - 3.24*sqrtpBin(s6,seattle,topeka) - 4.5*sqrtpBin(s6,san-diego,new-york) - 3.24*sqrtpBin(s6,san-diego,chicago)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:43:35 Page 14
Piecewise Linear Function include file
Equation Listing    SOLVE trnspwl Using MIP From line 258


     defobjdisc  =E=       
     
      - 2.52*sqrtpBin(s6,san-diego,topeka) =E= 0 ; (LHS = 10.1941773452727, INFES = 10.1941773452727 ****)
     

---- defcouplex  =E=  

defcouplex(seattle,new-york)..  x(seattle,new-york) + sqrtpSeg(s0,seattle,new-york) - sqrtpSeg(s1,seattle,new-york) - sqrtpSeg(s2,seattle,new-york) - sqrtpSeg(s3,seattle,new-york) - sqrtpSeg(s4,seattle,new-york) - sqrtpSeg(s5,seattle,new-york)
     
      - sqrtpSeg(s6,seattle,new-york) - 50*sqrtpBin(s0,seattle,new-york) - 50*sqrtpBin(s1,seattle,new-york) - 120*sqrtpBin(s2,seattle,new-york) - 190*sqrtpBin(s3,seattle,new-york) - 260*sqrtpBin(s4,seattle,new-york) - 330*sqrtpBin(s5,seattle,new-york)
     
      - 400*sqrtpBin(s6,seattle,new-york) =E= 0 ; (LHS = 0)
     
defcouplex(seattle,chicago)..  x(seattle,chicago) + sqrtpSeg(s0,seattle,chicago) - sqrtpSeg(s1,seattle,chicago) - sqrtpSeg(s2,seattle,chicago) - sqrtpSeg(s3,seattle,chicago) - sqrtpSeg(s4,seattle,chicago) - sqrtpSeg(s5,seattle,chicago)
     
      - sqrtpSeg(s6,seattle,chicago) - 50*sqrtpBin(s0,seattle,chicago) - 50*sqrtpBin(s1,seattle,chicago) - 120*sqrtpBin(s2,seattle,chicago) - 190*sqrtpBin(s3,seattle,chicago) - 260*sqrtpBin(s4,seattle,chicago) - 330*sqrtpBin(s5,seattle,chicago)
     
      - 400*sqrtpBin(s6,seattle,chicago) =E= 0 ; (LHS = 25, INFES = 25 ****)
     
defcouplex(seattle,topeka)..  x(seattle,topeka) + sqrtpSeg(s0,seattle,topeka) - sqrtpSeg(s1,seattle,topeka) - sqrtpSeg(s2,seattle,topeka) - sqrtpSeg(s3,seattle,topeka) - sqrtpSeg(s4,seattle,topeka) - sqrtpSeg(s5,seattle,topeka)
     
      - sqrtpSeg(s6,seattle,topeka) - 50*sqrtpBin(s0,seattle,topeka) - 50*sqrtpBin(s1,seattle,topeka) - 120*sqrtpBin(s2,seattle,topeka) - 190*sqrtpBin(s3,seattle,topeka) - 260*sqrtpBin(s4,seattle,topeka) - 330*sqrtpBin(s5,seattle,topeka)
     
      - 400*sqrtpBin(s6,seattle,topeka) =E= 0 ; (LHS = 275, INFES = 275 ****)
     
REMAINING 3 ENTRIES SKIPPED


---- defsqrtpSeg  =L=  

defsqrtpSeg(s1,seattle,new-york)..  sqrtpSeg(s1,seattle,new-york) - 70*sqrtpBin(s1,seattle,new-york) =L= 0 ; (LHS = 0)
     
defsqrtpSeg(s1,seattle,chicago)..  sqrtpSeg(s1,seattle,chicago) - 70*sqrtpBin(s1,seattle,chicago) =L= 0 ; (LHS = 0)
     
defsqrtpSeg(s1,seattle,topeka)..  sqrtpSeg(s1,seattle,topeka) - 70*sqrtpBin(s1,seattle,topeka) =L= 0 ; (LHS = 0)
     
REMAINING 27 ENTRIES SKIPPED


---- defsqrtpOne  =E=  

defsqrtpOne(seattle,new-york)..  sqrtpBin(s0,seattle,new-york) + sqrtpBin(s1,seattle,new-york) + sqrtpBin(s2,seattle,new-york) + sqrtpBin(s3,seattle,new-york) + sqrtpBin(s4,seattle,new-york) + sqrtpBin(s5,seattle,new-york) + sqrtpBin(s6,seattle,new-york)
      =E= 1 ; (LHS = 0, INFES = 1 ****)
     
defsqrtpOne(seattle,chicago)..  sqrtpBin(s0,seattle,chicago) + sqrtpBin(s1,seattle,chicago) + sqrtpBin(s2,seattle,chicago) + sqrtpBin(s3,seattle,chicago) + sqrtpBin(s4,seattle,chicago) + sqrtpBin(s5,seattle,chicago) + sqrtpBin(s6,seattle,chicago) =E= 1 ;
     
      (LHS = 0, INFES = 1 ****)
     
defsqrtpOne(seattle,topeka)..  sqrtpBin(s0,seattle,topeka) + sqrtpBin(s1,seattle,topeka) + sqrtpBin(s2,seattle,topeka) + sqrtpBin(s3,seattle,topeka) + sqrtpBin(s4,seattle,topeka) + sqrtpBin(s5,seattle,topeka) + sqrtpBin(s6,seattle,topeka) =E= 1 ;
     
      (LHS = 0, INFES = 1 ****)
     
REMAINING 3 ENTRIES SKIPPED
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:43:35 Page 15
Piecewise Linear Function include file
Equation Listing    SOLVE trnspwl Using MIP From line 258


---- defsqrtpinf1  =E=  

defsqrtpinf1(s0,seattle,new-york)..  - sqrtpBin(s0,seattle,new-york) - sqrtpSOS1(s0,seattle,new-york,pwls1__) =E= -1 ; (LHS = 0, INFES = 1 ****)
     
defsqrtpinf1(s0,seattle,chicago)..  - sqrtpBin(s0,seattle,chicago) - sqrtpSOS1(s0,seattle,chicago,pwls1__) =E= -1 ; (LHS = 0, INFES = 1 ****)
     
defsqrtpinf1(s0,seattle,topeka)..  - sqrtpBin(s0,seattle,topeka) - sqrtpSOS1(s0,seattle,topeka,pwls1__) =E= -1 ; (LHS = 0, INFES = 1 ****)
     
REMAINING 9 ENTRIES SKIPPED


---- defsqrtpinf2  =E=  

defsqrtpinf2(s0,seattle,new-york)..  sqrtpSeg(s0,seattle,new-york) - sqrtpSOS1(s0,seattle,new-york,pwls2__) =E= 0 ; (LHS = 0)
     
defsqrtpinf2(s0,seattle,chicago)..  sqrtpSeg(s0,seattle,chicago) - sqrtpSOS1(s0,seattle,chicago,pwls2__) =E= 0 ; (LHS = 0)
     
defsqrtpinf2(s0,seattle,topeka)..  sqrtpSeg(s0,seattle,topeka) - sqrtpSOS1(s0,seattle,topeka,pwls2__) =E= 0 ; (LHS = 0)
     
REMAINING 9 ENTRIES SKIPPED

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:43:35 Page 16
Piecewise Linear Function include file
Column Listing      SOLVE trnspwl Using MIP From line 258


---- x  shipment quantities in cases

x(seattle,new-york)
                (.LO, .L, .UP, .M = 0, 0, +INF, 2249999999.98334)
        1       supply(seattle)
        1       demand(new-york)
        1       defcouplex(seattle,new-york)

x(seattle,chicago)
                (.LO, .L, .UP, .M = 0, 25, +INF, 0)
        1       supply(seattle)
        1       demand(chicago)
        1       defcouplex(seattle,chicago)

x(seattle,topeka)
                (.LO, .L, .UP, .M = 0, 275, +INF, 0)
        1       supply(seattle)
        1       demand(topeka)
        1       defcouplex(seattle,topeka)

REMAINING 3 ENTRIES SKIPPED

---- z  total transportation costs in thousands of dollars

z
                (.LO, .L, .UP, .M = -INF, 10.1941773452727, +INF, 0)
        1       defobjdisc


---- sqrtpSeg  

sqrtpSeg(s0,seattle,new-york)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        0.0318  defobjdisc
        1       defcouplex(seattle,new-york)
        1       defsqrtpinf2(s0,seattle,new-york)

sqrtpSeg(s0,seattle,chicago)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        0.0216  defobjdisc
        1       defcouplex(seattle,chicago)
        1       defsqrtpinf2(s0,seattle,chicago)

sqrtpSeg(s0,seattle,topeka)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        0.0229  defobjdisc
        1       defcouplex(seattle,topeka)
        1       defsqrtpinf2(s0,seattle,topeka)

REMAINING 39 ENTRIES SKIPPED
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:43:35 Page 17
Piecewise Linear Function include file
Column Listing      SOLVE trnspwl Using MIP From line 258


---- sqrtpBin  

sqrtpBin(s0,seattle,new-york)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
       -1.591   defobjdisc
      -50       defcouplex(seattle,new-york)
        1       defsqrtpOne(seattle,new-york)
       -1       defsqrtpinf1(s0,seattle,new-york)

sqrtpBin(s0,seattle,chicago)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
       -1.0819  defobjdisc
      -50       defcouplex(seattle,chicago)
        1       defsqrtpOne(seattle,chicago)
       -1       defsqrtpinf1(s0,seattle,chicago)

sqrtpBin(s0,seattle,topeka)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
       -1.1455  defobjdisc
      -50       defcouplex(seattle,topeka)
        1       defsqrtpOne(seattle,topeka)
       -1       defsqrtpinf1(s0,seattle,topeka)

REMAINING 39 ENTRIES SKIPPED

---- sqrtpSOS1  

sqrtpSOS1(s0,seattle,new-york,pwls1__)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       defsqrtpinf1(s0,seattle,new-york)

sqrtpSOS1(s0,seattle,new-york,pwls2__)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       defsqrtpinf2(s0,seattle,new-york)

sqrtpSOS1(s0,seattle,chicago,pwls1__)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       defsqrtpinf1(s0,seattle,chicago)

REMAINING 21 ENTRIES SKIPPED
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:43:35 Page 18
Piecewise Linear Function include file
Model Statistics    SOLVE trnspwl Using MIP From line 258


MODEL STATISTICS

BLOCKS OF EQUATIONS           8     SINGLE EQUATIONS           72
BLOCKS OF VARIABLES           5     SINGLE VARIABLES          115
NON ZERO ELEMENTS           337     DISCRETE VARIABLES         42


GENERATION TIME      =        0.004 SECONDS      3 MB  24.7.4 r58773 LEX-LEG


EXECUTION TIME       =        0.005 SECONDS      3 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:43:35 Page 19
Piecewise Linear Function include file
Solution Report     SOLVE trnspwl Using MIP From line 258


               S O L V E      S U M M A R Y

     MODEL   trnspwl             OBJECTIVE  z
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CONVERT             FROM LINE  258

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      14 No Solution Returned     
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.000      1000.000
 ITERATION COUNT, LIMIT         0    2000000000

Convert 2.0      24.7.4 r58773 Released Sep 19, 2016 LEG x86 64bit/Linux      

--- Using Option File
Reading parameter(s) from "/home/renigijus/gams/opt-mod-lib/gamslib/trnspwlx/convert.opt"
>>  gams trnspwlx-scalar.gms
Finished reading from "/home/renigijus/gams/opt-mod-lib/gamslib/trnspwlx/convert.opt"
Gams      : trnspwlx-scalar.gms


No solution returned
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:43:35 Page 20
Piecewise Linear Function include file
Equation Listing    SOLVE transport Using NLP From line 260


---- cost  =E=  define objective function with economies of scale

cost..  - (2250000000)*x(seattle,new-york) - (0.0153)*x(seattle,chicago) - (0.00488448378215977)*x(seattle,topeka) - (0.00624037720753383)*x(san-diego,new-york) - (0.00488448378215977)*x(san-diego,chicago) - (1260000000)*x(san-diego,topeka) + z =E= 0 ;
     
      (LHS = 0)
     

---- supply  =L=  observe supply limit at plant i

supply(seattle)..  x(seattle,new-york) + x(seattle,chicago) + x(seattle,topeka) =L= 350 ; (LHS = 300)
     
supply(san-diego)..  x(san-diego,new-york) + x(san-diego,chicago) + x(san-diego,topeka) =L= 600 ; (LHS = 600)
     

---- demand  =G=  satisfy demand at market j

demand(new-york)..  x(seattle,new-york) + x(san-diego,new-york) =G= 325 ; (LHS = 325)
     
demand(chicago)..  x(seattle,chicago) + x(san-diego,chicago) =G= 300 ; (LHS = 300)
     
demand(topeka)..  x(seattle,topeka) + x(san-diego,topeka) =G= 275 ; (LHS = 275)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:43:35 Page 21
Piecewise Linear Function include file
Column Listing      SOLVE transport Using NLP From line 260


---- x  shipment quantities in cases

x(seattle,new-york)
                (.LO, .L, .UP, .M = 0, 0, +INF, 2249999999.98334)
 (-2.250000E+9) cost
        1       supply(seattle)
        1       demand(new-york)

x(seattle,chicago)
                (.LO, .L, .UP, .M = 0, 25, +INF, 0)
      (-0.0153) cost
        1       supply(seattle)
        1       demand(chicago)

x(seattle,topeka)
                (.LO, .L, .UP, .M = 0, 275, +INF, 0)
      (-0.0049) cost
        1       supply(seattle)
        1       demand(topeka)

REMAINING 3 ENTRIES SKIPPED

---- z  total transportation costs in thousands of dollars

z
                (.LO, .L, .UP, .M = -INF, 10.1941773452727, +INF, 0)
        1       cost

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:43:35 Page 22
Piecewise Linear Function include file
Model Statistics    SOLVE transport Using NLP From line 260


MODEL STATISTICS

BLOCKS OF EQUATIONS           3     SINGLE EQUATIONS            6
BLOCKS OF VARIABLES           2     SINGLE VARIABLES            7
NON ZERO ELEMENTS            19     NON LINEAR N-Z              6
DERIVATIVE POOL              20     CONSTANT POOL              20
CODE LENGTH                  21


GENERATION TIME      =        0.001 SECONDS      3 MB  24.7.4 r58773 LEX-LEG


EXECUTION TIME       =        0.001 SECONDS      3 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:43:35 Page 23
Piecewise Linear Function include file
Solution Report     SOLVE transport Using NLP From line 260


               S O L V E      S U M M A R Y

     MODEL   transport           OBJECTIVE  z
     TYPE    NLP                 DIRECTION  MINIMIZE
     SOLVER  CONOPT              FROM LINE  260

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      2 Locally Optimal           
**** OBJECTIVE VALUE               10.1942

 RESOURCE USAGE, LIMIT          0.001      1000.000
 ITERATION COUNT, LIMIT         4    2000000000
 EVALUATION ERRORS              0             0
CONOPT 3         24.7.4 r58773 Released Sep 19, 2016 LEG x86 64bit/Linux      
*** Error Cannot open parameter file "/home/renigijus/gams/opt-mod-lib/gamslib/trnspwlx/conopt.opt"
*** Error Error code = 2; No such file or directory
 
 
    C O N O P T 3   version 3.17A
    Copyright (C)   ARKI Consulting and Development A/S
                    Bagsvaerdvej 246 A
                    DK-2880 Bagsvaerd, Denmark
 
 
    The model has 7 variables and 6 constraints
    with 19 Jacobian elements, 6 of which are nonlinear.
    The Hessian of the Lagrangian has 6 elements on the diagonal,
    0 elements below the diagonal, and 6 nonlinear variables.
 
                   Pre-triangular equations:   0
                   Post-triangular equations:  1
 
 
 ** Optimal solution. There are no superbasic variables.
 
 
 CONOPT time Total                            0.001 seconds
   of which: Function evaluations             0.000 =  0.0%
             1st Derivative evaluations       0.000 =  0.0%
 

                           LOWER          LEVEL          UPPER         MARGINAL

---- EQU cost                .              .              .             1.0000      

  cost  define objective function with economies of scale
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:43:35 Page 24
Piecewise Linear Function include file
Solution Report     SOLVE transport Using NLP From line 260


---- EQU supply  observe supply limit at plant i

                 LOWER          LEVEL          UPPER         MARGINAL

seattle          -INF          300.0000       350.0000          .          
san-diego        -INF          600.0000       600.0000        -0.0104      

---- EQU demand  satisfy demand at market j

                LOWER          LEVEL          UPPER         MARGINAL

new-york       325.0000       325.0000        +INF            0.0167      
chicago        300.0000       300.0000        +INF            0.0153      
topeka         275.0000       275.0000        +INF            0.0049      

---- VAR x  shipment quantities in cases

                          LOWER          LEVEL          UPPER         MARGINAL

seattle  .new-york          .              .            +INF      2.2500000E+9      
seattle  .chicago           .            25.0000        +INF             .          
seattle  .topeka            .           275.0000        +INF             .          
san-diego.new-york          .           325.0000        +INF             .          
san-diego.chicago           .           275.0000        +INF             .          
san-diego.topeka            .              .            +INF      1.2600000E+9      

                           LOWER          LEVEL          UPPER         MARGINAL

---- VAR z                 -INF           10.1942        +INF             .          

  z  total transportation costs in thousands of dollars


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS


EXECUTION TIME       =        0.001 SECONDS      2 MB  24.7.4 r58773 LEX-LEG


USER: Remigijus Paulavicius, Single User License     S170731:0859AO-LNX
      Imperial College London, Dept. of Chemical Engineering    DC13449
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      /home/renigijus/gams/opt-mod-lib/gamslib/trnspwlx/trnspwlx.gms
Output     /home/renigijus/gams/opt-mod-lib/gamslib/trnspwlx/trnspwlx-scalar.gms.lst
