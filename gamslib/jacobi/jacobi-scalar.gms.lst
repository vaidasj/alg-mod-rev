GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:26:34 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  option MCP=convert;
   2  option MCP=convert;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:26:34 Page 2
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
C o m p i l a t i o n


   4   
       
      This example outlines procedures for implementing various serial and
      parallel iterative schemes. For simplicity, a system of linear equations
      is selected. This schema extends naturally to other problem types like
      nonlinear systems and mixed complementarity problems.
       
      We will implement various ways to solve the problem:
       
         Gauss Seidel      serial
         Jacobi - parallel sub problems
         Gauss-Seidel      Asynchronous
       
       
      Bertsekas, D P, and Tsitsiklis, J N, Parallel and distributed
      computation: numerical methods. Prentice-Hall, Inc., Upper Saddle
      River, NJ, USA, 1989.
       
  26   
  32   
  33  set i problem size /i1*i50/; alias(i,j);
  34   
  35  variables x(i); equations e(i); parameter A(i,j), b(i);
  36   
  37  e(i)..  sum(j, A(i,j)*x(j)) =e= b(i); model lin /e.x/;
  38   
  39  b(i) = 1; A(i,i) = 1; A(i,j)$(not sameas(i,j)) = 0.001;
  40   
  41  lin.solprint  = 2;       ! suppress solution output
  42  lin.solvelink = 2; ! keep gams memory resident
  43  lin.holdfixed = 1;                      ! treat fixed vars as constants
  44   
  45  sets iters       iteration count / iter0*iter100 /
  46       k           problem partition blocks  / block_1*block_5 /
  47       active(k,i) active vars in partition k
  48       fixed(k,i)  fixed vars in partition k;
  49  alias(kp,k);
  50   
  51  parameters resrep(iters,*) Summary Residual Report
  52             solrep(i,*)     Summary solution report
  53             stats           Summary statistics
  54             res(iters)      max residual
  55             h(k)            handles
  56             tol             convergence tolerance / 1e-4 /
  57             iter            iteration counter
  58             curres          intermediate residual values
  59             t1              temporary timer vars ;
  60   
  61   
  62  active(k,i) = ceil(ord(i)*card(k)/card(i)) = ord(k);
  63  fixed(k,i)  = not active(k,i);
  64   
  65   
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:26:34 Page 3
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
C o m p i l a t i o n


  66  **** solve big problem
  67   
  68  t1 := TimeElapsed;
  69  solve lin us mcp;
  70  stats('elapsed','Big Problem') = TimeElapsed - t1;
  71  stats('solves' ,'Big Problem') = 1;
  72   
  73  solrep(i,'Big Problem') = x.l(i);
  74   
  75   
  76  ****  Gauss Seidel - all serial
  77   
  78  x.l(i) = 0; res(iters) = 0; res('iter0') = smax(i, abs(b(i)));
  79  t1 := TimeElapsed;
  80  loop(iters$(res(iters) > tol),
  81    loop(k,
  82      x.fx(i)$fixed(k,i) = x.l(i);
  83      solve lin using mcp;
  84      x.lo(i)$fixed(k,i) = -inf;
  85      x.up(i)$fixed(k,i) =  inf );
  86    res(iters+1) = smax(i, abs(b(i) - sum(j, A(i,j)*x.l(j)))) );
  87   
  88  stats('elapsed','Gauss Seidel') = TimeElapsed - t1;
  89  stats('solves' ,'Gauss Seidel') = (card(res)-1)*card(k);
  90   
  91  resrep(iters,'Gauss Seidel') = res(iters);
  92  solrep(i,'Gauss Seidel') = x.l(i);
  93   
  94   
  95  **** Jacobi - parallel sub problems
  96   
  97  lin.solvelink = 3; ! set grid mode
  98   
  99  x.l(i) = 0; res(iters) = 0; res('iter0') = smax(i, abs(b(i)));
 100  t1 := TimeElapsed;
 101  loop(iters$(res(iters) > tol),
 102     loop(k,                            ! submitting loop
 103        x.fx(i)$fixed(k,i) = x.l(i);
 104        solve lin using mcp; h(k) = lin.handle;
 105        x.lo(i)$fixed(k,i) = -inf;
 106        x.up(i)$fixed(k,i) =  inf );
 107     repeat                             ! collection loop
 108         loop(k$handlecollect(h(k)),
 109            display$handledelete(h(k)) 'trouble deleting handle';
 110            h(k) = 0  );                  ! mark problem as solved
 111     display$sleep(card(h)*0.1) ' sleep a bit';
 112     until card(h) = 0 or timeelapsed > 10;
 113     res(iters+1) = smax(i, abs(b(i) - sum(j, A(i,j)*x.l(j)))) );
 114   
 115  stats('elapsed','Jacobi') = TimeElapsed - t1;
 116  stats('solves' ,'Jacobi') = (card(res)-1)*card(k);
 117  resrep(iters,'Jacobi') = res(iters);
 118  solrep(i,'Jacopi') = x.l(i);
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:26:34 Page 4
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
C o m p i l a t i o n


 119   
 120   
 121  **** Asynchronous Gauss-Seidel
 122   
 123  lin.solvelink = 3;   ! set grid mode
 124   
 125  x.l(i) = 0; res(iters) = 0; res('iter0') = smax(i, abs(b(i)));
 126  iter = 0; t1 := TimeElapsed;
 127   
 128  loop(k,                          ! initial submission loop
 129    x.fx(i)$fixed(k,i) = x.l(i);
 130    solve lin using mcp;
 131    h(k) = lin.handle;
 132    x.lo(i)$fixed(k,i) = -inf;
 133    x.up(i)$fixed(k,i) =  inf );
 134   
 135  repeat   ! retriev and submit
 136    loop(k$handlecollect(h(k)),
 137       display$handledelete(h(k)) 'trouble deleting handle';
 138       h(k) = 0;
 139       iter = iter + 1;
 140       curres = smax(i, abs(b(i) - sum(j, A(i,j)*x.l(j))));
 141       res(iters)$(ord(iters) = iter + 1) = curres;
 142       if(curres > tol,
 143          loop(kp$(h(kp)=0 and
 144                   smax(active(kp,i), abs(b(i) - sum(j, A(i,j)*x.l(j)))) > tol),
 145             x.fx(i)$fixed(kp,i) = x.l(i);
 146             solve lin using mcp;  ! submit new problem
 147             h(kp) = lin.handle;
 148             x.lo(i)$fixed(kp,i) = -inf;
 149             x.up(i)$fixed(kp,i) =  inf ) ) );
 150     display$sleep(card(h)*0.1) ' sleep a bit',curres;
 151  until card(h) = 0 or timeelapsed > 100;
 152   
 153   
 154  stats('elapsed','Async Gauss') = TimeElapsed - t1;
 155  stats('solves' ,'Async Gauss') = card(res)-1;
 156   
 157  resrep(iters,'Async Gauss') = res(iters);
 158  solrep(i,'Async Gauss') = x.l(i);
 159   
 160  option dispwidth=15,decimals=6;
 161  display resrep,solrep,stats;


COMPILATION TIME     =        0.002 SECONDS      3 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:26:34 Page 5
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
Model Analysis      SOLVE lin Using MCP From line 69



No solution returned
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:26:34 Page 6
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
Model Analysis      SOLVE lin Using MCP From line 83



No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:26:34 Page 7
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
Model Analysis      SOLVE lin Using MCP From line 83


No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:26:34 Page 8
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
Model Analysis      SOLVE lin Using MCP From line 83



No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      12/13/18 11:26:34 Page 9
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
Model Analysis      SOLVE lin Using MCP From line 83


No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:26:34 Page 10
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
Model Analysis      SOLVE lin Using MCP From line 83



No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:26:34 Page 11
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
Model Analysis      SOLVE lin Using MCP From line 83


No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:26:34 Page 12
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
Model Analysis      SOLVE lin Using MCP From line 83



No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:26:34 Page 13
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
Model Analysis      SOLVE lin Using MCP From line 83


No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:26:34 Page 14
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
Model Analysis      SOLVE lin Using MCP From line 83



No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:26:34 Page 15
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
Model Analysis      SOLVE lin Using MCP From line 83


No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:26:34 Page 16
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
Model Analysis      SOLVE lin Using MCP From line 83



No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:26:34 Page 17
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
Model Analysis      SOLVE lin Using MCP From line 83


No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:26:34 Page 18
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
Model Analysis      SOLVE lin Using MCP From line 83



No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:26:34 Page 19
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
Model Analysis      SOLVE lin Using MCP From line 83


No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:26:34 Page 20
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
Model Analysis      SOLVE lin Using MCP From line 83



No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:26:34 Page 21
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
Model Analysis      SOLVE lin Using MCP From line 83


No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:26:34 Page 22
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
Model Analysis      SOLVE lin Using MCP From line 83



No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:26:34 Page 23
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
Model Analysis      SOLVE lin Using MCP From line 83


No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:26:34 Page 24
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
Model Analysis      SOLVE lin Using MCP From line 83



No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

No solution returned

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:26:34 Page 25
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
Model Analysis      SOLVE lin Using MCP From line 83


No solution returned

No solution returned
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:26:34 Page 26
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
E x e c u t i o n


----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:26:34 Page 27
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
E x e c u t i o n


----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    111  sleep a bit
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:26:34 Page 28
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
E x e c u t i o n


            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:26:34 Page 29
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
E x e c u t i o n


----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:26:34 Page 30
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
E x e c u t i o n


            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:26:34 Page 31
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
E x e c u t i o n


----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:26:34 Page 32
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
E x e c u t i o n


            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:26:34 Page 33
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
E x e c u t i o n


----    150  sleep a bit
            PARAMETER curres               =        1.000  intermediate residual values

----    161 PARAMETER resrep  Summary Residual Report

            Gauss Seidel           Jacobi      Async Gauss

iter0           1.000000         1.000000         1.000000
iter1           1.000000         1.000000         1.000000
iter2           1.000000         1.000000         1.000000
iter3           1.000000         1.000000         1.000000
iter4           1.000000         1.000000         1.000000
iter5           1.000000         1.000000         1.000000
iter6           1.000000         1.000000         1.000000
iter7           1.000000         1.000000         1.000000
iter8           1.000000         1.000000         1.000000
iter9           1.000000         1.000000         1.000000
iter10          1.000000         1.000000         1.000000
iter11          1.000000         1.000000         1.000000
iter12          1.000000         1.000000         1.000000
iter13          1.000000         1.000000         1.000000
iter14          1.000000         1.000000         1.000000
iter15          1.000000         1.000000         1.000000
iter16          1.000000         1.000000         1.000000
iter17          1.000000         1.000000         1.000000
iter18          1.000000         1.000000         1.000000
iter19          1.000000         1.000000         1.000000
iter20          1.000000         1.000000         1.000000
iter21          1.000000         1.000000         1.000000
iter22          1.000000         1.000000         1.000000
iter23          1.000000         1.000000         1.000000
iter24          1.000000         1.000000         1.000000
iter25          1.000000         1.000000         1.000000
iter26          1.000000         1.000000         1.000000
iter27          1.000000         1.000000         1.000000
iter28          1.000000         1.000000         1.000000
iter29          1.000000         1.000000         1.000000
iter30          1.000000         1.000000         1.000000
iter31          1.000000         1.000000         1.000000
iter32          1.000000         1.000000         1.000000
iter33          1.000000         1.000000         1.000000
iter34          1.000000         1.000000         1.000000
iter35          1.000000         1.000000         1.000000
iter36          1.000000         1.000000         1.000000
iter37          1.000000         1.000000         1.000000
iter38          1.000000         1.000000         1.000000
iter39          1.000000         1.000000         1.000000
iter40          1.000000         1.000000         1.000000
iter41          1.000000         1.000000         1.000000
iter42          1.000000         1.000000         1.000000
iter43          1.000000         1.000000         1.000000
iter44          1.000000         1.000000         1.000000
iter45          1.000000         1.000000         1.000000
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:26:34 Page 34
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
E x e c u t i o n


        161 PARAMETER resrep  Summary Residual Report

            Gauss Seidel           Jacobi      Async Gauss

iter46          1.000000         1.000000         1.000000
iter47          1.000000         1.000000         1.000000
iter48          1.000000         1.000000         1.000000
iter49          1.000000         1.000000         1.000000
iter50          1.000000         1.000000         1.000000
iter51          1.000000         1.000000         1.000000
iter52          1.000000         1.000000         1.000000
iter53          1.000000         1.000000         1.000000
iter54          1.000000         1.000000         1.000000
iter55          1.000000         1.000000         1.000000
iter56          1.000000         1.000000         1.000000
iter57          1.000000         1.000000         1.000000
iter58          1.000000         1.000000         1.000000
iter59          1.000000         1.000000         1.000000
iter60          1.000000         1.000000         1.000000
iter61          1.000000         1.000000         1.000000
iter62          1.000000         1.000000         1.000000
iter63          1.000000         1.000000         1.000000
iter64          1.000000         1.000000         1.000000
iter65          1.000000         1.000000         1.000000
iter66          1.000000         1.000000         1.000000
iter67          1.000000         1.000000         1.000000
iter68          1.000000         1.000000         1.000000
iter69          1.000000         1.000000         1.000000
iter70          1.000000         1.000000         1.000000
iter71          1.000000         1.000000         1.000000
iter72          1.000000         1.000000         1.000000
iter73          1.000000         1.000000         1.000000
iter74          1.000000         1.000000         1.000000
iter75          1.000000         1.000000         1.000000
iter76          1.000000         1.000000         1.000000
iter77          1.000000         1.000000         1.000000
iter78          1.000000         1.000000         1.000000
iter79          1.000000         1.000000         1.000000
iter80          1.000000         1.000000         1.000000
iter81          1.000000         1.000000         1.000000
iter82          1.000000         1.000000         1.000000
iter83          1.000000         1.000000         1.000000
iter84          1.000000         1.000000         1.000000
iter85          1.000000         1.000000         1.000000
iter86          1.000000         1.000000         1.000000
iter87          1.000000         1.000000         1.000000
iter88          1.000000         1.000000         1.000000
iter89          1.000000         1.000000         1.000000
iter90          1.000000         1.000000         1.000000
iter91          1.000000         1.000000         1.000000
iter92          1.000000         1.000000         1.000000
iter93          1.000000         1.000000         1.000000
iter94          1.000000         1.000000         1.000000
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     12/13/18 11:26:34 Page 35
Asynchronous Jacobi Methods (JACOBI,SEQ=329)
E x e c u t i o n


        161 PARAMETER resrep  Summary Residual Report

            Gauss Seidel           Jacobi      Async Gauss

iter95          1.000000         1.000000         1.000000
iter96          1.000000         1.000000         1.000000
iter97          1.000000         1.000000         1.000000
iter98          1.000000         1.000000         1.000000
iter99          1.000000         1.000000         1.000000
iter100         1.000000         1.000000         1.000000


----    161 PARAMETER solrep  Summary solution report

                      ( ALL         0.000000 )


----    161 PARAMETER stats  Summary statistics

             Big Problem     Gauss Seidel           Jacobi      Async Gauss

elapsed         0.012000         3.247000        23.845999        73.265000
solves          1.000000       500.000000       500.000000       100.000000



EXECUTION TIME       =      100.372 SECONDS      4 MB  24.7.4 r58773 LEX-LEG


USER: Remigijus Paulavicius, Single User License     S170731:0859AO-LNX
      Imperial College London, Dept. of Chemical Engineering    DC13449
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      /home/renigijus/gams/opt-mod-lib/gamslib/jacobi/jacobi.gms
Output     /home/renigijus/gams/opt-mod-lib/gamslib/jacobi/jacobi-scalar.gms.lst
